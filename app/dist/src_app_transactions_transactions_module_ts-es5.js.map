{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_3__","element_r25","CompanyWithdrawalHistoryComponent","transactionService","helperService","_angular_material_table__WEBPACK_IMPORTED_MODULE_4__","getWithdrawalHiistory","getCompanyWithdrawalHistory","startDate","endDate","subscribe","companyWithdrawal","length","dataSource","sort","tableLoading","value","pageSize","pageIndex","formatDate","selectors","viewQuery","_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_6__","element_r32","element_r45","element_r48","OrderHistoryComponent","userService","name","code","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","start","end","Date","getIsLoading","isLoading","getOrderHiistory","getuserGroup","order","userInfo","getUserInfo","cancelling_grace_period_in_hours","delievery_date","delivery_date","now","userGroup","getUserGroup","isStaff","displayedColumns","isVend","isComp","getVendorArray","isAcct","isSid","getCompanyArray","getVendors","getVendorsUpdate","vendors","venArray","results","map","element","bussiness_name","id","user","vendorArray","getCompanyList","getCompanyListUpdate","company","comArray","companyArray","getOrderHistory","status","vendor","orderHistory","count","index","position","console","log","downloading","data","food","_a","quantity","platform","vendor_user_id","vendor_user_id_full","_b","comment","exportExcel","transactionId","isVoiding","cancelOrder","_angular_material_sort__WEBPACK_IMPORTED_MODULE_8__","height","minHeight","SidWithdrawalHistoryComponent","getSidWithdrawalHistory","TopUpHistoryComponent","getTopUpHistory","amount","reference_no","date","date_created","decls","vars","consts","template","TopupPersonalComponent","notificationService","reference","Math","ceil","random","getReference","options","ref","email","key","public_key","channels","paystackButton","nativeElement","click","title","info","_angular_core__WEBPACK_IMPORTED_MODULE_5__","TotalCostComponent","getTotalCost","first_name","last_name","department","staff_level","total_sum","no_of_days","company_share","staff_share","routes","path","component","_order_history_order_history_component__WEBPACK_IMPORTED_MODULE_1__","_total_cost_total_cost_component__WEBPACK_IMPORTED_MODULE_5__","_company_withdrawal_history_company_withdrawal_history_component__WEBPACK_IMPORTED_MODULE_0__","_vendor_withdrawal_history_vendor_withdrawal_history_component__WEBPACK_IMPORTED_MODULE_6__","_sid_withdrawal_history_sid_withdrawal_history_component__WEBPACK_IMPORTED_MODULE_2__","_void_transactions_void_transactions_component__WEBPACK_IMPORTED_MODULE_7__","_top_up_history_top_up_history_component__WEBPACK_IMPORTED_MODULE_3__","_topup_personal_topup_personal_component__WEBPACK_IMPORTED_MODULE_4__","TransactionsRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_9__","imports","exports","TransactionsModule","_angular_common__WEBPACK_IMPORTED_MODULE_11__","_transactions_routing_module__WEBPACK_IMPORTED_MODULE_0__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_12__","_angular_material_table__WEBPACK_IMPORTED_MODULE_13__","_angular_material_sort__WEBPACK_IMPORTED_MODULE_14__","_angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_15__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_16__","_angular_material_button__WEBPACK_IMPORTED_MODULE_17__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_18__","_angular_material_input__WEBPACK_IMPORTED_MODULE_19__","_angular_material_datepicker__WEBPACK_IMPORTED_MODULE_20__","_angular_material_select__WEBPACK_IMPORTED_MODULE_21__","angular4_paystack__WEBPACK_IMPORTED_MODULE_22__","declarations","_company_withdrawal_history_company_withdrawal_history_component__WEBPACK_IMPORTED_MODULE_1__","_vendor_withdrawal_history_vendor_withdrawal_history_component__WEBPACK_IMPORTED_MODULE_2__","_sid_withdrawal_history_sid_withdrawal_history_component__WEBPACK_IMPORTED_MODULE_3__","_order_history_order_history_component__WEBPACK_IMPORTED_MODULE_4__","_top_up_history_top_up_history_component__WEBPACK_IMPORTED_MODULE_6__","_topup_personal_topup_personal_component__WEBPACK_IMPORTED_MODULE_8__","_total_cost_total_cost_component__WEBPACK_IMPORTED_MODULE_9__","VendorWithdrawalHistoryComponent","getVendorWithdrawalHistory","updated_status","receipient","transfer_code","element_r31","VoidTransactionsComponent","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","getVoidedTransactions","voidedTransactions"],"sources":["webpack:///src/app/transactions/company-withdrawal-history/company-withdrawal-history.component.html","webpack:///src/app/transactions/company-withdrawal-history/company-withdrawal-history.component.ts","webpack:///src/app/transactions/order-history/order-history.component.html","webpack:///src/app/transactions/order-history/order-history.component.ts","webpack:///src/app/transactions/sid-withdrawal-history/sid-withdrawal-history.component.html","webpack:///src/app/transactions/sid-withdrawal-history/sid-withdrawal-history.component.ts","webpack:///src/app/transactions/top-up-history/top-up-history.component.html","webpack:///src/app/transactions/top-up-history/top-up-history.component.ts","webpack:///src/app/transactions/topup-personal/topup-personal.component.ts","webpack:///src/app/transactions/topup-personal/topup-personal.component.html","webpack:///src/app/transactions/total-cost/total-cost.component.html","webpack:///src/app/transactions/total-cost/total-cost.component.ts","webpack:///src/app/transactions/transactions-routing.module.ts","webpack:///src/app/transactions/transactions.module.ts","webpack:///src/app/transactions/vendor-withdrawal-history/vendor-withdrawal-history.component.html","webpack:///src/app/transactions/vendor-withdrawal-history/vendor-withdrawal-history.component.ts","webpack:///src/app/transactions/void-transactions/void-transactions.component.html","webpack:///src/app/transactions/void-transactions/void-transactions.component.ts"],"sourcesContent":["<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>{{title | titlecase}}</h5>\n    </div>\n    <div class=\"card-body\">\n      <app-table-functions [downloading] (setEndDate)=\"setEndDate($event)\" (setStartDate)=\"setStartDate($event)\">\n      </app-table-functions>\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading\">\n          <mat-spinner *ngIf=\"tableLoading\"></mat-spinner>\n        </div>\n\n        <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n          <!-- Position Column -->\n          <ng-container matColumnDef=\"position\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n          </ng-container>\n\n          <!-- Contact Name Column -->\n          <ng-container matColumnDef=\"bussiness_name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.bussiness_name || 'N/A'}}</td>\n          </ng-container>\n\n          <!-- Contact Email Column -->\n          <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Company Name Column -->\n          <ng-container matColumnDef=\"account_info\">\n            <th mat-header-cell *matHeaderCellDef> Account Info </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.account_number || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Balance Column -->\n          <ng-container matColumnDef=\"balance\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Balance </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.balance }} </td>\n          </ng-container>\n\n          <!-- Star Column -->\n          <ng-container matColumnDef=\"star\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element\">\n              <mat-icon>more_vert</mat-icon>\n            </td>\n          </ng-container>\n\n\n          <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n          <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n              <div class=\"example-element-detail\"\n                [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                <div class=\"example-element-diagram\">\n                  <div class=\"example-element-position\"> {{element.position}} </div>\n                  <div class=\"example-element-symbol\"> {{element.position}} </div>\n                  <div class=\"example-element-name\"> {{element.name}} </div>\n                  <div class=\"example-element-weight\"> {{element.position}} </div>\n                </div>\n                <div class=\"example-element-description\">\n                  {{element.description}}\n                </div>\n              </div>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n            [class.example-expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = expandedElement === element ? null : element\">\n          </tr>\n          <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n        </table>\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { TransactionService } from \"../transaction.service\";\n\n@Component({\n  selector: \"app-company-withdrawal-history\",\n  templateUrl: \"./company-withdrawal-history.component.html\",\n  styleUrls: [\"./company-withdrawal-history.component.scss\"],\n})\nexport class CompanyWithdrawalHistoryComponent implements OnInit {\n  // dataSource: any[] = ;\n  downloading;\n  private pageSize: number;\n  private pageIndex: number;\n  tableLoading: boolean = true;\n  dataSource = new MatTableDataSource([]);\n  title = \"Company Withdrawal History\";\n  displayedColumns: any[] = [\n    \"position\",\n    \"bussiness_name\",\n    \"email\",\n    \"account_info\",\n    \"balance\",\n    \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n  startDate: string;\n  endDate: string;\n\n  constructor(\n    private transactionService: TransactionService,\n    private helperService: HelperService\n  ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.getWithdrawalHiistory();\n  }\n\n  getWithdrawalHiistory() {\n    this.transactionService\n      .getCompanyWithdrawalHistory(this.startDate, this.endDate)\n      .subscribe((companyWithdrawal) => {\n        this.length = companyWithdrawal.length;\n        this.dataSource = new MatTableDataSource(companyWithdrawal);\n        this.dataSource.sort = this.sort;\n        this.tableLoading = false;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.tableLoading = true;\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getWithdrawalHiistory();\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getWithdrawalHiistory();\n    this.tableLoading = true;\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>{{title | titlecase}}</h5>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions (exportExcel)=\"onExportExcel()\" [downloading]=\"downloading\" [vendorArray]=\"vendorArray\"\n        [statusArray]=\"statusArray\" [companyArray]=\"companyArray\" (vendorChange)=\"vendorChange($event)\"\n        (companyChange)=\"companyChange($event)\" (statusChange)=\"statusChange($event)\" (setEndDate)=\"setEndDate($event)\"\n        (setStartDate)=\"setStartDate($event)\" [rangePicker]=\"true\"></app-table-functions>\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n          <mat-spinner></mat-spinner>\n        </div>\n\n        <div class=\"table-responsive\">\n\n          <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n            <!-- position Column -->\n            <!-- <ng-container matColumnDef=\"position\" sticky>\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container> -->\n\n            <!-- User Column -->\n            <ng-container *ngIf=\"isVend || isComp || isAcct || isSid\" matColumnDef=\"user\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n              <td mat-cell *matCellDef=\"let element\">\n                {{element?.user| titlecase}}\n              </td>\n            </ng-container>\n\n            <!-- Company Column -->\n            <ng-container *ngIf=\"isVend || isSid\" matColumnDef=\"company\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Company </th>\n              <td mat-cell *matCellDef=\"let element\">\n                {{element?.company| titlecase}}\n              </td>\n            </ng-container>\n\n            <!-- Vendor Column -->\n            <ng-container *ngIf=\"isComp || isAcct || isSid\" matColumnDef=\"vendor\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Vendor </th>\n              <td mat-cell *matCellDef=\"let element\">\n                {{element?.vendor_user_id| titlecase}}\n              </td>\n            </ng-container>\n\n            <!-- Food Column -->\n            <ng-container *ngIf=\"isStaff\" matColumnDef=\"food\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Food </th>\n              <td mat-cell *matCellDef=\"let element\">\n                <img class=\"rounded-circle image-radius m-r-5\" [src]=\"element?.food?.image\" [alt]=\"element?.food?.name\">\n                {{element?.food?.name || 'N/A' | titlecase}}\n              </td>\n            </ng-container>\n\n            <ng-container *ngIf=\"isVend || isComp || isAcct || isSid\" matColumnDef=\"food\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Food </th>\n              <td mat-cell *matCellDef=\"let element\">\n                {{element?.food || 'N/A' | titlecase}}\n              </td>\n            </ng-container>\n\n\n            <!-- Quantity Ordered Column -->\n            <ng-container matColumnDef=\"quantity\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Quantity </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element?.quantity }} </td>\n            </ng-container>\n\n            <!-- Platform Column -->\n            <ng-container matColumnDef=\"platform\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Platform </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element?.platform | platform }} </td>\n            </ng-container>\n\n            <ng-container *ngIf=\"isStaff\" matColumnDef=\"vendor_user_id\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Vendor </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element?.vendor_user_id_full?.bussiness_name }} </td>\n            </ng-container>\n\n            <ng-container *ngIf=\"isVend || isComp || isAcct || isSid\" matColumnDef=\"comment\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Order Note </th>\n              <td [title]=\"element?.comment\" mat-cell *matCellDef=\"let element\"> {{element?.comment | slice : 0 : 25 }}\n              </td>\n            </ng-container>\n\n            <!-- <ng-container matColumnDef=\"status\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n              <td\n                [ngClass]=\"{'text-success': element?.status?.toLowerCase() == 'del', 'text-primary': element?.status?.toLowerCase() == 'pend', 'text-danger': element?.status?.toLowerCase() != 'del' || element?.status?.toLowerCase() != 'pend'}\"\n                mat-cell *matCellDef=\"let element\"> {{element?.status | transactionStatus | titlecase }} </td>\n            </ng-container> -->\n\n            <ng-container matColumnDef=\"status\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n              <td\n                [ngClass]=\"{'text-success': element?.status?.toLowerCase() == 'delivered', 'text-primary': element?.status?.toLowerCase() == 'pending', 'text-danger': element?.status?.toLowerCase() != 'delivered' || element?.status?.toLowerCase() != 'pending'}\"\n                mat-cell *matCellDef=\"let element\"> {{element?.status | titlecase }} </td>\n            </ng-container>\n\n            <!-- Star Column -->\n            <ng-container matColumnDef=\"star\" stickyEnd>\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td mat-cell *matCellDef=\"let element\">\n                <button (click)=\"expandedElement = expandedElement === element ? null : element\" mat-icon-button\n                  class=\"btn btn-outline-primary\">\n                  <mat-icon>expand_more</mat-icon>\n                </button>\n              </td>\n            </ng-container>\n\n\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n            <ng-container matColumnDef=\"expandedDetail\">\n              <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n                <div class=\"example-element-detail\"\n                  [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                  <div class=\"mt-3 card bg-secondary text-gray-1\">\n                    <div class=\"card-body \">\n                      <div class=\"d-flex\">\n                        <ng-container *ngIf=\"isStaff\">\n                          <div class=\"col-2\">\n                            <img [src]=\"element?.food?.image\" class=\"img-thumbnail\" [alt]=\"element?.food?.name\">\n                            <br>\n                          </div>\n                        </ng-container>\n\n                        <div class=\"row\" [ngClass]=\"{'col-10': isStaff ===true, 'col-12': isVend ===true}\">\n                          <div class=\"col-7\">\n                            <div class=\"row\">\n                              <p class=\"mb-0 col-12\">\n                                Name\n                              </p>\n                              <ng-container *ngIf=\"isStaff\">\n                                <h6 class=\"col-12\">\n                                  {{element?.food?.name | titlecase}}\n                                </h6>\n                                <p class=\"text-justify col-12\">\n                                  {{element?.food?.description }}\n                                </p>\n                              </ng-container>\n                              <ng-container *ngIf=\"isVend || isComp || isAcct || isSid\">\n                                <h6 class=\"col-12\">\n                                  {{element?.food | titlecase}}\n                                </h6>\n                              </ng-container>\n\n                              <ng-container *ngIf=\"isStaff\">\n                                <!-- <div class=\"col-6\">\n                                  <p class=\"mb-0\">Category</p>\n                                  <h6>\n                                    {{element?.food?.category_full?.name }}\n                                  </h6>\n                                </div> -->\n                                <div class=\"col-6\">\n                                  <p class=\"mb-0\">Vendor</p>\n                                  <h6>\n                                    {{element?.vendor_user_id_full?.bussiness_name }}\n                                  </h6>\n                                </div>\n                              </ng-container>\n\n                            </div>\n\n                            <mat-form-field class=\"mt-3 comment\" appearance=\"outline\">\n                              <mat-label>Order note</mat-label>\n                              <textarea readonly [value]=\"element?.comment\" matInput></textarea>\n                            </mat-form-field>\n                          </div>\n                          <div class=\"col-5\">\n                            <div class=\"row\">\n                              <div class=\"col-12 d-flex justify-content-between\">\n                                <div class=\"\">\n                                  <p class=\"mb-0\">Unit Price</p>\n                                  <h6>\n                                    {{element?.food.unit_price || element?.unit_price | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n                                  </h6>\n                                </div>\n                                <div class=\"\">\n                                  <p class=\"mb-0 text-right\">Quantity</p>\n                                  <h6 class=\"text-right\">\n                                    {{element?.quantity | number}}\n                                  </h6>\n                                </div>\n                              </div>\n                              <hr>\n                              <div class=\"col-12 d-flex justify-content-between\">\n                                <p class=\"mb-0\">\n                                  Total\n                                </p>\n                                <h6 class=\"\">\n                                  {{element?.total | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n                                </h6>\n                              </div>\n                              <hr>\n                              <ng-container *ngIf=\"isStaff\">\n                                <div class=\"col-12 d-flex justify-content-between\">\n\n                                  <div class=\"\">\n                                    <p class=\"mb-0\">From Company Wallet</p>\n                                    <h6>\n                                      {{element?.company_amount | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n                                    </h6>\n                                  </div>\n                                  <div class=\"text-right\">\n                                    <p class=\"mb-0\">From Personal Wallet</p>\n                                    <h6>\n                                      {{element?.personal_amount | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n                                    </h6>\n                                  </div>\n                                </div>\n                              </ng-container>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"d-flex justify-content-between\">\n                        <div *ngIf=\"element?.date_created\">\n                          ordered date: {{element?.date_created}}\n                        </div>\n\n                        <div class=\"text-success\" *ngIf=\"element?.delivered_date\">\n                          delivered date: {{element?.delivered_date}}\n                        </div>\n\n                        <div *ngIf=\"element?.delivery_date\">\n                          delivery date: {{element?.delivery_date}}\n                        </div>\n                      </div>\n\n                    </div>\n                    <div *ngIf=\"isStaff || isComp\" class=\"card-footer\">\n                      <div class=\"d-flex justify-content-end\">\n                        <button [disabled]=\"prepareForCancel(element)\" (click)=\"onCancelOrder(element)\" mat-button\n                          color=\"warn\">Cancel Order</button>\n                        <!-- <button mat-raised-button color=\"primary\">Update</button> -->\n                      </div>\n                    </div>\n                    <div *ngIf=\"isComp || isAcct\" class=\"card-footer\">\n                      <div class=\"d-flex justify-content-end\">\n                        <button [disabled]=\"element.status !== 'delivered'\" (click)=\"onVoidTransaction(element.id)\"\n                          mat-raised-button color=\"primary\">\n                          <i *ngIf=\"isVoiding\" class=\"fa fa-spin fa-spinner\"></i>\n                          Void\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n              [class.example-expanded-row]=\"expandedElement === element\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n            </tr>\n          </table>\n          <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { TransactionService } from \"../transaction.service\";\nimport { Order, OrderResponse } from \"../order\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { UserService } from \"src/app/user/user.service\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\n@Component({\n  selector: \"app-order-history\",\n  templateUrl: \"./order-history.component.html\",\n  styleUrls: [\"./order-history.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class OrderHistoryComponent implements OnInit {\n  companyArray: any[];\n  statusArray: any[] = [\n    { name: \"All Transactions\", code: \"\" },\n    { name: \"Pending Transactions\", code: \"pending\" },\n    { name: \"Voided Transactions\", code: \"void\" },\n    { name: \"Delevered Transactions\", code: \"delivered\" },\n    { name: \"Cancelled Transactions\", code: \"cancelled\" },\n    { name: \"Failed Transactions\", code: \"failed\" },\n    { name: \"Insufficient Fund\", code: \"insufficient\" },\n    { name: \"Ticket Printed Fund\", code: \"ticket-printed\" },\n    { name: \"Not Pending Transactions\", code: \"not_pend\" },\n  ];\n  downloading = false;\n  range = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  dataSource: Order[] = [];\n  tableLoading: boolean = true;\n  // dataSource = new MatTableDataSource([]);\n  title = \"Order History\";\n  displayedColumns: any[] = [];\n  expandedElement: any;\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n  private startDate: string;\n  private endDate: string;\n  private status: string = \"\";\n  private company: string = \"\";\n  isStaff: boolean;\n  isSid: boolean;\n  isComp: boolean;\n  isVend: boolean;\n  isAcct: boolean;\n  vendorArray: { name: any; id: any }[];\n  vendor: any;\n  isVoiding: any;\n  userInfo: any;\n\n  constructor(\n    private transactionService: TransactionService,\n    private userService: UserService,\n    private helperService: HelperService\n  ) { }\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.pageSize = 10;\n    this.tableLoading = true;\n    this.startDate = this.endDate = this.helperService.formatDate(new Date());\n    this.transactionService.getIsLoading()\n      .subscribe((isLoading) => {\n        isLoading ? null : this.getOrderHiistory()\n      })\n    this.getOrderHiistory();\n    this.getuserGroup();\n    this\n  }\n\n  getuserInfo() {\n  }\n\n  prepareForCancel(order) {\n    this.userInfo = this.helperService.getUserInfo()\n    const cancelling_grace_period_in_hours = this.userInfo.cancelling_grace_period_in_hours;\n    const delievery_date = new Date(order.delivery_date)\n    const now = new Date()\n    // const cancel_date: Date = delievery_date.setHours(delievery_date.getHours() - cancelling_grace_period_in_hours)\n    return now > delievery_date\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      case \"emp\":\n        this.isStaff = true;\n        this.displayedColumns = [\n          // \"position\",\n          // \"comment\",\n          \"food\",\n          \"quantity\",\n          \"platform\",\n          \"vendor_user_id\",\n          \"status\",\n          \"star\",\n        ];\n        break;\n      case \"ven\":\n        this.isVend = true;\n        this.displayedColumns = [\n          // \"position\",\n          \"user\",\n          \"company\",\n          \"food\",\n          \"quantity\",\n          \"platform\",\n          \"comment\",\n          \"status\",\n          \"star\",\n        ];\n        // this.getCompanyArray()\n        break;\n      // case 'sid':\n      //   this.isSid = true;\n      //   this.getCompanyArray()\n      //   break;\n      case \"cmp_adm\":\n        this.displayedColumns = [\n          // \"position\",\n          \"user\",\n          \"vendor\",\n          \"food\",\n          \"quantity\",\n          \"platform\",\n          \"comment\",\n          \"status\",\n          \"star\",\n        ];\n        this.isComp = true;\n        this.getVendorArray();\n        break;\n      case \"cmp_act\":\n        this.displayedColumns = [\n          // \"position\",\n          \"user\",\n          \"vendor\",\n          \"food\",\n          \"quantity\",\n          \"platform\",\n          \"comment\",\n          \"status\",\n          \"star\",\n        ];\n        this.isAcct = true;\n        this.getVendorArray();\n        break;\n      case \"sid\":\n        this.isSid = true;\n        this.displayedColumns = [\n          \"company\",\n          \"user\",\n          \"vendor\",\n          \"food\",\n          \"quantity\",\n          \"platform\",\n          \"comment\",\n          \"status\",\n          \"star\",\n        ];\n        this.getCompanyArray();\n        this.getVendorArray();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getVendorArray() {\n    this.userService.getVendors();\n    this.userService.getVendorsUpdate().subscribe((vendors) => {\n      const venArray = vendors.results.map((element) => {\n        return { name: element.bussiness_name, id: element.user.id };\n      });\n      this.vendorArray = [{ id: \"\", name: \"All Vendors\" }, ...venArray];\n    });\n  }\n\n  getCompanyArray() {\n    this.userService.getCompanyList();\n    this.userService.getCompanyListUpdate().subscribe((company) => {\n      const comArray = company.results.map((element) => {\n        return { name: element.name, id: element.id };\n      });\n      this.companyArray = [{ id: \"\", name: \"All Companies\" }, ...comArray];\n    });\n  }\n\n  getOrderHiistory() {\n    this.transactionService\n      .getOrderHistory(\n        this.startDate,\n        this.endDate,\n        this.status,\n        this.company,\n        this.vendor,\n        this.pageSize,\n        this.pageIndex\n      )\n      .subscribe((orderHistory: OrderResponse) => {\n        if (orderHistory.results) {\n          this.length = orderHistory.count;\n          this.dataSource = orderHistory.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n        console.log(this.dataSource);\n        // this.dataSource = new MatTableDataSource(orderHistory);\n        // this.dataSource.sort = this.sort;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getOrderHiistory();\n    this.tableLoading = true;\n  }\n\n  onExportExcel() {\n    this.downloading = !this.downloading;\n    let data;\n    if (this.isStaff) {\n      data = this.dataSource.map((element) => {\n        return {\n          name: element?.food?.name,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          vendor_user_id: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    } else if (this.isComp) {\n      data = this.dataSource.map((element) => {\n        return {\n          user: element?.user,\n          vendor_user_id: element?.vendor_user_id,\n          name: element?.food,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          comment: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    } else if (this.isVend) {\n      data = this.dataSource.map((element) => {\n        return {\n          user: element?.user,\n          company: element?.company,\n          name: element?.food,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          comment: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    } else if (this.isSid) {\n      data = this.dataSource.map((element) => {\n        return {\n          company: element?.company,\n          user: element?.user,\n          vendor_user_id: element?.vendor_user_id,\n          name: element?.food,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          comment: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    }\n    this.helperService.exportExcel(data, \"transactions\", this.displayedColumns);\n    this.downloading = !this.downloading;\n  }\n\n  statusChange(value) {\n    this.status = value;\n    this.getOrderHiistory();\n    this.tableLoading = true;\n  }\n\n  companyChange(value) {\n    this.company = value;\n    this.getOrderHiistory();\n    this.tableLoading = true;\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getOrderHiistory();\n    this.tableLoading = true;\n  }\n\n  vendorChange(value) {\n    this.vendor = value;\n    this.getOrderHiistory();\n    this.tableLoading = true;\n  }\n\n  onVoidTransaction(transactionId) {\n    this.isVoiding = true;\n    this.transactionService.void(transactionId).subscribe((isLoading) => {\n      this.isVoiding = isLoading;\n      isLoading ? this.getOrderHiistory() : null;\n    });\n  }\n\n  onCancelOrder(food) {\n    this.transactionService.cancelOrder(food)\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>{{title | titlecase}}</h5>\n    </div>\n    <div class=\"card-body\">\n      <app-table-functions [downloading] (setEndDate)=\"setEndDate($event)\" (setStartDate)=\"setStartDate($event)\">\n      </app-table-functions>\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading\">\n          <mat-spinner *ngIf=\"tableLoading\"></mat-spinner>\n        </div>\n\n        <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n          <!-- Position Column -->\n          <ng-container matColumnDef=\"position\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n          </ng-container>\n\n          <!-- Contact Name Column -->\n          <ng-container matColumnDef=\"bussiness_name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.bussiness_name || 'N/A'}}</td>\n          </ng-container>\n\n          <!-- Contact Email Column -->\n          <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Company Name Column -->\n          <ng-container matColumnDef=\"account_info\">\n            <th mat-header-cell *matHeaderCellDef> Account Info </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.account_number || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Balance Column -->\n          <ng-container matColumnDef=\"balance\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Balance </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.balance }} </td>\n          </ng-container>\n\n          <!-- Star Column -->\n          <ng-container matColumnDef=\"star\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element\">\n              <mat-icon>more_vert</mat-icon>\n            </td>\n          </ng-container>\n\n\n          <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n          <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n              <div class=\"example-element-detail\"\n                [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                <div class=\"example-element-diagram\">\n                  <div class=\"example-element-position\"> {{element.position}} </div>\n                  <div class=\"example-element-symbol\"> {{element.position}} </div>\n                  <div class=\"example-element-name\"> {{element.name}} </div>\n                  <div class=\"example-element-weight\"> {{element.position}} </div>\n                </div>\n                <div class=\"example-element-description\">\n                  {{element.description}}\n                </div>\n              </div>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n            [class.example-expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = expandedElement === element ? null : element\">\n          </tr>\n          <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n        </table>\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { TransactionService } from \"../transaction.service\";\n\n@Component({\n  selector: \"app-sid-withdrawal-history\",\n  templateUrl: \"./sid-withdrawal-history.component.html\",\n  styleUrls: [\"./sid-withdrawal-history.component.scss\"],\n})\nexport class SidWithdrawalHistoryComponent implements OnInit {\n  // dataSource: any[] = ;\n  private pageSize: number;\n  private pageIndex: number;\n  tableLoading: boolean = true;\n  dataSource = new MatTableDataSource([]);\n  title = \"SID Withdrawal History\";\n  displayedColumns: any[] = [\n    \"position\",\n    \"bussiness_name\",\n    \"email\",\n    \"account_info\",\n    \"balance\",\n    \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n  startDate: string;\n  endDate: string;\n  downloading: boolean = false;\n\n  constructor(\n    private transactionService: TransactionService,\n    private helperService: HelperService\n  ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.getWithdrawalHiistory();\n  }\n\n  getWithdrawalHiistory() {\n    this.transactionService\n      .getSidWithdrawalHistory()\n      .subscribe((companyWithdrawal) => {\n        this.length = companyWithdrawal.length;\n        this.dataSource = new MatTableDataSource(companyWithdrawal);\n        this.dataSource.sort = this.sort;\n        this.tableLoading = false;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.tableLoading = true;\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getWithdrawalHiistory();\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getWithdrawalHiistory();\n    this.tableLoading = true;\n  }\n}\n","<div class=\"container-fluid\">\n  <!-- <div class=\"row\">\n    <div class=\"mx-auto col-12\"> -->\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions (exportExcel)=\"onExportExcel()\" [downloading]=\"downloading\" [companyArray]=\"companyArray\"\n        (companyChange)=\"companyChange($event)\" (setEndDate)=\"setEndDate($event)\" (setStartDate)=\"setStartDate($event)\"\n        [rangePicker]=\"true\"></app-table-functions>\n      <div class=\"mat-elevation-z8\">\n\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading\">\n          <div class=\"loader-box\">\n            <div class=\"loader\">\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n            </div>\n          </div>\n          <!-- <mat-spinner *ngIf=\"tableLoading\"></mat-spinner> -->\n        </div>\n\n        <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\n\n          <!-- Contact Name Column -->\n          <ng-container matColumnDef=\"user\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.user || 'N/A'}}</td>\n          </ng-container>\n\n          <!-- Amount Column -->\n          <ng-container matColumnDef=\"amount\">\n            <th mat-header-cell *matHeaderCellDef> Amount </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.amount | currency:\"NGN\" : \"₦\" : '1.0-0'}} </td>\n          </ng-container>\n\n          <!-- Contact Email Column -->\n          <ng-container matColumnDef=\"updated_status\">\n            <th mat-header-cell *matHeaderCellDef> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Balance Column -->\n          <ng-container matColumnDef=\"reference_no\">\n            <th mat-header-cell *matHeaderCellDef>Reference </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.reference_no || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Company Column -->\n          <ng-container matColumnDef=\"company\">\n            <th mat-header-cell *matHeaderCellDef> Company </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.company || 'N/A' }} </td>\n          </ng-container>\n\n          <!-- Date Column -->\n          <ng-container matColumnDef=\"date\">\n            <th mat-header-cell *matHeaderCellDef> Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element | dateTime : element.date_created: element.time_created }}\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\">\n          </tr>\n        </table>\n        <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n      </div>\n\n\n    </div>\n  </div>\n  <!-- </div>\n  </div> -->\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { UserService } from \"src/app/user/user.service\";\nimport { OrderResponse } from \"../order\";\nimport { TransactionService } from \"../transaction.service\";\n\n@Component({\n  selector: \"app-top-up-history\",\n  templateUrl: \"./top-up-history.component.html\",\n  styleUrls: [\"./top-up-history.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class TopUpHistoryComponent implements OnInit {\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  title = \"Topup History\";\n  displayedColumns: any[] = [];\n  length: number;\n  downloading = false;\n\n  private pageSize: number;\n  private pageIndex: number;\n  private startDate: string;\n  private endDate: string;\n  private status: string = \"\";\n  private company: string = \"\";\n\n  isStaff: boolean;\n  isSid: boolean;\n  isComp: boolean;\n  isVend: boolean;\n  isAcct: boolean;\n  companyArray: { name: any; id: any }[];\n\n  constructor(\n    private transactionService: TransactionService,\n    private userService: UserService,\n    private helperService: HelperService\n  ) {}\n\n  ngOnInit(): void {\n    this.startDate = this.endDate = this.helperService.formatDate(new Date());\n    this.getuserGroup();\n    this.getTopUpHistory();\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      case \"emp\":\n        this.isStaff = true;\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"reference_no\",\n          \"company\",\n          \"date\",\n        ];\n        break;\n      case \"ven\":\n        this.isVend = true;\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"reference_no\",\n          \"company\",\n          \"date\",\n        ];\n        break;\n      case \"cmp_adm\":\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"reference_no\",\n          \"company\",\n          \"date\",\n        ];\n        this.isComp = true;\n        break;\n      case \"cmp_act\":\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"reference_no\",\n          \"company\",\n          \"date\",\n        ];\n        this.isAcct = true;\n        break;\n      case \"sid\":\n        this.isSid = true;\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"reference_no\",\n          \"company\",\n          \"date\",\n        ];\n        this.getCompanyArray();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getCompanyArray() {\n    this.userService.getCompanyList();\n    this.userService.getCompanyListUpdate().subscribe((company) => {\n      const comArray = company.results.map((element) => {\n        return { name: element.name, id: element.id };\n      });\n      this.companyArray = [{ id: \"\", name: \"All Companies\" }, ...comArray];\n    });\n  }\n\n  getTopUpHistory() {\n    this.transactionService\n      .getTopUpHistory(\n        this.startDate,\n        this.endDate,\n        this.company,\n        this.pageSize,\n        this.pageIndex\n      )\n      .subscribe((orderHistory: any[]) => {\n        if (orderHistory.length > 0) {\n          // this.length = orderHistory.count;\n          this.dataSource = orderHistory;\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.tableLoading = true;\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getTopUpHistory();\n  }\n\n  companyChange(value) {\n    this.company = value;\n    this.getTopUpHistory();\n    this.tableLoading = true;\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getTopUpHistory();\n    this.tableLoading = true;\n  }\n\n  onExportExcel() {\n    this.downloading = !this.downloading;\n    let data;\n    data = this.dataSource.map((element) => {\n      return {\n        user: `${element.user}`,\n        amount: element.amount,\n        status: element.status,\n        reference_no: element.reference_no,\n        company: element.company,\n        date: element.date_created,\n      };\n    });\n    this.helperService.exportExcel(data, \"transactions\", this.displayedColumns);\n    this.downloading = !this.downloading;\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { PaystackOptions } from \"angular4-paystack\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { NotificationService } from \"src/app/shared/services/notification.service\";\nimport { TransactionService } from \"../transaction.service\";\n\n@Component({\n  selector: \"app-topup-personal\",\n  templateUrl: \"./topup-personal.component.html\",\n  styleUrls: [\"./topup-personal.component.scss\"],\n})\nexport class TopupPersonalComponent implements OnInit, AfterViewInit {\n  title: string | number;\n  reference = \"\";\n  amount: number;\n  userInfo: any;\n  options: PaystackOptions;\n  @ViewChild(\"paystackButton\", { static: false }) paystackButton: ElementRef;\n\n  constructor(\n    private helperService: HelperService,\n    private notificationService: NotificationService,\n    private transactionService: TransactionService\n  ) {}\n\n  ngOnInit(): void {\n    this.userInfo = this.helperService.getUserInfo();\n    this.reference = `ref-${Math.ceil(Math.random() * 10e13)}`;\n  }\n\n  ngAfterViewInit(): void {\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    this.userInfo = this.helperService.getUserInfo();\n    this.reference = `ref-${Math.ceil(Math.random() * 10e13)}`;\n  }\n\n  initiateTopUp() {\n    this.transactionService.getReference().subscribe((reference) => {\n      this.reference = reference;\n      const options: PaystackOptions = {\n        ref: this.reference,\n        amount: this.amount * 100,\n        email: this.userInfo.email,\n        key: this.userInfo.public_key,\n        channels: [\"card\"],\n      };\n      this.options = options;\n      this.paystackButton.nativeElement.click();\n    });\n  }\n\n  paymentInit() {\n    console.log(\"Payment initialized\");\n  }\n\n  paymentDone(ref: any) {\n    this.title = \"Payment successfull\";\n    this.notificationService.info(\"Payment\", \"Payment was successful\");\n    console.log(this.title, ref);\n  }\n\n  paymentCancel() {\n    console.log(\"payment failed\");\n  }\n}\n","<!-- EMI Starts-->\n<div class=\"row\">\n  <div class=\"mx-auto col-lg-6\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>EMI</h5>\n      </div>\n      <div class=\"card-body\">\n        <form class=\"theme-form row\">\n          <div class=\"form-group col-12 p-r-0\">\n            <label for=\"\">Amount</label>\n            <input [(ngModel)]=\"amount\" name=\"amount\" class=\"form-control\" type=\"text\" placeholder=\"Amount to top up\">\n          </div>\n          <div class=\"form-group col-auto mx-auto\">\n            <ul class=\"payment-opt\">\n              <li><img src=\"assets/images/ecommerce/mastercard.png\" alt=\"\"></li>\n              <li><img src=\"assets/images/ecommerce/visa.png\" alt=\"\"></li>\n              <li><img src=\"assets/images/ecommerce/paypal.png\" alt=\"\"></li>\n            </ul>\n          </div>\n          <div class=\"col-12\">\n            <button #paystackButton class=\"paystack-button\" angular4-paystack [paystackOptions]=\"options\" (paymentInit)=\"paymentInit()\"\n              (onClose)=\"paymentCancel()\" (callback)=\"paymentDone($event)\" type=\"button\">\n              Pay with Paystack\n            </button>\n            <button type=\"submit\" (click)=\"initiateTopUp()\" class=\"btn btn-primary-gradien btn-block\">Submit</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n<!-- EMI Ends-->\n","<div class=\"container-fluid\">\n  <!-- <div class=\"row\">\n    <div class=\"mx-auto col-12\"> -->\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions (exportExcel)=\"onExportExcel()\" [downloading]=\"downloading\" [companyArray]=\"companyArray\"\n        (companyChange)=\"companyChange($event)\" (setEndDate)=\"setEndDate($event)\" (setStartDate)=\"setStartDate($event)\"\n        [rangePicker]=\"true\"></app-table-functions>\n      <div class=\"mat-elevation-z8\">\n\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading\">\n          <div class=\"loader-box\">\n            <div class=\"loader\">\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n            </div>\n          </div>\n          <!-- <mat-spinner *ngIf=\"tableLoading\"></mat-spinner> -->\n        </div>\n\n        <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\n\n          <!-- Contact Name Column -->\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.first_name || 'N/A'}} {{element.last_name}}</td>\n          </ng-container>\n\n          <!-- Contact Email Column -->\n          <ng-container matColumnDef=\"department\">\n            <th mat-header-cell *matHeaderCellDef> Department </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.department || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Contact phone_number Column -->\n          <ng-container matColumnDef=\"staff_level\">\n            <th mat-header-cell *matHeaderCellDef> Staff level </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.staff_level || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Company Name Column -->\n          <ng-container matColumnDef=\"total_sum\">\n            <th mat-header-cell *matHeaderCellDef> Total sum </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.total_sum | currency:\"NGN\" : \"₦\" : '1.0-0'}} </td>\n          </ng-container>\n\n          <!-- Balance Column -->\n          <ng-container matColumnDef=\"company_share\">\n            <th mat-header-cell *matHeaderCellDef>Ccompany share </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.company_share | currency:\"NGN\" : \"₦\" : '1.0-0'}} </td>\n          </ng-container>\n\n          <!-- Staff level Column -->\n          <ng-container matColumnDef=\"staff_share\">\n            <th mat-header-cell *matHeaderCellDef> Staff share </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.staff_share || \"N/A\" }} </td>\n          </ng-container>\n\n          <!-- Last login Column -->\n          <ng-container matColumnDef=\"no_of_days\">\n            <th mat-header-cell *matHeaderCellDef> No. of days </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.no_of_days || 'N/A' }} </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\">\n          </tr>\n        </table>\n        <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n      </div>\n\n\n    </div>\n  </div>\n  <!-- </div>\n  </div> -->\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { UserService } from \"src/app/user/user.service\";\nimport { TotalCost, TotalCostResponse } from \"../total-cost\";\nimport { TransactionService } from \"../transaction.service\";\n\n@Component({\n  selector: \"app-total-cost\",\n  templateUrl: \"./total-cost.component.html\",\n  styleUrls: [\"./total-cost.component.scss\"],\n})\nexport class TotalCostComponent implements OnInit {\n  dataSource: TotalCost[] = [];\n  tableLoading: boolean = true;\n  title = \"Total Cost\";\n  displayedColumns: any[] = [];\n  length: number;\n  downloading = false;\n\n  private pageSize: number;\n  private pageIndex: number;\n  private startDate: string;\n  private endDate: string;\n  private status: string = \"\";\n  private company: string = \"\";\n\n  isStaff: boolean;\n  isSid: boolean;\n  isComp: boolean;\n  isVend: boolean;\n  isAcct: boolean;\n  companyArray: { name: any; id: any }[];\n\n  constructor(\n    private transactionService: TransactionService,\n    private userService: UserService,\n    private helperService: HelperService\n  ) {}\n\n  ngOnInit(): void {\n    this.startDate = this.endDate = this.helperService.formatDate(new Date());\n    this.getuserGroup();\n    this.getTotalCost();\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      case \"emp\":\n        this.isStaff = true;\n        this.displayedColumns = [];\n        break;\n      case \"ven\":\n        this.isVend = true;\n        this.displayedColumns = [];\n        break;\n      case \"cmp_adm\":\n        this.displayedColumns = [\n          \"name\",\n          \"department\",\n          \"staff_level\",\n          // \"company_share_per_txn\",\n          \"total_sum\",\n          \"no_of_days\",\n          \"company_share\",\n          \"staff_share\",\n        ];\n        this.isComp = true;\n        break;\n      case \"cmp_act\":\n        this.displayedColumns = [\n          \"name\",\n          \"department\",\n          \"staff_level\",\n          // \"company_share_per_txn\",\n          \"total_sum\",\n          \"no_of_days\",\n          \"company_share\",\n          \"staff_share\",\n        ];\n        this.isAcct = true;\n        break;\n      case \"sid\":\n        this.isSid = true;\n        this.displayedColumns = [\n          \"name\",\n          \"department\",\n          \"staff_level\",\n          // \"company_share_per_txn\",\n          \"total_sum\",\n          \"no_of_days\",\n          \"company_share\",\n          \"staff_share\",\n        ];\n        this.getCompanyArray();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getCompanyArray() {\n    this.userService.getCompanyList();\n    this.userService.getCompanyListUpdate().subscribe((company) => {\n      const comArray = company.results.map((element) => {\n        return { name: element.name, id: element.id };\n      });\n      this.companyArray = [{ id: \"\", name: \"All Companies\" }, ...comArray];\n    });\n  }\n\n  getTotalCost() {\n    this.transactionService\n      .getTotalCost(\n        this.startDate,\n        this.endDate,\n        this.company,\n        this.pageSize,\n        this.pageIndex\n      )\n      .subscribe((orderHistory: TotalCostResponse) => {\n        if (orderHistory.results) {\n          this.length = orderHistory.count;\n          this.dataSource = orderHistory.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.tableLoading = true;\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getTotalCost();\n  }\n\n  companyChange(value) {\n    this.company = value;\n    this.getTotalCost();\n    this.tableLoading = true;\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getTotalCost();\n    this.tableLoading = true;\n  }\n\n  onExportExcel() {\n    this.downloading = !this.downloading;\n    let data;\n    data = this.dataSource.map((element) => {\n      return {\n        name: `${element.first_name} ${element.last_name}`,\n        department: element.department,\n        staff_level: element.staff_level,\n        total_sum: element.total_sum,\n        no_of_days: element.no_of_days,\n        company_share: element.company_share,\n        staff_share: element.staff_share,\n      };\n    });\n    this.helperService.exportExcel(data, \"transactions\", this.displayedColumns);\n    this.downloading = !this.downloading;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { CompanyWithdrawalHistoryComponent } from \"./company-withdrawal-history/company-withdrawal-history.component\";\nimport { OrderHistoryComponent } from \"./order-history/order-history.component\";\nimport { SidWithdrawalHistoryComponent } from \"./sid-withdrawal-history/sid-withdrawal-history.component\";\nimport { TopUpHistoryComponent } from \"./top-up-history/top-up-history.component\";\nimport { TopupPersonalComponent } from \"./topup-personal/topup-personal.component\";\nimport { TotalCostComponent } from \"./total-cost/total-cost.component\";\nimport { VendorWithdrawalHistoryComponent } from \"./vendor-withdrawal-history/vendor-withdrawal-history.component\";\nimport { VoidTransactionsComponent } from \"./void-transactions/void-transactions.component\";\n\nconst routes: Routes = [\n  {\n    path: \"order-history\",\n    component: OrderHistoryComponent,\n  },\n  {\n    path: \"total-cost\",\n    component: TotalCostComponent,\n  },\n  {\n    path: \"company-withdrawal-history\",\n    component: CompanyWithdrawalHistoryComponent,\n  },\n  {\n    path: \"vendor-withdrawal-history\",\n    component: VendorWithdrawalHistoryComponent,\n  },\n  {\n    path: \"sid-withdrawal-history\",\n    component: SidWithdrawalHistoryComponent,\n  },\n  {\n    path: \"voided-transactions\",\n    component: VoidTransactionsComponent,\n  },\n  {\n    path: \"topup-history\",\n    component: TopUpHistoryComponent,\n  },\n  {\n    path: \"topup-personal\",\n    component: TopupPersonalComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TransactionsRoutingModule } from './transactions-routing.module';\nimport { CompanyWithdrawalHistoryComponent } from './company-withdrawal-history/company-withdrawal-history.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { VendorWithdrawalHistoryComponent } from './vendor-withdrawal-history/vendor-withdrawal-history.component';\nimport { SidWithdrawalHistoryComponent } from './sid-withdrawal-history/sid-withdrawal-history.component';\nimport { OrderHistoryComponent } from './order-history/order-history.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatSelectModule} from '@angular/material/select';\nimport { SharedModule } from '../shared/shared.module';\nimport { TopUpHistoryComponent } from './top-up-history/top-up-history.component';\nimport { VoidTransactionsComponent } from './void-transactions/void-transactions.component';\nimport { TopupPersonalComponent } from './topup-personal/topup-personal.component';\nimport { Angular4PaystackModule } from 'angular4-paystack';\nimport { TotalCostComponent } from './total-cost/total-cost.component';\n\n@NgModule({\n  declarations: [\n    CompanyWithdrawalHistoryComponent,\n    VendorWithdrawalHistoryComponent,\n    SidWithdrawalHistoryComponent,\n    OrderHistoryComponent,\n    TopUpHistoryComponent,\n    VoidTransactionsComponent,\n    TopupPersonalComponent,\n    TotalCostComponent\n  ],\n  imports: [\n    CommonModule,\n    TransactionsRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatTableModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatSelectModule,\n    Angular4PaystackModule,\n  ]\n})\nexport class TransactionsModule { }\n","<div class=\"container-fluid\">\n  <!-- <div class=\"row\">\n    <div class=\"mx-auto col-12\"> -->\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions (exportExcel)=\"onExportExcel()\" [downloading]=\"downloading\" [companyArray]=\"companyArray\"\n        (companyChange)=\"companyChange($event)\" (setEndDate)=\"setEndDate($event)\" (setStartDate)=\"setStartDate($event)\"\n        [rangePicker]=\"true\"></app-table-functions>\n      <div class=\"mat-elevation-z8\">\n\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading\">\n          <div class=\"loader-box\">\n            <div class=\"loader\">\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n            </div>\n          </div>\n          <!-- <mat-spinner *ngIf=\"tableLoading\"></mat-spinner> -->\n        </div>\n\n        <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\n\n          <!-- Contact Name Column -->\n          <ng-container matColumnDef=\"user\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.user || 'N/A'}}</td>\n          </ng-container>\n\n          <!-- Amount Column -->\n          <ng-container matColumnDef=\"amount\">\n            <th mat-header-cell *matHeaderCellDef> Amount </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.amount | currency:\"NGN\" : \"₦\" : '1.0-0'}} </td>\n          </ng-container>\n\n          <!-- Contact Email Column -->\n          <ng-container matColumnDef=\"updated_status\">\n            <th mat-header-cell *matHeaderCellDef> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.updated_status || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Contact phone_number Column -->\n          <ng-container matColumnDef=\"receipient\">\n            <th mat-header-cell *matHeaderCellDef> Receipient </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.receipient || 'N/A'}} </td>\n          </ng-container>\n\n\n          <!-- Balance Column -->\n          <ng-container matColumnDef=\"reference_no\">\n            <th mat-header-cell *matHeaderCellDef>Reference </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.reference_no || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Staff level Column -->\n          <ng-container matColumnDef=\"transfer_code\">\n            <th mat-header-cell *matHeaderCellDef> Transfer code </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.transfer_code || \"N/A\" }} </td>\n          </ng-container>\n\n          <!-- Company Column -->\n          <ng-container matColumnDef=\"company\">\n            <th mat-header-cell *matHeaderCellDef> Company </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.company || 'N/A' }} </td>\n          </ng-container>\n\n          <!-- Date Column -->\n          <ng-container matColumnDef=\"date\">\n            <th mat-header-cell *matHeaderCellDef> Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element | dateTime : element.date_created: element.time_created }}\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\">\n          </tr>\n        </table>\n        <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n      </div>\n\n\n    </div>\n  </div>\n  <!-- </div>\n  </div> -->\n</div>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { UserService } from \"src/app/user/user.service\";\nimport { TransactionService } from \"../transaction.service\";\n\n@Component({\n  selector: \"app-vendor-withdrawal-history\",\n  templateUrl: \"./vendor-withdrawal-history.component.html\",\n  styleUrls: [\"./vendor-withdrawal-history.component.scss\"],\n})\nexport class VendorWithdrawalHistoryComponent implements OnInit {\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  title = \"Withdrawal History\";\n  displayedColumns: any[] = [];\n  length: number;\n  downloading = false;\n\n  private pageSize: number;\n  private pageIndex: number;\n  private startDate: string;\n  private endDate: string;\n  private status: string = \"\";\n  private company: string = \"\";\n\n  isStaff: boolean;\n  isSid: boolean;\n  isComp: boolean;\n  isVend: boolean;\n  isAcct: boolean;\n  companyArray: { name: any; id: any }[];\n\n  constructor(\n    private transactionService: TransactionService,\n    private userService: UserService,\n    private helperService: HelperService\n  ) {}\n\n  ngOnInit(): void {\n    this.startDate = this.endDate = this.helperService.formatDate(new Date());\n    this.getuserGroup();\n    this.getVendorWithdrawalHistory();\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      case \"emp\":\n        this.isStaff = true;\n        this.displayedColumns = [];\n        break;\n      case \"ven\":\n        this.isVend = true;\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"receipient\",\n          \"reference_no\",\n          \"transfer_code\",\n          \"company\",\n          \"date\",\n        ];\n        break;\n      case \"cmp_adm\":\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"receipient\",\n          // \"company_share_per_txn\",\n          \"reference_no\",\n          \"transfer_code\",\n          \"company\",\n          \"date\",\n        ];\n        this.isComp = true;\n        break;\n      case \"cmp_act\":\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"receipient\",\n          // \"company_share_per_txn\",\n          \"reference_no\",\n          \"transfer_code\",\n          \"company\",\n          \"date\",\n        ];\n        this.isAcct = true;\n        break;\n      case \"sid\":\n        this.isSid = true;\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"receipient\",\n          // \"company_share_per_txn\",\n          \"reference_no\",\n          \"transfer_code\",\n          \"company\",\n          \"date\",\n        ];\n        this.getCompanyArray();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getCompanyArray() {\n    this.userService.getCompanyList();\n    this.userService.getCompanyListUpdate().subscribe((company) => {\n      const comArray = company.results.map((element) => {\n        return { name: element.name, id: element.id };\n      });\n      this.companyArray = [{ id: \"\", name: \"All Companies\" }, ...comArray];\n    });\n  }\n\n  getVendorWithdrawalHistory() {\n    this.transactionService\n      .getVendorWithdrawalHistory(\n        this.startDate,\n        this.endDate\n        // this.company,\n        // this.pageSize,\n        // this.pageIndex\n      )\n      .subscribe((data: any) => {\n        console.log(data);\n        if (data.results) {\n          this.length = data.count;\n          this.dataSource = data.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.tableLoading = true;\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getVendorWithdrawalHistory();\n  }\n\n  companyChange(value) {\n    this.company = value;\n    this.getVendorWithdrawalHistory();\n    this.tableLoading = true;\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getVendorWithdrawalHistory();\n    this.tableLoading = true;\n  }\n\n  onExportExcel() {\n    this.downloading = !this.downloading;\n    let data;\n    data = this.dataSource.map((element) => {\n      return {\n        user: `${element.user}`,\n        amount: element.amount,\n        updated_status: element.updated_status,\n        receipient: element.receipient,\n        reference_no: element.reference_no,\n        transfer_code: element.transfer_code,\n        company: element.company,\n        date: element.date_created,\n      };\n    });\n    this.helperService.exportExcel(data, \"transactions\", this.displayedColumns);\n    this.downloading = !this.downloading;\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>{{title | titlecase}}</h5>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions [downloading]=\"downloading\" [statusArray]=\"statusArray\" [companyArray]=\"companyArray\"\n        (companyChange)=\"companyChange($event)\" (statusChange)=\"statusChange($event)\" (setEndDate)=\"setEndDate($event)\"\n        (setStartDate)=\"setStartDate($event)\"></app-table-functions>\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n          <mat-spinner></mat-spinner>\n        </div>\n\n        <div class=\"table-responsive\">\n\n          <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n            <!-- position Column -->\n            <ng-container matColumnDef=\"position\" sticky>\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n              <td class=\"text-center\" mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n\n            <!-- Contact Name Column -->\n            <ng-container matColumnDef=\"user\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.user || 'N/A'}}</td>\n            </ng-container>\n\n            <!-- Contact Email Column -->\n            <ng-container matColumnDef=\"food\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Food </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.food || 'N/A'}} </td>\n            </ng-container>\n\n            <!-- Company Name Column -->\n            <ng-container matColumnDef=\"comment\">\n              <th mat-header-cell *matHeaderCellDef> Comments </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.comment || 'N/A'}} </td>\n            </ng-container>\n\n            <!-- Balance Column -->\n            <ng-container matColumnDef=\"quantity\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Quantity </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.quantity }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"company\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Company </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.company }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"vendor_user_id\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Vendor </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.vendor_user_id }} </td>\n            </ng-container>\n\n            <!-- Star Column -->\n            <ng-container matColumnDef=\"star\" stickyEnd>\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td mat-cell *matCellDef=\"let element\">\n                <mat-icon>more_vert</mat-icon>\n              </td>\n            </ng-container>\n\n\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n            <ng-container matColumnDef=\"expandedDetail\">\n              <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n                <div class=\"example-element-detail\"\n                  [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                  <div class=\"example-element-diagram\">\n                    <div class=\"example-element-position\"> {{element.position}} </div>\n                    <div class=\"example-element-symbol\"> {{element.position}} </div>\n                    <div class=\"example-element-name\"> {{element.name}} </div>\n                    <div class=\"example-element-weight\"> {{element.position}} </div>\n                  </div>\n                  <div class=\"example-element-description\">\n                    {{element.description}}\n                  </div>\n                </div>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n              [class.example-expanded-row]=\"expandedElement === element\"\n              (click)=\"expandedElement = expandedElement === element ? null : element\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n            </tr>\n          </table>\n          <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatSort } from '@angular/material/sort/sort';\nimport { HelperService } from 'src/app/shared/services/helper.service';\nimport { UserService } from 'src/app/user/user.service';\nimport { TransactionService } from '../transaction.service';\n\n@Component({\n  selector: 'app-void-transactions',\n  templateUrl: './void-transactions.component.html',\n  styleUrls: ['./void-transactions.component.scss']\n})\nexport class VoidTransactionsComponent implements OnInit {\n  companyArray: any[] = [];\n  statusArray: any[] = [\n    { name: \"All Transactions\", code: \"\" },\n    { name: \"Pending Transactions\", code: \"pend\" },\n    { name: \"Voided Transactions\", code: \"void\" },\n    { name: \"Deleted Transactions\", code: \"del\" },\n    { name: \"Cancelled Transactions\", code: \"cnl\" },\n    { name: \"Failed Transactions\", code: \"failed\" },\n    { name: \"Ins Transactions\", code: \"ins\" },\n    { name: \"Not Pending Transactions\", code: \"not_pend\" },\n  ];\n  downloading = false;\n  range = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  // dataSource = new MatTableDataSource([]);\n  title = \"Voided Transactions\";\n  displayedColumns: any[] = [\n    \"position\",\n    \"user\",\n    \"food\",\n    \"comment\",\n    \"quantity\",\n    \"company\",\n    \"vendor_user_id\",\n    \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n  private startDate: string;\n  private endDate: string;\n  private status: string = \"\";\n  private company: string = \"\";\n\n  constructor(\n    private transactionService: TransactionService,\n    private userService: UserService,\n    private helperService: HelperService\n  ) {}\n  // @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.tableLoading = true;\n    this.startDate = this.endDate = this.helperService.formatDate(new Date());\n    this.getVoidedTransactions();\n    this.getCompanyArray();\n  }\n\n  getCompanyArray() {\n    this.userService.getCompanyList();\n    this.userService.getCompanyListUpdate().subscribe((company) => {\n      const comArray = company.results.map((element) => {\n        return { name: element.name, id: element.id };\n      });\n      this.companyArray = [{ id: \"\", name: \"All Companies\" }, ...comArray];\n    });\n  }\n\n  getVoidedTransactions() {\n    this.transactionService\n      .getVoidedTransactions(\n        this.startDate,\n        this.endDate,\n        this.status,\n        this.company,\n        this.pageSize,\n        this.pageIndex\n      )\n      .subscribe((voidedTransactions) => {\n        if (voidedTransactions.results) {\n          this.length = voidedTransactions.count;\n          this.dataSource = voidedTransactions.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n        // this.dataSource = new MatTableDataSource(orderHistory);\n        // this.dataSource.sort = this.sort;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getVoidedTransactions();\n    this.tableLoading = true;\n  }\n\n  statusChange(value) {\n    this.status = value;\n    this.getVoidedTransactions();\n    this.tableLoading = true;\n  }\n\n  companyChange(value) {\n    this.company = value;\n    this.getVoidedTransactions();\n    this.tableLoading = true;\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getVoidedTransactions();\n    this.tableLoading = true;\n  }\n}\n"]}