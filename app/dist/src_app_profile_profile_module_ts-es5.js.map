{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_4__","ctx_r0","EditProfileComponent","helperService","authService","fb","transactionService","profileService","getProfileListener","subscribe","isLoading","getUserInfo","getuserGroup","profileSubb","unsubscribe","cashingOut","cashout","event","file","target","files","reader","FileReader","imagePreview","onload","result","updateUser","image","readAsDataURL","images","console","log","userGroup","getUserGroup","isStaff","isVend","userForm","get","passwordForm","getUSerInfo","userInfo","group","first_name","_a","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","last_name","_b","old_password","new_password","passwordRegex","confirm_password","validators","passwordMatch","invalid","validateAllFormFields","value","changePassword","selectors","decls","vars","consts","template","formGroup","passwordControl","confirmPasswordControl","routes","path","component","_edit_profile_edit_profile_component__WEBPACK_IMPORTED_MODULE_0__","ProfileRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","ProfileModule","_angular_common__WEBPACK_IMPORTED_MODULE_3__","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","_profile_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_edit_profile_edit_profile_component__WEBPACK_IMPORTED_MODULE_1__","ProfileService","http","notificationService","errorService","_environments_environment__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_3__","apiUrl","res","userInfoListener","next","err","warning","asObservable","factory","providedIn"],"sources":["webpack:///src/app/profile/edit-profile/edit-profile.component.html","webpack:///src/app/profile/edit-profile/edit-profile.component.ts","webpack:///src/app/profile/profile-routing.module.ts","webpack:///src/app/profile/profile.module.ts","webpack:///src/app/shared/services/profile.service.ts"],"sourcesContent":["<!-- Container-fluid starts-->\n<div class=\"mb-5 container-fluid\">\n  <div class=\"edit-profile\">\n    <div class=\"row\">\n      <div class=\"col-lg-4\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h4 class=\"mb-0 card-title\">My Profile</h4>\n            <div class=\"card-options\"><a class=\"card-options-collapse\" [routerLink]=\"\" data-toggle=\"card-collapse\"><i\n                  class=\"fe fe-chevron-up\"></i></a><a class=\"card-options-remove\" [routerLink]=\"\"\n                data-toggle=\"card-remove\"><i class=\"fe fe-x\"></i></a></div>\n          </div>\n          <div class=\"card-body\">\n            <form *ngIf=\"userInfo\">\n              <div class=\"mb-2 row\">\n                <div class=\"col-auto profile-pic\">\n                  <img class=\"img-60 rounded-circle\" [src]=\"userInfo?.image\" [alt]=\"userInfo.first_name\">\n                  <!-- <img class=\"img-60 rounded-circle\" [src]=\"'/assets/images/user/1.jpg'\" alt=\"#\"> -->\n                  <i [ngClass]=\"{'icofont icofont-pencil-alt-5': isLoading == false, 'fa fa-spin fa-cog': isLoading == true}\"\n                    class=\"edit\">\n                    <input multiple=true class=\"upload\" type=\"file\" (change)=\"readUrl($event)\" />\n                  </i>\n                </div>\n                <div class=\"col\">\n                  <h3 class=\"mb-1\">{{userInfo?.first_name | titlecase}} {{userInfo?.last_name | titlecase}}</h3>\n                  <p class=\"mb-4\">{{userInfo?.staff_level | titlecase}} {{userInfo?.department | uppercase}}</p>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label class=\"form-label\">Email-Address</label>\n                <input disabled class=\"form-control\" [value]=\"userInfo?.email | lowercase\"\n                  placeholder=\"your-email@domain.com\">\n              </div>\n              <div class=\"form-group\">\n                <label class=\"form-label\">Wallet Balance</label>\n                <input disabled class=\"form-control\"\n                  [value]=\"userInfo?.personal_balance | currency:'NGN' : '₦' : '1.0-0'\">\n              </div>\n              <div *ngIf=\"isStaff\" class=\"form-group\">\n                <label class=\"form-label\">Daily Limit Left</label>\n                <input disabled class=\"form-control\"\n                  [value]=\"userInfo?.today_daily_limit_left | currency:'NGN' : '₦' : '1.0-0'\">\n              </div>\n\n              <div class=\"form-footer\">\n                <ng-container *ngIf=\"isStaff\">\n                  <button [routerLink]=\"['/transactions/topup-personal']\" routerLinkActive=\"router-link-active\"\n                    class=\"btn btn-primary btn-block\">Top up</button>\n                </ng-container>\n                <ng-container *ngIf=\"isVend\">\n                  <button type=\"button\" (click)=\"onCashout()\" class=\"btn btn-primary btn-block\">\n                    <i *ngIf=\"cashingOut\" class=\"fa fa-spin fa-spinner\"></i>\n                    Cash out\n                  </button>\n                </ng-container>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-8\">\n        <div class=\"col-lg-12\">\n          <form *ngIf=\"userInfo\" (submit)=\"updateUser()\" [formGroup]=\"userForm\" class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"mb-0 card-title\">Edit Profile</h4>\n              <div class=\"card-options\"><a class=\"card-options-collapse\" [routerLink]=\"\" data-toggle=\"card-collapse\"><i\n                    class=\"fe fe-chevron-up\"></i></a><a class=\"card-options-remove\" [routerLink]=\"\"\n                  data-toggle=\"card-remove\"><i class=\"fe fe-x\"></i></a></div>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n\n                <div class=\"col-sm-6 col-md-6\">\n                  <div class=\"form-group\">\n                    <label class=\"form-label\">First Name</label>\n                    <input formControlName=\"first_name\" class=\"form-control\" type=\"text\" placeholder=\"Company\">\n                    <div *ngIf=\"first_name.touched && first_name.errors?.required\" class=\"text text-danger\">\n                      First Name is required.\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-md-6\">\n                  <div class=\"form-group\">\n                    <label class=\"form-label\">Last Name</label>\n                    <input formControlName=\"last_name\" class=\"form-control\" type=\"text\" placeholder=\"Last Name\">\n                    <div *ngIf=\"last_name.touched && last_name.errors?.required\" class=\"text text-danger\">\n                      Last Name is required.\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n            <div class=\"text-right card-footer\">\n              <button [disabled]=\"isLoading == true\" class=\"btn btn-primary\" type=\"submit\">\n                <i *ngIf=\"isLoading\" class=\"mr-2 fa fa-spin fa-spinner\"></i>\n                Update Profile\n              </button>\n            </div>\n          </form>\n        </div>\n        <div class=\"mb-5 col-lg-12\">\n          <form *ngIf=\"userInfo\" (submit)=\"changePassword()\" [formGroup]=\"passwordForm\" class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"mb-0 card-title\">Change Password</h4>\n              <div class=\"card-options\"><a class=\"card-options-collapse\" [routerLink]=\"\" data-toggle=\"card-collapse\"><i\n                    class=\"fe fe-chevron-up\"></i></a><a class=\"card-options-remove\" [routerLink]=\"\"\n                  data-toggle=\"card-remove\"><i class=\"fe fe-x\"></i></a></div>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n\n                <div class=\"col-sm-12 col-md-8\">\n                  <div class=\"form-group\">\n                    <label class=\"form-label\">Old Password</label>\n                    <input formControlName=\"old_password\" class=\"form-control\" type=\"password\"\n                      placeholder=\"Old Password\">\n                  </div>\n                </div>\n                <div class=\"col-sm-12 col-md-8\">\n                  <div class=\"form-group\">\n                    <label class=\"form-label\">New Password</label>\n                    <input formControlName=\"new_password\" class=\"form-control\" type=\"password\"\n                      placeholder=\"New Password\">\n                    <div *ngIf=\"new_password.invalid && (new_password.dirty || new_password.touched)\">\n                      <div *ngIf=\"new_password.hasError('required')\">\n                        <small class=\"form-text text-danger\">\n                          Password is a required field\n                        </small>\n                      </div>\n                      <small *ngIf=\"!new_password.hasError('minlength') && new_password.hasError('pattern')\"\n                        class=\"form-text text-danger\">\n                        password must be alphanumeric\n                      </small>\n                      <small *ngIf=\"new_password.hasError('minlength')\" class=\"form-text text-danger\">\n                        Password must be minimum 8 characters and alphanumeric\n                      </small>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-sm-12 col-md-8\">\n                  <div class=\"form-group\">\n                    <label class=\"form-label\">Confirm Password</label>\n                    <input formControlName=\"confirm_password\" class=\"form-control\" type=\"password\"\n                      placeholder=\"Confirm Password\">\n                    <div\n                      *ngIf=\"passwordForm.hasError('passwordMatch') && passwordForm.get('new_password').touched && passwordForm.get('confirm_password').touched\"\n                      class=\"text text-danger\">\n                      Passwords Don't Match.\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n            <div class=\"text-right card-footer\">\n              <button [disabled]=\"isLoading == true\" class=\"btn btn-primary\" type=\"submit\">\n                <i *ngIf=\"isLoading\" class=\"mr-2 fa fa-spin fa-spinner\"></i>\n                Change Password\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Container-fluid Ends-->\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ValidationErrors,\n  Validators,\n} from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from \"src/app/auth/auth.service\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { ProfileService } from \"src/app/shared/services/profile.service\";\nimport { TransactionService } from \"src/app/transactions/transaction.service\";\n\n@Component({\n  selector: \"app-edit-profile\",\n  templateUrl: \"./edit-profile.component.html\",\n  styleUrls: [\"./edit-profile.component.scss\"],\n})\nexport class EditProfileComponent implements OnInit, OnDestroy {\n  userInfo;\n  passwordForm: FormGroup;\n  userForm: FormGroup;\n  private passwordRegex = /^(?=.*[0-9])(?=.*[a-zA-Z])([ A-Za-z0-9_@./#&+-]+)$/;\n  isLoading: boolean = false;\n  isStaff: boolean;\n  isVend: boolean;\n  cashingOut: boolean;\n  profileSubb: Subscription;\n  // changingPassword: boolean = false\n\n  constructor(\n    private helperService: HelperService,\n    private authService: AuthService,\n    private fb: FormBuilder,\n    private transactionService: TransactionService,\n    private profileService: ProfileService\n  ) {}\n\n  ngOnInit(): void {\n    this.authService.getProfileListener().subscribe((isLoading) => {\n      this.isLoading = isLoading;\n      isLoading ? null : this.getUserInfo();\n    });\n    this.getUserInfo();\n\n    this.getuserGroup();\n  }\n\n  ngOnDestroy(): void {\n    this.profileSubb.unsubscribe();\n  }\n\n  onCashout() {\n    this.cashingOut = true;\n    this.transactionService.cashout(null);\n  }\n\n  readUrl(event) {\n    this.isLoading = true;\n    const file = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n    let imagePreview;\n    reader.onload = () => {\n      imagePreview = reader.result as string;\n      this.authService.updateUser({ image: imagePreview });\n    };\n    reader.readAsDataURL(file);\n  }\n\n  testUrl(event) {\n    this.isLoading = true;\n    const file = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n    let imagePreview;\n    let images: any[] = [];\n    reader.onload = () => {\n      console.log(file);\n      // imagePreview = reader.result as string;\n      // images.push(file);\n      // images.push(file);\n      // this.authService.test({ images, category: 1 });\n    };\n    reader.readAsDataURL(file);\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      case \"emp\":\n        this.isStaff = true;\n        break;\n      case \"ven\":\n        this.isVend = true;\n        // this.getCompanyArray()\n        break;\n        // case 'sid':\n        //   this.isSid = true;\n        //   break;\n        // case 'comp':\n        //   this.isComp = true;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  get first_name() {\n    return this.userForm.get(`first_name`);\n  }\n\n  get last_name() {\n    return this.userForm.get(`last_name`);\n  }\n\n  get old_password() {\n    return this.passwordForm.get(`old_password`);\n  }\n\n  get new_password() {\n    return this.passwordForm.get(`new_password`);\n  }\n\n  getUserInfo() {\n    this.profileSubb = this.profileService\n      .getUSerInfo()\n      .subscribe((userInfo) => {\n        console.log(userInfo);\n        this.userInfo = userInfo;\n        this.userForm = this.fb.group({\n          first_name: [this.userInfo?.first_name, Validators.required],\n          last_name: [this.userInfo?.last_name, Validators.required],\n        });\n\n        this.passwordForm = this.fb.group(\n          {\n            old_password: [\"\", Validators.required],\n            new_password: [\n              \"\",\n              [\n                Validators.required,\n                Validators.minLength(8),\n                Validators.pattern(this.passwordRegex),\n              ],\n            ],\n            confirm_password: [\"\", Validators.required],\n          },\n          {\n            validators: passwordMatch,\n          }\n        );\n      });\n  }\n\n  updateUser() {\n    this.isLoading = true;\n    if (this.userForm.invalid) {\n      this.helperService.validateAllFormFields(this.userForm);\n      this.isLoading = false;\n      return;\n    }\n    this.authService.updateUser(this.userForm.value);\n  }\n\n  changePassword() {\n    this.isLoading = true;\n    if (this.passwordForm.invalid) {\n      this.helperService.validateAllFormFields(this.passwordForm);\n      this.isLoading = false;\n      return;\n    }\n    this.authService.changePassword({\n      old_password: this.passwordForm.value.old_password,\n      new_password: this.passwordForm.value.new_password,\n    });\n  }\n}\n\nfunction passwordMatch(formGroup: FormGroup): ValidationErrors | undefined {\n  const passwordControl = formGroup.get(\"new_password\");\n  const confirmPasswordControl = formGroup.get(\"confirm_password\");\n\n  if (passwordControl.value === confirmPasswordControl.value) {\n    return null;\n  } else {\n    return {\n      passwordMatch: true,\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\n\nconst routes: Routes = [{\n  path: 'edit',\n  component: EditProfileComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    EditProfileComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    ProfileRoutingModule\n  ]\n})\nexport class ProfileModule { }\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { BehaviorSubject, Subject } from \"rxjs\";\nimport { shareReplay } from \"rxjs/operators\";\nimport { environment } from \"../../../environments/environment\";\nimport { ErrorService } from \"./error.service\";\nimport { NotificationService } from \"./notification.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProfileService {\n  private apiUrl = environment.url;\n  private userInfo: any = null;\n  private userInfoListener = new BehaviorSubject(null);\n\n  constructor(\n    private http: HttpClient,\n    private notificationService: NotificationService,\n    private errorService: ErrorService\n  ) {}\n\n  getUSerInfo() {\n    this.http\n      .get(`${this.apiUrl}auth/user-info/`)\n      // .pipe(shareReplay())\n      .subscribe(\n        (res) => {\n          this.userInfo = res;\n          this.userInfoListener.next(this.userInfo);\n        },\n        (err) => {\n          this.notificationService.warning(`Error`, `Failed to load user info`);\n          this.userInfoListener.next(null);\n        }\n      );\n    return this.userInfoListener.asObservable();\n  }\n}\n"]}