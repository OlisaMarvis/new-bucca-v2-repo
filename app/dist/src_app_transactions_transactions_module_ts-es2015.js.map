{"version":3,"file":"src_app_transactions_transactions_module_ts-es2015.js","mappings":"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","sources":["./src/app/transactions/company-withdrawal-history/company-withdrawal-history.component.ts","./src/app/transactions/company-withdrawal-history/company-withdrawal-history.component.html","./src/app/transactions/order-history/order-history.component.ts","./src/app/transactions/order-history/order-history.component.html","./src/app/transactions/sid-withdrawal-history/sid-withdrawal-history.component.ts","./src/app/transactions/sid-withdrawal-history/sid-withdrawal-history.component.html","./src/app/transactions/top-up-history/top-up-history.component.ts","./src/app/transactions/top-up-history/top-up-history.component.html","./src/app/transactions/topup-personal/topup-personal.component.ts","./src/app/transactions/topup-personal/topup-personal.component.html","./src/app/transactions/total-cost/total-cost.component.ts","./src/app/transactions/total-cost/total-cost.component.html","./src/app/transactions/transactions-routing.module.ts","./src/app/transactions/transactions.module.ts","./src/app/transactions/vendor-withdrawal-history/vendor-withdrawal-history.component.ts","./src/app/transactions/vendor-withdrawal-history/vendor-withdrawal-history.component.html","./src/app/transactions/void-transactions/void-transactions.component.ts","./src/app/transactions/void-transactions/void-transactions.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { TransactionService } from \"../transaction.service\";\n\n@Component({\n  selector: \"app-company-withdrawal-history\",\n  templateUrl: \"./company-withdrawal-history.component.html\",\n  styleUrls: [\"./company-withdrawal-history.component.scss\"],\n})\nexport class CompanyWithdrawalHistoryComponent implements OnInit {\n  // dataSource: any[] = ;\n  downloading;\n  private pageSize: number;\n  private pageIndex: number;\n  tableLoading: boolean = true;\n  dataSource = new MatTableDataSource([]);\n  title = \"Company Withdrawal History\";\n  displayedColumns: any[] = [\n    \"position\",\n    \"bussiness_name\",\n    \"email\",\n    \"account_info\",\n    \"balance\",\n    \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n  startDate: string;\n  endDate: string;\n\n  constructor(\n    private transactionService: TransactionService,\n    private helperService: HelperService\n  ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.getWithdrawalHiistory();\n  }\n\n  getWithdrawalHiistory() {\n    this.transactionService\n      .getCompanyWithdrawalHistory(this.startDate, this.endDate)\n      .subscribe((companyWithdrawal) => {\n        this.length = companyWithdrawal.length;\n        this.dataSource = new MatTableDataSource(companyWithdrawal);\n        this.dataSource.sort = this.sort;\n        this.tableLoading = false;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.tableLoading = true;\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getWithdrawalHiistory();\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getWithdrawalHiistory();\n    this.tableLoading = true;\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>{{title | titlecase}}</h5>\n    </div>\n    <div class=\"card-body\">\n      <app-table-functions [downloading] (setEndDate)=\"setEndDate($event)\" (setStartDate)=\"setStartDate($event)\">\n      </app-table-functions>\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading\">\n          <mat-spinner *ngIf=\"tableLoading\"></mat-spinner>\n        </div>\n\n        <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n          <!-- Position Column -->\n          <ng-container matColumnDef=\"position\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n          </ng-container>\n\n          <!-- Contact Name Column -->\n          <ng-container matColumnDef=\"bussiness_name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.bussiness_name || 'N/A'}}</td>\n          </ng-container>\n\n          <!-- Contact Email Column -->\n          <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Company Name Column -->\n          <ng-container matColumnDef=\"account_info\">\n            <th mat-header-cell *matHeaderCellDef> Account Info </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.account_number || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Balance Column -->\n          <ng-container matColumnDef=\"balance\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Balance </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.balance }} </td>\n          </ng-container>\n\n          <!-- Star Column -->\n          <ng-container matColumnDef=\"star\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element\">\n              <mat-icon>more_vert</mat-icon>\n            </td>\n          </ng-container>\n\n\n          <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n          <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n              <div class=\"example-element-detail\"\n                [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                <div class=\"example-element-diagram\">\n                  <div class=\"example-element-position\"> {{element.position}} </div>\n                  <div class=\"example-element-symbol\"> {{element.position}} </div>\n                  <div class=\"example-element-name\"> {{element.name}} </div>\n                  <div class=\"example-element-weight\"> {{element.position}} </div>\n                </div>\n                <div class=\"example-element-description\">\n                  {{element.description}}\n                </div>\n              </div>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n            [class.example-expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = expandedElement === element ? null : element\">\n          </tr>\n          <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n        </table>\n      </div>\n\n    </div>\n  </div>\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { TransactionService } from \"../transaction.service\";\nimport { Order, OrderResponse } from \"../order\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { UserService } from \"src/app/user/user.service\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\n@Component({\n  selector: \"app-order-history\",\n  templateUrl: \"./order-history.component.html\",\n  styleUrls: [\"./order-history.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class OrderHistoryComponent implements OnInit {\n  companyArray: any[];\n  statusArray: any[] = [\n    { name: \"All Transactions\", code: \"\" },\n    { name: \"Pending Transactions\", code: \"pending\" },\n    { name: \"Voided Transactions\", code: \"void\" },\n    { name: \"Delevered Transactions\", code: \"delivered\" },\n    { name: \"Cancelled Transactions\", code: \"cancelled\" },\n    { name: \"Failed Transactions\", code: \"failed\" },\n    { name: \"Insufficient Fund\", code: \"insufficient\" },\n    { name: \"Ticket Printed Fund\", code: \"ticket-printed\" },\n    { name: \"Not Pending Transactions\", code: \"not_pend\" },\n  ];\n  downloading = false;\n  range = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  dataSource: Order[] = [];\n  tableLoading: boolean = true;\n  // dataSource = new MatTableDataSource([]);\n  title = \"Order History\";\n  displayedColumns: any[] = [];\n  expandedElement: any;\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n  private startDate: string;\n  private endDate: string;\n  private status: string = \"\";\n  private company: string = \"\";\n  isStaff: boolean;\n  isSid: boolean;\n  isComp: boolean;\n  isVend: boolean;\n  isAcct: boolean;\n  vendorArray: { name: any; id: any }[];\n  vendor: any;\n  isVoiding: any;\n  userInfo: any;\n\n  constructor(\n    private transactionService: TransactionService,\n    private userService: UserService,\n    private helperService: HelperService\n  ) { }\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.pageSize = 10;\n    this.tableLoading = true;\n    this.startDate = this.endDate = this.helperService.formatDate(new Date());\n    this.transactionService.getIsLoading()\n      .subscribe((isLoading) => {\n        isLoading ? null : this.getOrderHiistory()\n      })\n    this.getOrderHiistory();\n    this.getuserGroup();\n    this\n  }\n\n  getuserInfo() {\n  }\n\n  prepareForCancel(order) {\n    this.userInfo = this.helperService.getUserInfo()\n    const cancelling_grace_period_in_hours = this.userInfo.cancelling_grace_period_in_hours;\n    const delievery_date = new Date(order.delivery_date)\n    const now = new Date()\n    // const cancel_date: Date = delievery_date.setHours(delievery_date.getHours() - cancelling_grace_period_in_hours)\n    return now > delievery_date\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      case \"emp\":\n        this.isStaff = true;\n        this.displayedColumns = [\n          // \"position\",\n          // \"comment\",\n          \"food\",\n          \"quantity\",\n          \"platform\",\n          \"vendor_user_id\",\n          \"status\",\n          \"star\",\n        ];\n        break;\n      case \"ven\":\n        this.isVend = true;\n        this.displayedColumns = [\n          // \"position\",\n          \"user\",\n          \"company\",\n          \"food\",\n          \"quantity\",\n          \"platform\",\n          \"comment\",\n          \"status\",\n          \"star\",\n        ];\n        // this.getCompanyArray()\n        break;\n      // case 'sid':\n      //   this.isSid = true;\n      //   this.getCompanyArray()\n      //   break;\n      case \"cmp_adm\":\n        this.displayedColumns = [\n          // \"position\",\n          \"user\",\n          \"vendor\",\n          \"food\",\n          \"quantity\",\n          \"platform\",\n          \"comment\",\n          \"status\",\n          \"star\",\n        ];\n        this.isComp = true;\n        this.getVendorArray();\n        break;\n      case \"cmp_act\":\n        this.displayedColumns = [\n          // \"position\",\n          \"user\",\n          \"vendor\",\n          \"food\",\n          \"quantity\",\n          \"platform\",\n          \"comment\",\n          \"status\",\n          \"star\",\n        ];\n        this.isAcct = true;\n        this.getVendorArray();\n        break;\n      case \"sid\":\n        this.isSid = true;\n        this.displayedColumns = [\n          \"company\",\n          \"user\",\n          \"vendor\",\n          \"food\",\n          \"quantity\",\n          \"platform\",\n          \"comment\",\n          \"status\",\n          \"star\",\n        ];\n        this.getCompanyArray();\n        this.getVendorArray();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getVendorArray() {\n    this.userService.getVendors();\n    this.userService.getVendorsUpdate().subscribe((vendors) => {\n      const venArray = vendors.results.map((element) => {\n        return { name: element.bussiness_name, id: element.user.id };\n      });\n      this.vendorArray = [{ id: \"\", name: \"All Vendors\" }, ...venArray];\n    });\n  }\n\n  getCompanyArray() {\n    this.userService.getCompanyList();\n    this.userService.getCompanyListUpdate().subscribe((company) => {\n      const comArray = company.results.map((element) => {\n        return { name: element.name, id: element.id };\n      });\n      this.companyArray = [{ id: \"\", name: \"All Companies\" }, ...comArray];\n    });\n  }\n\n  getOrderHiistory() {\n    this.transactionService\n      .getOrderHistory(\n        this.startDate,\n        this.endDate,\n        this.status,\n        this.company,\n        this.vendor,\n        this.pageSize,\n        this.pageIndex\n      )\n      .subscribe((orderHistory: OrderResponse) => {\n        if (orderHistory.results) {\n          this.length = orderHistory.count;\n          this.dataSource = orderHistory.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n        console.log(this.dataSource);\n        // this.dataSource = new MatTableDataSource(orderHistory);\n        // this.dataSource.sort = this.sort;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getOrderHiistory();\n    this.tableLoading = true;\n  }\n\n  onExportExcel() {\n    this.downloading = !this.downloading;\n    let data;\n    if (this.isStaff) {\n      data = this.dataSource.map((element) => {\n        return {\n          name: element?.food?.name,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          vendor_user_id: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    } else if (this.isComp) {\n      data = this.dataSource.map((element) => {\n        return {\n          user: element?.user,\n          vendor_user_id: element?.vendor_user_id,\n          name: element?.food,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          comment: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    } else if (this.isVend) {\n      data = this.dataSource.map((element) => {\n        return {\n          user: element?.user,\n          company: element?.company,\n          name: element?.food,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          comment: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    } else if (this.isSid) {\n      data = this.dataSource.map((element) => {\n        return {\n          company: element?.company,\n          user: element?.user,\n          vendor_user_id: element?.vendor_user_id,\n          name: element?.food,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          comment: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    }\n    this.helperService.exportExcel(data, \"transactions\", this.displayedColumns);\n    this.downloading = !this.downloading;\n  }\n\n  statusChange(value) {\n    this.status = value;\n    this.getOrderHiistory();\n    this.tableLoading = true;\n  }\n\n  companyChange(value) {\n    this.company = value;\n    this.getOrderHiistory();\n    this.tableLoading = true;\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getOrderHiistory();\n    this.tableLoading = true;\n  }\n\n  vendorChange(value) {\n    this.vendor = value;\n    this.getOrderHiistory();\n    this.tableLoading = true;\n  }\n\n  onVoidTransaction(transactionId) {\n    this.isVoiding = true;\n    this.transactionService.void(transactionId).subscribe((isLoading) => {\n      this.isVoiding = isLoading;\n      isLoading ? this.getOrderHiistory() : null;\n    });\n  }\n\n  onCancelOrder(food) {\n    this.transactionService.cancelOrder(food)\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>{{title | titlecase}}</h5>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions (exportExcel)=\"onExportExcel()\" [downloading]=\"downloading\" [vendorArray]=\"vendorArray\"\n        [statusArray]=\"statusArray\" [companyArray]=\"companyArray\" (vendorChange)=\"vendorChange($event)\"\n        (companyChange)=\"companyChange($event)\" (statusChange)=\"statusChange($event)\" (setEndDate)=\"setEndDate($event)\"\n        (setStartDate)=\"setStartDate($event)\" [rangePicker]=\"true\"></app-table-functions>\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n          <mat-spinner></mat-spinner>\n        </div>\n\n        <div class=\"table-responsive\">\n\n          <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n            <!-- position Column -->\n            <!-- <ng-container matColumnDef=\"position\" sticky>\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container> -->\n\n            <!-- User Column -->\n            <ng-container *ngIf=\"isVend || isComp || isAcct || isSid\" matColumnDef=\"user\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n              <td mat-cell *matCellDef=\"let element\">\n                {{element?.user| titlecase}}\n              </td>\n            </ng-container>\n\n            <!-- Company Column -->\n            <ng-container *ngIf=\"isVend || isSid\" matColumnDef=\"company\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Company </th>\n              <td mat-cell *matCellDef=\"let element\">\n                {{element?.company| titlecase}}\n              </td>\n            </ng-container>\n\n            <!-- Vendor Column -->\n            <ng-container *ngIf=\"isComp || isAcct || isSid\" matColumnDef=\"vendor\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Vendor </th>\n              <td mat-cell *matCellDef=\"let element\">\n                {{element?.vendor_user_id| titlecase}}\n              </td>\n            </ng-container>\n\n            <!-- Food Column -->\n            <ng-container *ngIf=\"isStaff\" matColumnDef=\"food\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Food </th>\n              <td mat-cell *matCellDef=\"let element\">\n                <img class=\"rounded-circle image-radius m-r-5\" [src]=\"element?.food?.image\" [alt]=\"element?.food?.name\">\n                {{element?.food?.name || 'N/A' | titlecase}}\n              </td>\n            </ng-container>\n\n            <ng-container *ngIf=\"isVend || isComp || isAcct || isSid\" matColumnDef=\"food\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Food </th>\n              <td mat-cell *matCellDef=\"let element\">\n                {{element?.food || 'N/A' | titlecase}}\n              </td>\n            </ng-container>\n\n\n            <!-- Quantity Ordered Column -->\n            <ng-container matColumnDef=\"quantity\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Quantity </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element?.quantity }} </td>\n            </ng-container>\n\n            <!-- Platform Column -->\n            <ng-container matColumnDef=\"platform\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Platform </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element?.platform | platform }} </td>\n            </ng-container>\n\n            <ng-container *ngIf=\"isStaff\" matColumnDef=\"vendor_user_id\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Vendor </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element?.vendor_user_id_full?.bussiness_name }} </td>\n            </ng-container>\n\n            <ng-container *ngIf=\"isVend || isComp || isAcct || isSid\" matColumnDef=\"comment\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Order Note </th>\n              <td [title]=\"element?.comment\" mat-cell *matCellDef=\"let element\"> {{element?.comment | slice : 0 : 25 }}\n              </td>\n            </ng-container>\n\n            <!-- <ng-container matColumnDef=\"status\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n              <td\n                [ngClass]=\"{'text-success': element?.status?.toLowerCase() == 'del', 'text-primary': element?.status?.toLowerCase() == 'pend', 'text-danger': element?.status?.toLowerCase() != 'del' || element?.status?.toLowerCase() != 'pend'}\"\n                mat-cell *matCellDef=\"let element\"> {{element?.status | transactionStatus | titlecase }} </td>\n            </ng-container> -->\n\n            <ng-container matColumnDef=\"status\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n              <td\n                [ngClass]=\"{'text-success': element?.status?.toLowerCase() == 'delivered', 'text-primary': element?.status?.toLowerCase() == 'pending', 'text-danger': element?.status?.toLowerCase() != 'delivered' || element?.status?.toLowerCase() != 'pending'}\"\n                mat-cell *matCellDef=\"let element\"> {{element?.status | titlecase }} </td>\n            </ng-container>\n\n            <!-- Star Column -->\n            <ng-container matColumnDef=\"star\" stickyEnd>\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td mat-cell *matCellDef=\"let element\">\n                <button (click)=\"expandedElement = expandedElement === element ? null : element\" mat-icon-button\n                  class=\"btn btn-outline-primary\">\n                  <mat-icon>expand_more</mat-icon>\n                </button>\n              </td>\n            </ng-container>\n\n\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n            <ng-container matColumnDef=\"expandedDetail\">\n              <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n                <div class=\"example-element-detail\"\n                  [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                  <div class=\"mt-3 card bg-secondary text-gray-1\">\n                    <div class=\"card-body \">\n                      <div class=\"d-flex\">\n                        <ng-container *ngIf=\"isStaff\">\n                          <div class=\"col-2\">\n                            <img [src]=\"element?.food?.image\" class=\"img-thumbnail\" [alt]=\"element?.food?.name\">\n                            <br>\n                          </div>\n                        </ng-container>\n\n                        <div class=\"row\" [ngClass]=\"{'col-10': isStaff ===true, 'col-12': isVend ===true}\">\n                          <div class=\"col-7\">\n                            <div class=\"row\">\n                              <p class=\"mb-0 col-12\">\n                                Name\n                              </p>\n                              <ng-container *ngIf=\"isStaff\">\n                                <h6 class=\"col-12\">\n                                  {{element?.food?.name | titlecase}}\n                                </h6>\n                                <p class=\"text-justify col-12\">\n                                  {{element?.food?.description }}\n                                </p>\n                              </ng-container>\n                              <ng-container *ngIf=\"isVend || isComp || isAcct || isSid\">\n                                <h6 class=\"col-12\">\n                                  {{element?.food | titlecase}}\n                                </h6>\n                              </ng-container>\n\n                              <ng-container *ngIf=\"isStaff\">\n                                <!-- <div class=\"col-6\">\n                                  <p class=\"mb-0\">Category</p>\n                                  <h6>\n                                    {{element?.food?.category_full?.name }}\n                                  </h6>\n                                </div> -->\n                                <div class=\"col-6\">\n                                  <p class=\"mb-0\">Vendor</p>\n                                  <h6>\n                                    {{element?.vendor_user_id_full?.bussiness_name }}\n                                  </h6>\n                                </div>\n                              </ng-container>\n\n                            </div>\n\n                            <mat-form-field class=\"mt-3 comment\" appearance=\"outline\">\n                              <mat-label>Order note</mat-label>\n                              <textarea readonly [value]=\"element?.comment\" matInput></textarea>\n                            </mat-form-field>\n                          </div>\n                          <div class=\"col-5\">\n                            <div class=\"row\">\n                              <div class=\"col-12 d-flex justify-content-between\">\n                                <div class=\"\">\n                                  <p class=\"mb-0\">Unit Price</p>\n                                  <h6>\n                                    {{element?.food.unit_price || element?.unit_price | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n                                  </h6>\n                                </div>\n                                <div class=\"\">\n                                  <p class=\"mb-0 text-right\">Quantity</p>\n                                  <h6 class=\"text-right\">\n                                    {{element?.quantity | number}}\n                                  </h6>\n                                </div>\n                              </div>\n                              <hr>\n                              <div class=\"col-12 d-flex justify-content-between\">\n                                <p class=\"mb-0\">\n                                  Total\n                                </p>\n                                <h6 class=\"\">\n                                  {{element?.total | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n                                </h6>\n                              </div>\n                              <hr>\n                              <ng-container *ngIf=\"isStaff\">\n                                <div class=\"col-12 d-flex justify-content-between\">\n\n                                  <div class=\"\">\n                                    <p class=\"mb-0\">From Company Wallet</p>\n                                    <h6>\n                                      {{element?.company_amount | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n                                    </h6>\n                                  </div>\n                                  <div class=\"text-right\">\n                                    <p class=\"mb-0\">From Personal Wallet</p>\n                                    <h6>\n                                      {{element?.personal_amount | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n                                    </h6>\n                                  </div>\n                                </div>\n                              </ng-container>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"d-flex justify-content-between\">\n                        <div *ngIf=\"element?.date_created\">\n                          ordered date: {{element?.date_created}}\n                        </div>\n\n                        <div class=\"text-success\" *ngIf=\"element?.delivered_date\">\n                          delivered date: {{element?.delivered_date}}\n                        </div>\n\n                        <div *ngIf=\"element?.delivery_date\">\n                          delivery date: {{element?.delivery_date}}\n                        </div>\n                      </div>\n\n                    </div>\n                    <div *ngIf=\"isStaff || isComp\" class=\"card-footer\">\n                      <div class=\"d-flex justify-content-end\">\n                        <button [disabled]=\"prepareForCancel(element)\" (click)=\"onCancelOrder(element)\" mat-button\n                          color=\"warn\">Cancel Order</button>\n                        <!-- <button mat-raised-button color=\"primary\">Update</button> -->\n                      </div>\n                    </div>\n                    <div *ngIf=\"isComp || isAcct\" class=\"card-footer\">\n                      <div class=\"d-flex justify-content-end\">\n                        <button [disabled]=\"element.status !== 'delivered'\" (click)=\"onVoidTransaction(element.id)\"\n                          mat-raised-button color=\"primary\">\n                          <i *ngIf=\"isVoiding\" class=\"fa fa-spin fa-spinner\"></i>\n                          Void\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n              [class.example-expanded-row]=\"expandedElement === element\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n            </tr>\n          </table>\n          <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { TransactionService } from \"../transaction.service\";\n\n@Component({\n  selector: \"app-sid-withdrawal-history\",\n  templateUrl: \"./sid-withdrawal-history.component.html\",\n  styleUrls: [\"./sid-withdrawal-history.component.scss\"],\n})\nexport class SidWithdrawalHistoryComponent implements OnInit {\n  // dataSource: any[] = ;\n  private pageSize: number;\n  private pageIndex: number;\n  tableLoading: boolean = true;\n  dataSource = new MatTableDataSource([]);\n  title = \"SID Withdrawal History\";\n  displayedColumns: any[] = [\n    \"position\",\n    \"bussiness_name\",\n    \"email\",\n    \"account_info\",\n    \"balance\",\n    \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n  startDate: string;\n  endDate: string;\n  downloading: boolean = false;\n\n  constructor(\n    private transactionService: TransactionService,\n    private helperService: HelperService\n  ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.getWithdrawalHiistory();\n  }\n\n  getWithdrawalHiistory() {\n    this.transactionService\n      .getSidWithdrawalHistory()\n      .subscribe((companyWithdrawal) => {\n        this.length = companyWithdrawal.length;\n        this.dataSource = new MatTableDataSource(companyWithdrawal);\n        this.dataSource.sort = this.sort;\n        this.tableLoading = false;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.tableLoading = true;\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getWithdrawalHiistory();\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getWithdrawalHiistory();\n    this.tableLoading = true;\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>{{title | titlecase}}</h5>\n    </div>\n    <div class=\"card-body\">\n      <app-table-functions [downloading] (setEndDate)=\"setEndDate($event)\" (setStartDate)=\"setStartDate($event)\">\n      </app-table-functions>\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading\">\n          <mat-spinner *ngIf=\"tableLoading\"></mat-spinner>\n        </div>\n\n        <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n          <!-- Position Column -->\n          <ng-container matColumnDef=\"position\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n          </ng-container>\n\n          <!-- Contact Name Column -->\n          <ng-container matColumnDef=\"bussiness_name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.bussiness_name || 'N/A'}}</td>\n          </ng-container>\n\n          <!-- Contact Email Column -->\n          <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Company Name Column -->\n          <ng-container matColumnDef=\"account_info\">\n            <th mat-header-cell *matHeaderCellDef> Account Info </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.account_number || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Balance Column -->\n          <ng-container matColumnDef=\"balance\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Balance </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.balance }} </td>\n          </ng-container>\n\n          <!-- Star Column -->\n          <ng-container matColumnDef=\"star\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element\">\n              <mat-icon>more_vert</mat-icon>\n            </td>\n          </ng-container>\n\n\n          <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n          <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n              <div class=\"example-element-detail\"\n                [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                <div class=\"example-element-diagram\">\n                  <div class=\"example-element-position\"> {{element.position}} </div>\n                  <div class=\"example-element-symbol\"> {{element.position}} </div>\n                  <div class=\"example-element-name\"> {{element.name}} </div>\n                  <div class=\"example-element-weight\"> {{element.position}} </div>\n                </div>\n                <div class=\"example-element-description\">\n                  {{element.description}}\n                </div>\n              </div>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n            [class.example-expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = expandedElement === element ? null : element\">\n          </tr>\n          <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n        </table>\n      </div>\n\n    </div>\n  </div>\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { UserService } from \"src/app/user/user.service\";\nimport { OrderResponse } from \"../order\";\nimport { TransactionService } from \"../transaction.service\";\n\n@Component({\n  selector: \"app-top-up-history\",\n  templateUrl: \"./top-up-history.component.html\",\n  styleUrls: [\"./top-up-history.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class TopUpHistoryComponent implements OnInit {\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  title = \"Topup History\";\n  displayedColumns: any[] = [];\n  length: number;\n  downloading = false;\n\n  private pageSize: number;\n  private pageIndex: number;\n  private startDate: string;\n  private endDate: string;\n  private status: string = \"\";\n  private company: string = \"\";\n\n  isStaff: boolean;\n  isSid: boolean;\n  isComp: boolean;\n  isVend: boolean;\n  isAcct: boolean;\n  companyArray: { name: any; id: any }[];\n\n  constructor(\n    private transactionService: TransactionService,\n    private userService: UserService,\n    private helperService: HelperService\n  ) {}\n\n  ngOnInit(): void {\n    this.startDate = this.endDate = this.helperService.formatDate(new Date());\n    this.getuserGroup();\n    this.getTopUpHistory();\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      case \"emp\":\n        this.isStaff = true;\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"reference_no\",\n          \"company\",\n          \"date\",\n        ];\n        break;\n      case \"ven\":\n        this.isVend = true;\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"reference_no\",\n          \"company\",\n          \"date\",\n        ];\n        break;\n      case \"cmp_adm\":\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"reference_no\",\n          \"company\",\n          \"date\",\n        ];\n        this.isComp = true;\n        break;\n      case \"cmp_act\":\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"reference_no\",\n          \"company\",\n          \"date\",\n        ];\n        this.isAcct = true;\n        break;\n      case \"sid\":\n        this.isSid = true;\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"reference_no\",\n          \"company\",\n          \"date\",\n        ];\n        this.getCompanyArray();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getCompanyArray() {\n    this.userService.getCompanyList();\n    this.userService.getCompanyListUpdate().subscribe((company) => {\n      const comArray = company.results.map((element) => {\n        return { name: element.name, id: element.id };\n      });\n      this.companyArray = [{ id: \"\", name: \"All Companies\" }, ...comArray];\n    });\n  }\n\n  getTopUpHistory() {\n    this.transactionService\n      .getTopUpHistory(\n        this.startDate,\n        this.endDate,\n        this.company,\n        this.pageSize,\n        this.pageIndex\n      )\n      .subscribe((orderHistory: any[]) => {\n        if (orderHistory.length > 0) {\n          // this.length = orderHistory.count;\n          this.dataSource = orderHistory;\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.tableLoading = true;\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getTopUpHistory();\n  }\n\n  companyChange(value) {\n    this.company = value;\n    this.getTopUpHistory();\n    this.tableLoading = true;\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getTopUpHistory();\n    this.tableLoading = true;\n  }\n\n  onExportExcel() {\n    this.downloading = !this.downloading;\n    let data;\n    data = this.dataSource.map((element) => {\n      return {\n        user: `${element.user}`,\n        amount: element.amount,\n        status: element.status,\n        reference_no: element.reference_no,\n        company: element.company,\n        date: element.date_created,\n      };\n    });\n    this.helperService.exportExcel(data, \"transactions\", this.displayedColumns);\n    this.downloading = !this.downloading;\n  }\n}\n","<div class=\"container-fluid\">\n  <!-- <div class=\"row\">\n    <div class=\"mx-auto col-12\"> -->\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions (exportExcel)=\"onExportExcel()\" [downloading]=\"downloading\" [companyArray]=\"companyArray\"\n        (companyChange)=\"companyChange($event)\" (setEndDate)=\"setEndDate($event)\" (setStartDate)=\"setStartDate($event)\"\n        [rangePicker]=\"true\"></app-table-functions>\n      <div class=\"mat-elevation-z8\">\n\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading\">\n          <div class=\"loader-box\">\n            <div class=\"loader\">\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n            </div>\n          </div>\n          <!-- <mat-spinner *ngIf=\"tableLoading\"></mat-spinner> -->\n        </div>\n\n        <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\n\n          <!-- Contact Name Column -->\n          <ng-container matColumnDef=\"user\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.user || 'N/A'}}</td>\n          </ng-container>\n\n          <!-- Amount Column -->\n          <ng-container matColumnDef=\"amount\">\n            <th mat-header-cell *matHeaderCellDef> Amount </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.amount | currency:\"NGN\" : \"₦\" : '1.0-0'}} </td>\n          </ng-container>\n\n          <!-- Contact Email Column -->\n          <ng-container matColumnDef=\"updated_status\">\n            <th mat-header-cell *matHeaderCellDef> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Balance Column -->\n          <ng-container matColumnDef=\"reference_no\">\n            <th mat-header-cell *matHeaderCellDef>Reference </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.reference_no || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Company Column -->\n          <ng-container matColumnDef=\"company\">\n            <th mat-header-cell *matHeaderCellDef> Company </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.company || 'N/A' }} </td>\n          </ng-container>\n\n          <!-- Date Column -->\n          <ng-container matColumnDef=\"date\">\n            <th mat-header-cell *matHeaderCellDef> Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element | dateTime : element.date_created: element.time_created }}\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\">\n          </tr>\n        </table>\n        <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n      </div>\n\n\n    </div>\n  </div>\n  <!-- </div>\n  </div> -->\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { PaystackOptions } from \"angular4-paystack\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { NotificationService } from \"src/app/shared/services/notification.service\";\nimport { TransactionService } from \"../transaction.service\";\n\n@Component({\n  selector: \"app-topup-personal\",\n  templateUrl: \"./topup-personal.component.html\",\n  styleUrls: [\"./topup-personal.component.scss\"],\n})\nexport class TopupPersonalComponent implements OnInit, AfterViewInit {\n  title: string | number;\n  reference = \"\";\n  amount: number;\n  userInfo: any;\n  options: PaystackOptions;\n  @ViewChild(\"paystackButton\", { static: false }) paystackButton: ElementRef;\n\n  constructor(\n    private helperService: HelperService,\n    private notificationService: NotificationService,\n    private transactionService: TransactionService\n  ) {}\n\n  ngOnInit(): void {\n    this.userInfo = this.helperService.getUserInfo();\n    this.reference = `ref-${Math.ceil(Math.random() * 10e13)}`;\n  }\n\n  ngAfterViewInit(): void {\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    this.userInfo = this.helperService.getUserInfo();\n    this.reference = `ref-${Math.ceil(Math.random() * 10e13)}`;\n  }\n\n  initiateTopUp() {\n    this.transactionService.getReference().subscribe((reference) => {\n      this.reference = reference;\n      const options: PaystackOptions = {\n        ref: this.reference,\n        amount: this.amount * 100,\n        email: this.userInfo.email,\n        key: this.userInfo.public_key,\n        channels: [\"card\"],\n      };\n      this.options = options;\n      this.paystackButton.nativeElement.click();\n    });\n  }\n\n  paymentInit() {\n    console.log(\"Payment initialized\");\n  }\n\n  paymentDone(ref: any) {\n    this.title = \"Payment successfull\";\n    this.notificationService.info(\"Payment\", \"Payment was successful\");\n    console.log(this.title, ref);\n  }\n\n  paymentCancel() {\n    console.log(\"payment failed\");\n  }\n}\n","<!-- EMI Starts-->\n<div class=\"row\">\n  <div class=\"mx-auto col-lg-6\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>EMI</h5>\n      </div>\n      <div class=\"card-body\">\n        <form class=\"theme-form row\">\n          <div class=\"form-group col-12 p-r-0\">\n            <label for=\"\">Amount</label>\n            <input [(ngModel)]=\"amount\" name=\"amount\" class=\"form-control\" type=\"text\" placeholder=\"Amount to top up\">\n          </div>\n          <div class=\"form-group col-auto mx-auto\">\n            <ul class=\"payment-opt\">\n              <li><img src=\"assets/images/ecommerce/mastercard.png\" alt=\"\"></li>\n              <li><img src=\"assets/images/ecommerce/visa.png\" alt=\"\"></li>\n              <li><img src=\"assets/images/ecommerce/paypal.png\" alt=\"\"></li>\n            </ul>\n          </div>\n          <div class=\"col-12\">\n            <button #paystackButton class=\"paystack-button\" angular4-paystack [paystackOptions]=\"options\" (paymentInit)=\"paymentInit()\"\n              (onClose)=\"paymentCancel()\" (callback)=\"paymentDone($event)\" type=\"button\">\n              Pay with Paystack\n            </button>\n            <button type=\"submit\" (click)=\"initiateTopUp()\" class=\"btn btn-primary-gradien btn-block\">Submit</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n<!-- EMI Ends-->\n","import { Component, OnInit } from \"@angular/core\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { UserService } from \"src/app/user/user.service\";\nimport { TotalCost, TotalCostResponse } from \"../total-cost\";\nimport { TransactionService } from \"../transaction.service\";\n\n@Component({\n  selector: \"app-total-cost\",\n  templateUrl: \"./total-cost.component.html\",\n  styleUrls: [\"./total-cost.component.scss\"],\n})\nexport class TotalCostComponent implements OnInit {\n  dataSource: TotalCost[] = [];\n  tableLoading: boolean = true;\n  title = \"Total Cost\";\n  displayedColumns: any[] = [];\n  length: number;\n  downloading = false;\n\n  private pageSize: number;\n  private pageIndex: number;\n  private startDate: string;\n  private endDate: string;\n  private status: string = \"\";\n  private company: string = \"\";\n\n  isStaff: boolean;\n  isSid: boolean;\n  isComp: boolean;\n  isVend: boolean;\n  isAcct: boolean;\n  companyArray: { name: any; id: any }[];\n\n  constructor(\n    private transactionService: TransactionService,\n    private userService: UserService,\n    private helperService: HelperService\n  ) {}\n\n  ngOnInit(): void {\n    this.startDate = this.endDate = this.helperService.formatDate(new Date());\n    this.getuserGroup();\n    this.getTotalCost();\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      case \"emp\":\n        this.isStaff = true;\n        this.displayedColumns = [];\n        break;\n      case \"ven\":\n        this.isVend = true;\n        this.displayedColumns = [];\n        break;\n      case \"cmp_adm\":\n        this.displayedColumns = [\n          \"name\",\n          \"department\",\n          \"staff_level\",\n          // \"company_share_per_txn\",\n          \"total_sum\",\n          \"no_of_days\",\n          \"company_share\",\n          \"staff_share\",\n        ];\n        this.isComp = true;\n        break;\n      case \"cmp_act\":\n        this.displayedColumns = [\n          \"name\",\n          \"department\",\n          \"staff_level\",\n          // \"company_share_per_txn\",\n          \"total_sum\",\n          \"no_of_days\",\n          \"company_share\",\n          \"staff_share\",\n        ];\n        this.isAcct = true;\n        break;\n      case \"sid\":\n        this.isSid = true;\n        this.displayedColumns = [\n          \"name\",\n          \"department\",\n          \"staff_level\",\n          // \"company_share_per_txn\",\n          \"total_sum\",\n          \"no_of_days\",\n          \"company_share\",\n          \"staff_share\",\n        ];\n        this.getCompanyArray();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getCompanyArray() {\n    this.userService.getCompanyList();\n    this.userService.getCompanyListUpdate().subscribe((company) => {\n      const comArray = company.results.map((element) => {\n        return { name: element.name, id: element.id };\n      });\n      this.companyArray = [{ id: \"\", name: \"All Companies\" }, ...comArray];\n    });\n  }\n\n  getTotalCost() {\n    this.transactionService\n      .getTotalCost(\n        this.startDate,\n        this.endDate,\n        this.company,\n        this.pageSize,\n        this.pageIndex\n      )\n      .subscribe((orderHistory: TotalCostResponse) => {\n        if (orderHistory.results) {\n          this.length = orderHistory.count;\n          this.dataSource = orderHistory.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.tableLoading = true;\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getTotalCost();\n  }\n\n  companyChange(value) {\n    this.company = value;\n    this.getTotalCost();\n    this.tableLoading = true;\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getTotalCost();\n    this.tableLoading = true;\n  }\n\n  onExportExcel() {\n    this.downloading = !this.downloading;\n    let data;\n    data = this.dataSource.map((element) => {\n      return {\n        name: `${element.first_name} ${element.last_name}`,\n        department: element.department,\n        staff_level: element.staff_level,\n        total_sum: element.total_sum,\n        no_of_days: element.no_of_days,\n        company_share: element.company_share,\n        staff_share: element.staff_share,\n      };\n    });\n    this.helperService.exportExcel(data, \"transactions\", this.displayedColumns);\n    this.downloading = !this.downloading;\n  }\n}\n","<div class=\"container-fluid\">\n  <!-- <div class=\"row\">\n    <div class=\"mx-auto col-12\"> -->\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions (exportExcel)=\"onExportExcel()\" [downloading]=\"downloading\" [companyArray]=\"companyArray\"\n        (companyChange)=\"companyChange($event)\" (setEndDate)=\"setEndDate($event)\" (setStartDate)=\"setStartDate($event)\"\n        [rangePicker]=\"true\"></app-table-functions>\n      <div class=\"mat-elevation-z8\">\n\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading\">\n          <div class=\"loader-box\">\n            <div class=\"loader\">\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n            </div>\n          </div>\n          <!-- <mat-spinner *ngIf=\"tableLoading\"></mat-spinner> -->\n        </div>\n\n        <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\n\n          <!-- Contact Name Column -->\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.first_name || 'N/A'}} {{element.last_name}}</td>\n          </ng-container>\n\n          <!-- Contact Email Column -->\n          <ng-container matColumnDef=\"department\">\n            <th mat-header-cell *matHeaderCellDef> Department </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.department || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Contact phone_number Column -->\n          <ng-container matColumnDef=\"staff_level\">\n            <th mat-header-cell *matHeaderCellDef> Staff level </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.staff_level || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Company Name Column -->\n          <ng-container matColumnDef=\"total_sum\">\n            <th mat-header-cell *matHeaderCellDef> Total sum </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.total_sum | currency:\"NGN\" : \"₦\" : '1.0-0'}} </td>\n          </ng-container>\n\n          <!-- Balance Column -->\n          <ng-container matColumnDef=\"company_share\">\n            <th mat-header-cell *matHeaderCellDef>Ccompany share </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.company_share | currency:\"NGN\" : \"₦\" : '1.0-0'}} </td>\n          </ng-container>\n\n          <!-- Staff level Column -->\n          <ng-container matColumnDef=\"staff_share\">\n            <th mat-header-cell *matHeaderCellDef> Staff share </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.staff_share || \"N/A\" }} </td>\n          </ng-container>\n\n          <!-- Last login Column -->\n          <ng-container matColumnDef=\"no_of_days\">\n            <th mat-header-cell *matHeaderCellDef> No. of days </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.no_of_days || 'N/A' }} </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\">\n          </tr>\n        </table>\n        <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n      </div>\n\n\n    </div>\n  </div>\n  <!-- </div>\n  </div> -->\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { CompanyWithdrawalHistoryComponent } from \"./company-withdrawal-history/company-withdrawal-history.component\";\nimport { OrderHistoryComponent } from \"./order-history/order-history.component\";\nimport { SidWithdrawalHistoryComponent } from \"./sid-withdrawal-history/sid-withdrawal-history.component\";\nimport { TopUpHistoryComponent } from \"./top-up-history/top-up-history.component\";\nimport { TopupPersonalComponent } from \"./topup-personal/topup-personal.component\";\nimport { TotalCostComponent } from \"./total-cost/total-cost.component\";\nimport { VendorWithdrawalHistoryComponent } from \"./vendor-withdrawal-history/vendor-withdrawal-history.component\";\nimport { VoidTransactionsComponent } from \"./void-transactions/void-transactions.component\";\n\nconst routes: Routes = [\n  {\n    path: \"order-history\",\n    component: OrderHistoryComponent,\n  },\n  {\n    path: \"total-cost\",\n    component: TotalCostComponent,\n  },\n  {\n    path: \"company-withdrawal-history\",\n    component: CompanyWithdrawalHistoryComponent,\n  },\n  {\n    path: \"vendor-withdrawal-history\",\n    component: VendorWithdrawalHistoryComponent,\n  },\n  {\n    path: \"sid-withdrawal-history\",\n    component: SidWithdrawalHistoryComponent,\n  },\n  {\n    path: \"voided-transactions\",\n    component: VoidTransactionsComponent,\n  },\n  {\n    path: \"topup-history\",\n    component: TopUpHistoryComponent,\n  },\n  {\n    path: \"topup-personal\",\n    component: TopupPersonalComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TransactionsRoutingModule } from './transactions-routing.module';\nimport { CompanyWithdrawalHistoryComponent } from './company-withdrawal-history/company-withdrawal-history.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { VendorWithdrawalHistoryComponent } from './vendor-withdrawal-history/vendor-withdrawal-history.component';\nimport { SidWithdrawalHistoryComponent } from './sid-withdrawal-history/sid-withdrawal-history.component';\nimport { OrderHistoryComponent } from './order-history/order-history.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatSelectModule} from '@angular/material/select';\nimport { SharedModule } from '../shared/shared.module';\nimport { TopUpHistoryComponent } from './top-up-history/top-up-history.component';\nimport { VoidTransactionsComponent } from './void-transactions/void-transactions.component';\nimport { TopupPersonalComponent } from './topup-personal/topup-personal.component';\nimport { Angular4PaystackModule } from 'angular4-paystack';\nimport { TotalCostComponent } from './total-cost/total-cost.component';\n\n@NgModule({\n  declarations: [\n    CompanyWithdrawalHistoryComponent,\n    VendorWithdrawalHistoryComponent,\n    SidWithdrawalHistoryComponent,\n    OrderHistoryComponent,\n    TopUpHistoryComponent,\n    VoidTransactionsComponent,\n    TopupPersonalComponent,\n    TotalCostComponent\n  ],\n  imports: [\n    CommonModule,\n    TransactionsRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatTableModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatSelectModule,\n    Angular4PaystackModule,\n  ]\n})\nexport class TransactionsModule { }\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { UserService } from \"src/app/user/user.service\";\nimport { TransactionService } from \"../transaction.service\";\n\n@Component({\n  selector: \"app-vendor-withdrawal-history\",\n  templateUrl: \"./vendor-withdrawal-history.component.html\",\n  styleUrls: [\"./vendor-withdrawal-history.component.scss\"],\n})\nexport class VendorWithdrawalHistoryComponent implements OnInit {\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  title = \"Withdrawal History\";\n  displayedColumns: any[] = [];\n  length: number;\n  downloading = false;\n\n  private pageSize: number;\n  private pageIndex: number;\n  private startDate: string;\n  private endDate: string;\n  private status: string = \"\";\n  private company: string = \"\";\n\n  isStaff: boolean;\n  isSid: boolean;\n  isComp: boolean;\n  isVend: boolean;\n  isAcct: boolean;\n  companyArray: { name: any; id: any }[];\n\n  constructor(\n    private transactionService: TransactionService,\n    private userService: UserService,\n    private helperService: HelperService\n  ) {}\n\n  ngOnInit(): void {\n    this.startDate = this.endDate = this.helperService.formatDate(new Date());\n    this.getuserGroup();\n    this.getVendorWithdrawalHistory();\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      case \"emp\":\n        this.isStaff = true;\n        this.displayedColumns = [];\n        break;\n      case \"ven\":\n        this.isVend = true;\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"receipient\",\n          \"reference_no\",\n          \"transfer_code\",\n          \"company\",\n          \"date\",\n        ];\n        break;\n      case \"cmp_adm\":\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"receipient\",\n          // \"company_share_per_txn\",\n          \"reference_no\",\n          \"transfer_code\",\n          \"company\",\n          \"date\",\n        ];\n        this.isComp = true;\n        break;\n      case \"cmp_act\":\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"receipient\",\n          // \"company_share_per_txn\",\n          \"reference_no\",\n          \"transfer_code\",\n          \"company\",\n          \"date\",\n        ];\n        this.isAcct = true;\n        break;\n      case \"sid\":\n        this.isSid = true;\n        this.displayedColumns = [\n          \"user\",\n          \"amount\",\n          \"updated_status\",\n          \"receipient\",\n          // \"company_share_per_txn\",\n          \"reference_no\",\n          \"transfer_code\",\n          \"company\",\n          \"date\",\n        ];\n        this.getCompanyArray();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getCompanyArray() {\n    this.userService.getCompanyList();\n    this.userService.getCompanyListUpdate().subscribe((company) => {\n      const comArray = company.results.map((element) => {\n        return { name: element.name, id: element.id };\n      });\n      this.companyArray = [{ id: \"\", name: \"All Companies\" }, ...comArray];\n    });\n  }\n\n  getVendorWithdrawalHistory() {\n    this.transactionService\n      .getVendorWithdrawalHistory(\n        this.startDate,\n        this.endDate\n        // this.company,\n        // this.pageSize,\n        // this.pageIndex\n      )\n      .subscribe((data: any) => {\n        console.log(data);\n        if (data.results) {\n          this.length = data.count;\n          this.dataSource = data.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.tableLoading = true;\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getVendorWithdrawalHistory();\n  }\n\n  companyChange(value) {\n    this.company = value;\n    this.getVendorWithdrawalHistory();\n    this.tableLoading = true;\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getVendorWithdrawalHistory();\n    this.tableLoading = true;\n  }\n\n  onExportExcel() {\n    this.downloading = !this.downloading;\n    let data;\n    data = this.dataSource.map((element) => {\n      return {\n        user: `${element.user}`,\n        amount: element.amount,\n        updated_status: element.updated_status,\n        receipient: element.receipient,\n        reference_no: element.reference_no,\n        transfer_code: element.transfer_code,\n        company: element.company,\n        date: element.date_created,\n      };\n    });\n    this.helperService.exportExcel(data, \"transactions\", this.displayedColumns);\n    this.downloading = !this.downloading;\n  }\n}\n","<div class=\"container-fluid\">\n  <!-- <div class=\"row\">\n    <div class=\"mx-auto col-12\"> -->\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions (exportExcel)=\"onExportExcel()\" [downloading]=\"downloading\" [companyArray]=\"companyArray\"\n        (companyChange)=\"companyChange($event)\" (setEndDate)=\"setEndDate($event)\" (setStartDate)=\"setStartDate($event)\"\n        [rangePicker]=\"true\"></app-table-functions>\n      <div class=\"mat-elevation-z8\">\n\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading\">\n          <div class=\"loader-box\">\n            <div class=\"loader\">\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n              <div class=\"line bg-primary\"></div>\n            </div>\n          </div>\n          <!-- <mat-spinner *ngIf=\"tableLoading\"></mat-spinner> -->\n        </div>\n\n        <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\n\n          <!-- Contact Name Column -->\n          <ng-container matColumnDef=\"user\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.user || 'N/A'}}</td>\n          </ng-container>\n\n          <!-- Amount Column -->\n          <ng-container matColumnDef=\"amount\">\n            <th mat-header-cell *matHeaderCellDef> Amount </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.amount | currency:\"NGN\" : \"₦\" : '1.0-0'}} </td>\n          </ng-container>\n\n          <!-- Contact Email Column -->\n          <ng-container matColumnDef=\"updated_status\">\n            <th mat-header-cell *matHeaderCellDef> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.updated_status || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Contact phone_number Column -->\n          <ng-container matColumnDef=\"receipient\">\n            <th mat-header-cell *matHeaderCellDef> Receipient </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.receipient || 'N/A'}} </td>\n          </ng-container>\n\n\n          <!-- Balance Column -->\n          <ng-container matColumnDef=\"reference_no\">\n            <th mat-header-cell *matHeaderCellDef>Reference </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.reference_no || 'N/A'}} </td>\n          </ng-container>\n\n          <!-- Staff level Column -->\n          <ng-container matColumnDef=\"transfer_code\">\n            <th mat-header-cell *matHeaderCellDef> Transfer code </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.transfer_code || \"N/A\" }} </td>\n          </ng-container>\n\n          <!-- Company Column -->\n          <ng-container matColumnDef=\"company\">\n            <th mat-header-cell *matHeaderCellDef> Company </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.company || 'N/A' }} </td>\n          </ng-container>\n\n          <!-- Date Column -->\n          <ng-container matColumnDef=\"date\">\n            <th mat-header-cell *matHeaderCellDef> Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element | dateTime : element.date_created: element.time_created }}\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\">\n          </tr>\n        </table>\n        <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n      </div>\n\n\n    </div>\n  </div>\n  <!-- </div>\n  </div> -->\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatSort } from '@angular/material/sort/sort';\nimport { HelperService } from 'src/app/shared/services/helper.service';\nimport { UserService } from 'src/app/user/user.service';\nimport { TransactionService } from '../transaction.service';\n\n@Component({\n  selector: 'app-void-transactions',\n  templateUrl: './void-transactions.component.html',\n  styleUrls: ['./void-transactions.component.scss']\n})\nexport class VoidTransactionsComponent implements OnInit {\n  companyArray: any[] = [];\n  statusArray: any[] = [\n    { name: \"All Transactions\", code: \"\" },\n    { name: \"Pending Transactions\", code: \"pend\" },\n    { name: \"Voided Transactions\", code: \"void\" },\n    { name: \"Deleted Transactions\", code: \"del\" },\n    { name: \"Cancelled Transactions\", code: \"cnl\" },\n    { name: \"Failed Transactions\", code: \"failed\" },\n    { name: \"Ins Transactions\", code: \"ins\" },\n    { name: \"Not Pending Transactions\", code: \"not_pend\" },\n  ];\n  downloading = false;\n  range = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  // dataSource = new MatTableDataSource([]);\n  title = \"Voided Transactions\";\n  displayedColumns: any[] = [\n    \"position\",\n    \"user\",\n    \"food\",\n    \"comment\",\n    \"quantity\",\n    \"company\",\n    \"vendor_user_id\",\n    \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n  private startDate: string;\n  private endDate: string;\n  private status: string = \"\";\n  private company: string = \"\";\n\n  constructor(\n    private transactionService: TransactionService,\n    private userService: UserService,\n    private helperService: HelperService\n  ) {}\n  // @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.tableLoading = true;\n    this.startDate = this.endDate = this.helperService.formatDate(new Date());\n    this.getVoidedTransactions();\n    this.getCompanyArray();\n  }\n\n  getCompanyArray() {\n    this.userService.getCompanyList();\n    this.userService.getCompanyListUpdate().subscribe((company) => {\n      const comArray = company.results.map((element) => {\n        return { name: element.name, id: element.id };\n      });\n      this.companyArray = [{ id: \"\", name: \"All Companies\" }, ...comArray];\n    });\n  }\n\n  getVoidedTransactions() {\n    this.transactionService\n      .getVoidedTransactions(\n        this.startDate,\n        this.endDate,\n        this.status,\n        this.company,\n        this.pageSize,\n        this.pageIndex\n      )\n      .subscribe((voidedTransactions) => {\n        if (voidedTransactions.results) {\n          this.length = voidedTransactions.count;\n          this.dataSource = voidedTransactions.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n        // this.dataSource = new MatTableDataSource(orderHistory);\n        // this.dataSource.sort = this.sort;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getVoidedTransactions();\n    this.tableLoading = true;\n  }\n\n  statusChange(value) {\n    this.status = value;\n    this.getVoidedTransactions();\n    this.tableLoading = true;\n  }\n\n  companyChange(value) {\n    this.company = value;\n    this.getVoidedTransactions();\n    this.tableLoading = true;\n  }\n\n  setStartDate(value) {\n    this.startDate = this.helperService.formatDate(value.value);\n  }\n\n  setEndDate(value) {\n    this.endDate = this.helperService.formatDate(value.value);\n    this.getVoidedTransactions();\n    this.tableLoading = true;\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>{{title | titlecase}}</h5>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions [downloading]=\"downloading\" [statusArray]=\"statusArray\" [companyArray]=\"companyArray\"\n        (companyChange)=\"companyChange($event)\" (statusChange)=\"statusChange($event)\" (setEndDate)=\"setEndDate($event)\"\n        (setStartDate)=\"setStartDate($event)\"></app-table-functions>\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n          <mat-spinner></mat-spinner>\n        </div>\n\n        <div class=\"table-responsive\">\n\n          <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n            <!-- position Column -->\n            <ng-container matColumnDef=\"position\" sticky>\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n              <td class=\"text-center\" mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n\n            <!-- Contact Name Column -->\n            <ng-container matColumnDef=\"user\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.user || 'N/A'}}</td>\n            </ng-container>\n\n            <!-- Contact Email Column -->\n            <ng-container matColumnDef=\"food\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Food </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.food || 'N/A'}} </td>\n            </ng-container>\n\n            <!-- Company Name Column -->\n            <ng-container matColumnDef=\"comment\">\n              <th mat-header-cell *matHeaderCellDef> Comments </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.comment || 'N/A'}} </td>\n            </ng-container>\n\n            <!-- Balance Column -->\n            <ng-container matColumnDef=\"quantity\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Quantity </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.quantity }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"company\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Company </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.company }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"vendor_user_id\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Vendor </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.vendor_user_id }} </td>\n            </ng-container>\n\n            <!-- Star Column -->\n            <ng-container matColumnDef=\"star\" stickyEnd>\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td mat-cell *matCellDef=\"let element\">\n                <mat-icon>more_vert</mat-icon>\n              </td>\n            </ng-container>\n\n\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n            <ng-container matColumnDef=\"expandedDetail\">\n              <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n                <div class=\"example-element-detail\"\n                  [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                  <div class=\"example-element-diagram\">\n                    <div class=\"example-element-position\"> {{element.position}} </div>\n                    <div class=\"example-element-symbol\"> {{element.position}} </div>\n                    <div class=\"example-element-name\"> {{element.name}} </div>\n                    <div class=\"example-element-weight\"> {{element.position}} </div>\n                  </div>\n                  <div class=\"example-element-description\">\n                    {{element.description}}\n                  </div>\n                </div>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n              [class.example-expanded-row]=\"expandedElement === element\"\n              (click)=\"expandedElement = expandedElement === element ? null : element\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n            </tr>\n          </table>\n          <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}