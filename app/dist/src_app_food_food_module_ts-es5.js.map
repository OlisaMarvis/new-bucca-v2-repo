{"version":3,"mappings":"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AACA;AACA;AACA;;;AACA,gCAA2BA,yDAA3B,CAAyC,gBAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;UACAsB;;;;AAEA,kCAA8B,4EAAmB,uEAAaA,eAAb,CAAnB,CAA9B;AACA;AACA;AACA;;;UACAC;;;;;AACA;AACA;AACA;AACA;AACA;AACAC,iBALA,EAKAC,aALA,EAKAC,WALA,EAKA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA,+BAA4BlB,yCAA5B;AACA;;AACA,+BAA4BA,yCAA5B;AACA;;AACA;AACA;;AACA;;AACA;AACAkB;AACA;;AAlBA;AAmBA;AACA;;;;;iBACA;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA;;AACA;AACA;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;iBACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACAC;AACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;;AACA,4EAHA,CAIA;;AACA,4BAAwBC,gBAAxB,EAA0CA,GAA1C,EAA0C;AAC1C;AACA;AACA;;AACA;AACA;;;;QA9FAC;;AAgGAN;AAAqD,uCAA8BvB,gEAAyBA,qDAAzB,CAA9B,EAA2EA,gEAAyBY,qDAAzB,CAA3E,EAA+GZ,gEAAyB8B,2DAAzB,CAA/G,EAA8J9B,gEAAwB+B,eAAxB,EAAwB,CAAxB,CAA9J;AAAsL,OAA3O;;AACAR,uCAAiCvB,gEAAwB;AAAGa,0BAAH;AAAGC,8CAAH;AAAGkB,6CAAH;AAAGC,oBAAH;AAAGC;AAA2K;AAC/NlC,qEAAiB,OAAjB,EAAiB;AAAkE;AAAoC,aAAvH,EAAuH,YAAvH,EAAuH;AAAuE;AAAiC,aAA/N;AACR;;AAAM;AACEA,sEAAkB,MAAlB,EAAkBmC,QAAlB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AA2B;AAAA;eAC3B;AACA,mCAA+B,8EAAqBC,KAArB,CAA/B;AACA;AACA;;;;eACA;AAAwB;AAAA;eACxB;AACA,gCAA4B,8EAAqBA,KAArB,CAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AAAA;;AACA;;AACA;AACAC;AACA;AACa,eAFb;AAGA;;AACA;;AACA;AACAC;AACA;AACa,eAFb;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AAAsB;AAAA;eACtB;AAA6B;AAAA;;;iBAC7B;AACA;AACA;;;iBACA;AAAA;;AACA;;AACA,mCAA+BrC,8DAA/B,CAA8C,2BAA9C,EACAsC,QADA,GAEAC,aAFA,GAGAC,cAHA;AAIA;AAAA;AAAA,eANA,CAOA;AACA;AACA;;AACA,qDAAiD,2DAAS,2BAAT,CAAjD,EAAyF,4DAAS;AAAA,qBAAU,+EAAKC;AAAA;AAAA,gBAAL,EAAV;AAAA,aAAT,CAAzF,EAAiHC,SAAjH,CAAiH;AAAA;AAAA,aAAjH;AACA;;;iBACA;AACA;;AACA;;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA,oCAAgC,2DAAS,2BAAT,CAAhC,EAAwE,4DAAS;AAAA,qBAAU,+EAAKD;AAAA;AAAA,gBAAL,EAAV;AAAA,aAAT,CAAxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;;;iBACA;AACA;AACA;;AACA;AACA,mBAAiBE,0DAAjB;AACA,qBAAqB,wEAAc9C,KAAd,CAArB,EAAmC;AACnCA;AACA;AACA;;AACA;;AACA,mBAAiB8C,8DAAjB;AACA;AACA;AACA;;AACA;;AACA,mBAAiBA,+DAAjB;AACA;AACA;AACA;;AACA;;AACA;AACA,gCAAgCA,4DAAhC,IAAwCC,YAAgBD,8DAAxD,EAAkE;AAClEE;AACA;;AACAA;AArBA;AAuBA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AAAA;;AACA;AACA;AACA,oCACAC,IADA,CACsB,uDAAI,CAAJ,CADtB,EAEAJ,SAFA,CAEA;AAAA;AAAA,eAFA;AAGA,aAJA,MAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACAG,gEAFA,CAGA;AACA;AACA;;AACA;AACA,8FADA,CAEA;AACA;AACA;AACA;;;AACA;AACA;AACAhE;AACA;AACA,iBAHA,MAIA;AACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA,wDAA+CkE,SAA/C;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;AAAA;AACA;AACAV;AACAA;AACAA;AACAA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;;;iBACA;AACA,qCADA,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACAxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA,mCACAiD,IADA,CACkB,2DAAS,cAAT,CADlB,EAEAJ,SAFA,CAEA;AACA;AAAA;AAAA;;AACA;AACS,aALT;AAMA;;;;;;AAEAZ;AAAuD,wCAA+B5D,gEAAyBA,qDAAzB,CAA/B,EAA4EA,gEAAyBA,iDAAzB,CAA5E,EAAqHA,gEAAwB8E,yBAAxB,CAArH;AAA6I,OAApM;;AACAlB,wCAAkC5D,gEAAwB;AAAGa,2BAAH;AAAGkE;AAA8F;AACnJ/E,yEAAqBgF,QAArB,EAAqBC,iBAArB,EAAqB,CAArB;;AACAjF,yEAAqBgF,QAArB,EAAqBzD,YAArB,EAAqB,CAArB;;AACAvB,yEAAqBgF,QAArB,EAAqBzD,YAArB,EAAqB,CAArB;AACR;;AAAM;AACN;;AACQvB,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,0BAA7C;AACAnC,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,kBAA7C;AACAnC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,0BAAnD;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AACAgB,0CADA;AAEA2F,eAAWC,0DAAX,CAFA;AAGAC;AAHA;AAKA;;AACA;AACA;;AACA,wCAAoC,yFAA+B;AAAGC;AAAH,OAA/B,CAApC,EACA;;AACA;;UACAC;AACA,oGACA;AACA;AACAC,yBAHA,EAGAC,IAHA,EAIA;AACA;AACAxF,qBANA,EAMA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA2CoC,oDAA3C;AACA,oCAAkCA,oDAAlC;AACA,wCAAsCA,oDAAtC;AACA;AACA;AACA;AACA;;AACA;AACA,iBAAiB,qFAAgClC,KAAhC,CAAjB,EAAiD;AACjD;AACA;AACA,WAJA,CAhBA,CAqBA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA,gCAA8B3B,uDAA9B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA,gCAA8BA,uDAA9B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACAkH;;AACA;AACAF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;eACA;AAAyC;AAAA;eACzC;AACA;AACA;AACA;;;;eACA;AAAiB;AAAA;eACjB;AAAA;;AACA;AACA;AACA;;AACA;;AACA;;AACA;AACA;AACAG;AACA;;AACA;AACA,4CADA,CAEA;;;AACA;AACA;AACA;AACa,eANb;AAOA;AACA;;;iBACA;AACA;;AACA;AACA;;;iBACA;AACA;AACA;;AACA;AACA;;AACA;;AACA;;AACA;;AACA;AACA;AACA;;;;eACA;AACA;AACA;AACA;;;;eACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;;AACA;;AACA;;AACA;;AACA;;AACAC,kGACA,qBADA;AAEAC;;AACA;AACA;AACA;;AACA;AAAA;AAAA;;AACA;;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;;AACA;;AACA;;AACA,sCANA,CAOA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AACA;;AACA;AACAC;;AACA;AACA;AACAA,oCACA1C,IADA,CAC0B,yDAAM;AAAA;AAAA,iBAAN,CAD1B,EACqE,uDAAI,CAAJ,CADrE,EAEA;AACgB,4EAAS0C,0BAAT,CAHhB,EAIA9C,SAJA,CAIA;AACA+C;AAAA;AAAA,mBADA;AAEA;AACAC;AAAA;AAAA;AAHA,iBAJA;AASA,eAXA,MAYA;AACA;AACA;AACA,aAjBA,MAkBA;AACA;;AACA;AACAF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;;AACA;;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;AACAG;AACAC;AACA;;AACA;AACA;AACA,YACA;;;;iBACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACAC;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;;AACA,8DAHA,CAIA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,uBAAmBf,gEAAnB,CAAgC;AAChCgB,yDACAC,mBADA,CACA,aADA,EAEAC,kBAFA,GAGAC,iBAHA,GAIAC,qBAJA,CAIA,sCAJA,CADgC;AAMhCrE,0FANgC;AAOhC0B,qDAPgC;AAQhC4C,oDARgC;AAShCC;AATgC,aAAhC;AAWA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACAC;AACA;AACA;;AACA;AACa,eAJb;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AACA;AAAA;AACA;;AACA;AACA;AACA;AACAC;AACAC;AACA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AA0D5J,KAA1D;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA,+FAHA,CAIA;AACA;;;AACA;AACA;;AACA;AACA,oFADA,CAEA;AACA;;AACA;AACA6J;AACA,eARA,CASA;AACA;;;AACAC;AACA;AAAA;AAAA;;AACA;AACA,kEADA,CAEA;AACA;;;AACA;AACA;AACa,eARb;AASA,aA1BA,CA2BA;;;AACA;AACAC,mDADA,CAEA;AACA;;AACA;AACAA;AACA;AACS,aAPT;;AAQA;AACA;;AACA;AACA;AACA;;;iBACA;AAAA;;AACA;;AACA,yCAFA,CAGA;AACA;;;AACA;AACA,iFADA,CAEA;AACA;;;AACA;AACA;;AACA,gCAAgCpM,eAAhC,EAAiDA,GAAjD,EAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACS,aAjBT;AAkBA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;AACA,kCACAgD,IADA,CACkB,2DAAS,aAAT,CADlB,EAEAJ,SAFA,CAEA;AACA;AAAA;AAAA;;AACA;AACS,aALT;AAMA;;;iBACA;AACA;;AACA;;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA7C;;AACA;AACAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;;AACA,yCAAqC,+EAAK;AAAA;AAAA,cAAL,GACrC6C,SADqC,CACrC;AAAA;AAAA,aADqC,CAArC;AAEA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,2CAAgC,aAAhC,cAAiD5C,CAAjD;AACA;AACA;;;;iBACA;AACA,6CAAkC,aAAlC,cAAmDA,CAAnD;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;AACAkM,qEALA,CAMA;AACA;;AACA;AACAA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AAC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A,gBAAY,wEAAc7C,KAAd,CAAZ,EAA0B;AAC1B;AACA;;AACA;AACA,mBAAiBuO,yDAAjB;AACA,mBAAiBA,yDAAjB;AACA;AACA;;AACA;AACA;;AACA;;AACA;AACA;;AATA;AAWA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA,yEADA,CAEA;AACA;AACA;;AACA;AACA,2DADA,CAEA;AACA;;AACA;AACA;;AACA;;AACA;AACa,eAJb;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;;AACA;AACA;AACA;;;;eACA;AACA;AACA;AACA;;eACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;AACA,sDADA,CAEA;AACA;AACA;;;AACA;;AACA;;AACA;AACAC;AACA,eAFA,MAGA;AACAA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;AACA,qGALA,CAMA;AACA;AACA;AACA;AACA;AACA;;AACA,+EAAoEC,sBAApE,SAZA,CAaA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;;eACA;AAA2B;AAAA;eAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,8EADA,CAEA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA,aAPA,CAQA;;;AACA;AACA,wCAA0CC,sCAA1C;AAAA,gBAAgBC,UAAhB,yBAAgBA,UAAhB;AAAA,gBAAgBC,WAAhB,yBAAgBA,WAAhB;AACA;;AACA;AACAC;AACAC;AACA,aAHA,MAIA;AACAA;AACAD;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA,aAHA,MAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA,aAFA,MAGA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,mEACA,yCADA,GACA,IADA;AAEA;;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;AACA;AACA,aALA,CAMA;;;AACA,iCAPA,CAQA;;;AACQ,0DAAKE,mBAAL,EAAKC,sBAAL,EACR;AADQ,aAER/L,IAFQ,CAEU,4DAAU,8CAAK,mBAAL,EAAK,eAAL,CAAV,CAFV,EAGRJ,SAHQ,CAGR;AACA,0CAAkD,gCAAlD;AAAA,kBAAoBoM,iBAApB,yBAAoBA,iBAApB;AAAA,kBAAoBC,QAApB,yBAAoBA,QAApB,CADA,CAEA;;;AACA;AACA;AACA;AACS,aATD;AAUR;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AAAqBD,oCAArB;AAAqBC;AAArB;AACA;;AACA;;AACA,sFALA,CAMA;AACA;;AACA;;AACA;;AACA;AAAiBD,kDAAjB;AAAiBC;AAAjB;AACA;;;;;;AAEAlB;AAAyE,gDAAwC3P,gEAAyBA,qDAAzB,CAAxC,EAAqFA,gEAAyBA,4DAAzB,CAArF,EAAyIA,gEAAyB8Q,kEAAzB,CAAzI,EAAyL9Q,gEAAyB4M,8DAAzB,EAA8C,CAA9C,CAAzL,EAA6O5M,gEAAyBA,iDAAzB,CAA7O,EAAsRA,gEAAyB+Q,4DAAzB,CAAtR,EAAiU/Q,gEAAyBmL,uFAAzB,EAA8C,CAA9C,CAAjU;AAA+W,OAAxb;;AACAwE,gDAA2C3P,gEAAwB;AAAGa,mCAAH;AAAGuB;AAAuCgM;AAAvC;AAAH,OAAxB,CAA3C;;AACAuB;AAAA,gBACA;AAAM9O,gBAAMb;AAAZ,SADA,EAEA;AAAMa,gBAAMb;AAAZ,SAFA,EAGA;AAAMa,gBAAMiQ;AAAZ,SAHA,EAIA;AAAMjQ,gBAAM+L,8DAAZ;AAA0B1L;AAAiBL,kBAAMb;AAAvB;AAA1B,SAJA,EAKA;AAAMa,gBAAMb;AAAZ,SALA,EAMA;AAAMa,gBAAMkQ;AAAZ,SANA,EAOA;AAAMlQ,sBAAN;AAAMK;AAA6BL,kBAAMb;AAAnC,aAA6C;AAAIa,kBAAMb,iDAAV;AAAgBmB,mBAASgK,uFAAT;AAAhB,WAA7C;AAAN,SAPA;AAAA;;AASAwE;AACAvB;AAA0BvN,gBAAMb;AAAhC;AADA;;AAGA;AAAe,2DAAmDA,gEAAwB2P,qBAAxB,EAAwB;AAC1F9O,gBAAcb;AAD4E,UAAxB,EAE7D;AAAiB;AAAUa,kBAAMb;AAAhB,aAAmC;AAAIa,kBAAMb;AAAV,WAAnC,EAAuE;AAAIa,kBAAMiQ;AAAV,WAAvE,EAAuG;AAAIjQ,kBAAM+L,8DAAV;AAA+B1L;AAC5JL,oBAAsBb;AADsI;AAA/B,WAAvG,EAEN;AAAIa,kBAAMb;AAAV,WAFM,EAEmB;AAAIa,kBAAMkQ;AAAV,WAFnB,EAE8C;AAAIlQ,wBAAJ;AAAIK;AACxEL,oBAAsBb;AADkD,eAE3D;AACba,oBAAsBb,iDADT;AAEbmB,qBAAuBgK,uFAAvB;AAFa,aAF2D;AAAJ,WAF9C;AAOF,SAT8C,EAS9C;AAAIiD;AACxBvN,kBAAkBb;AADM;AAAJ,SAT8C,CAAnD;AAWC,OAXhB;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;UACAgR;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AAFA;AAGA;AACA;;;;;eACA;AAA0B;AAAA;eAC1B;AAA+B,kCAAsB,+EAAqB/M,KAArB,CAAtB;AAA2C;;;iBAC1E;AACAtC;AACA;;;;QAVAgO;;AAYAqB;AAAiE,6CAAoChR,gEAAyBA,qDAAzB,CAApC,EAAiFA,gEAAyBA,4DAAzB,CAAjF,EAAqIA,gEAAyB8Q,kEAAzB,CAArI,EAAqL9Q,gEAAyB4M,8DAAzB,EAA8C,CAA9C,CAArL,EAAyO5M,gEAAyBA,iDAAzB,CAAzO,EAAkRA,gEAAyB+Q,4DAAzB,CAAlR,EAA6T/Q,gEAAyBmL,uFAAzB,EAA8C,CAA9C,CAA7T;AAA2W,OAA5a;;AACA6F,6CAAuChR,gEAAwB;AAAGa,gCAAH;AAAGuB;AAAmCE;AAAnC,SAAH;AAAsEvB,mBAAaf,wEAAb;AAAtE,OAAxB,CAAvC;;AACAgR;AAAA,gBACA;AAAMnQ,gBAAMb;AAAZ,SADA,EAEA;AAAMa,gBAAMb;AAAZ,SAFA,EAGA;AAAMa,gBAAMiQ;AAAZ,SAHA,EAIA;AAAMjQ,gBAAM+L,8DAAZ;AAA0B1L;AAAiBL,kBAAMb;AAAvB;AAA1B,SAJA,EAKA;AAAMa,gBAAMb;AAAZ,SALA,EAMA;AAAMa,gBAAMkQ;AAAZ,SANA,EAOA;AAAMlQ,sBAAN;AAAMK;AAA6BL,kBAAMb;AAAnC,aAA6C;AAAIa,kBAAMb,iDAAV;AAAgBmB,mBAASgK,uFAAT;AAAhB,WAA7C;AAAN,SAPA;AAAA;;AASA6F;AACA1O;AAAsBzB,gBAAMb;AAA5B;AADA;;AAGA;AAAe,2DAAmDA,gEAAwBgR,kBAAxB,EAAwB;AAC1FnQ,gBAAcb;AAD4E,UAAxB,EAE7D;AAAiB;AAAUa,kBAAMb;AAAhB,aAAmC;AAAIa,kBAAMb;AAAV,WAAnC,EAAuE;AAAIa,kBAAMiQ;AAAV,WAAvE,EAAuG;AAAIjQ,kBAAM+L,8DAAV;AAA+B1L;AAC5JL,oBAAsBb;AADsI;AAA/B,WAAvG,EAEN;AAAIa,kBAAMb;AAAV,WAFM,EAEmB;AAAIa,kBAAMkQ;AAAV,WAFnB,EAE8C;AAAIlQ,wBAAJ;AAAIK;AACxEL,oBAAsBb;AADkD,eAE3D;AACba,oBAAsBb,iDADT;AAEbmB,qBAAuBgK,uFAAvB;AAFa,aAF2D;AAAJ,WAF9C;AAOF,SAT8C,EAS9C;AAAI7I;AACxBzB,kBAAkBb;AADM;AAAJ,SAT8C,CAAnD;AAWC,OAXhB;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACAiR;;;;;AACA;AAAA;;AAAA,qCACA/K,UADA,EACAyG,iBADA,EACAuE,aADA,EACA9D,GADA,EACAjH,MADA,EACAgL,QADA,EACAtC,aADA;AAEA;;;QAHAmC;;AAKAC;AAAuD,wCAA+BjR,gEAAyBA,qDAAzB,CAA/B,EAA4EA,gEAAyBA,4DAAzB,CAA5E,EAAgIA,gEAAyB8Q,kEAAzB,CAAhI,EAAgL9Q,gEAAyB4M,8DAAzB,EAA8C,CAA9C,CAAhL,EAAoO5M,gEAAyBA,iDAAzB,CAApO,EAA6QA,gEAAyB+Q,4DAAzB,CAA7Q,EAAwT/Q,gEAAyBmL,uFAAzB,EAA8C,CAA9C,CAAxT;AAAsW,OAA7Z;;AACA8F,wCAAkCjR,gEAAwB;AAAGa,2BAAH;AAAGC,uCAAH;AAAGiE;AAA+H;AACpL/E,yEAAqBgF,QAArB,EAAqBmK,mBAArB,EAAqB,CAArB;AACR;;AAAM;AACN;;AACQnP,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,eAA7C;AACR;AAAO,SALmD;AAKnDgD;AAAoD;AACnDnF,sEAAkB+K,UAAlB,EAAkB,CAAlB;;AACA/K,sEAAkBoR,GAAlB,EAAkB,CAAlB;;AACApR,sEAAkBqR,GAAlB,EAAkB,CAAlB;;AACArR,sEAAkBsR,GAAlB,EAAkB,CAAlB;;AACAtR,sEAAkBuR,GAAlB,EAAkB,CAAlB;AACR;;AAAM;AACN;;AACQvR,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,sBAA7C;AACAnC,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,gCAA7C;AACAnC,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,uBAA7C;AACAnC,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,6BAA7C;AACAnC,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,iCAA7C;AACR;AAAO,SAlBmD;AAkBnDH,wCAlBmD;AAkBnDC,mBAlBmD;AAkBnDC;AAA6G;AAC5GlC,sEAAkB,4CAAlB,EAAkBmC,2BAAlB,EAAkB,oBAAlB,EAAkBA,kCAAlB;AACR;AAAO,SApBmD;AAoBnDC;AAAYkM;AAAZ,SApBmD;AAoBP5I;AAAa8L,kDAAb;AAAaC;AAAb,SApBO;AAoB8E1Q,mBAAaf,wEAAb,CApB9E;AAoB4H0C,+BApB5H;AAoB4HC,iBApB5H;AAoB4HC,eApB5H;AAoB4HC,qpBApB5H;AAoB4HC;AAAmvB;AACj6B9C;;AACAA,yEAAqB,CAArB,EAAqB,KAArB,EAAqB,CAArB,EAAqB,CAArB;;AACAA,qEAAiB,OAAjB,EAAiB;AAAkE;AAA6C,aAAhI,EAAgI,WAAhI,EAAgI;AAAiF;AAAqD,aAAtQ,EAAsQ,UAAtQ,EAAsQ;AAAyE;AAA6B,aAA5W;;AACAA,oEAAgB,CAAhB,EAAgB,KAAhB,EAAgB,CAAhB;;AACAA;;AACAA,yEAAqB,CAArB,EAAqB,KAArB,EAAqB,CAArB,EAAqB,CAArB;;AACAA,qEAAiB,SAAjB,EAAiB;AAA4E;AAAoC,aAAjI;;AACAA,yEAAqB,CAArB,EAAqB,KAArB,EAAqB,CAArB,EAAqB,CAArB;;AACAA,qEAAiB,mBAAjB,EAAiB;AAA0F;AAAiC,aAA5I;;AACAA,yEAAqB,CAArB,EAAqB,KAArB,EAAqB,CAArB;;AACAA,uEAAmB,CAAnB;;AACAA;;AACAA,oEAAgB,CAAhB,EAAgB,aAAhB;;AACAA;;AACAA;;AACAA,yEAAqB,EAArB,EAAqB,KAArB,EAAqB,CAArB,EAAqB,CAArB;;AACAA,qEAAiB,WAAjB,EAAiB;AAAiF;AAAoD,aAAtJ,EAAsJ,OAAtJ,EAAsJ;AAAoE;AAA4C,aAAtQ,EAAsQ,UAAtQ,EAAsQ;AAA0E;AAA6B,aAA7W;;AACAA,oEAAgB,EAAhB,EAAgB,KAAhB,EAAgB,CAAhB;;AACAA;AACR;;AAAM;AACEA,sEAAkB,oCAAlB,EAAkBmC,wBAAlB;;AACAnC,qEAAiB,mBAAjB,EAAiBmC,6CAAjB;;AACAnC,oEAAgB,CAAhB;;AACAA,sEAAkB,yBAAlB,EAAkBmC,uCAAlB;;AACAnC,oEAAgB,CAAhB;;AACAA,sEAAkB,oCAAlB,EAAkBmC,uBAAlB;;AACAnC,qEAAiB,mBAAjB,EAAiBmC,4CAAjB;AACR;AAAO,SAhDmD;AAgDnDY,qBAAeqM,6DAAf,EAAiCsC,sEAAjC,EAAyD3G,UAAzD,CAhDmD;AAgDMzE,8nFAhDN;AAgDsoFrD;AAhDtoF,OAAxB,CAAlC;;AAiDAgO;AAAA,gBACA;AAAMpQ,gBAAMb;AAAZ,SADA,EAEA;AAAMa,gBAAMb;AAAZ,SAFA,EAGA;AAAMa,gBAAMiQ;AAAZ,SAHA,EAIA;AAAMjQ,gBAAM+L,8DAAZ;AAA0B1L;AAAiBL,kBAAMb;AAAvB;AAA1B,SAJA,EAKA;AAAMa,gBAAMb;AAAZ,SALA,EAMA;AAAMa,gBAAMkQ;AAAZ,SANA,EAOA;AAAMlQ,sBAAN;AAAMK;AAA6BL,kBAAMb;AAAnC,aAA6C;AAAIa,kBAAMb,iDAAV;AAAgBmB,mBAASgK,uFAAT;AAAhB,WAA7C;AAAN,SAPA;AAAA;;AASA8F;AACAU;AAAe9Q,gBAAMb,0DAArB;AAAoCmB;AAA+B2E;AAA/B;AAApC,UADA;AAEA8L;AAAgB/Q,gBAAMb,oDAAtB;AAA+BmB;AAAsB;AAAtB;AAA/B,UAFA;AAGA0Q;AAA0BhR,gBAAMb,oDAAhC;AAAyCmB;AAA+B;AAA/B;AAAzC,UAHA;AAIA2Q;AAAiBjR,gBAAMb,oDAAvB;AAAgCmB;AAAsB;AAAtB;AAAhC,UAJA;AAKA4Q;AAAuBlR,gBAAMb,oDAA7B;AAAsCmB;AAAtC,UALA;AAMA6Q;AAA2BnR,gBAAMb,oDAAjC;AAA0CmB;AAA1C;AANA;;AAQA;AAAe,2DAAmDnB,gEAAwBiR,aAAxB,EAAwB;AAC1FpQ,gBAAcb,oDAD4E;AAE1FmB;AACAC,sCADA;AAEA0B,k8CAFA;AAGAV,qCAHA;AAIAsD,2DAJA;AAKAzC,2BAA+BjD,iEAL/B;AAMA;AACAkD,6BAAiClD,0EAPjC;AAQAqD;AACA,uCADA;AAEA,6FAFA;AAGA;AAHA,aARA;AAaAiD;AAbA;AAF0F,UAAxB,EAiB7D;AAAiB;AAAUzF,kBAAMb;AAAhB,aAAmC;AAAIa,kBAAMb;AAAV,WAAnC,EAAuE;AAAIa,kBAAMiQ;AAAV,WAAvE,EAAuG;AAAIjQ,kBAAM+L,8DAAV;AAA+B1L;AAC5JL,oBAAsBb;AADsI;AAA/B,WAAvG,EAEN;AAAIa,kBAAMb;AAAV,WAFM,EAEmB;AAAIa,kBAAMkQ;AAAV,WAFnB,EAE8C;AAAIlQ,wBAAJ;AAAIK;AACxEL,oBAAsBb;AADkD,eAE3D;AACba,oBAAsBb,iDADT;AAEbmB,qBAAuBgK,uFAAvB;AAFa,aAF2D;AAAJ,WAF9C;AAOF,SAxB8C,EAwB9C;AAAIwG;AACxB9Q,kBAAkBb,0DADM;AAExBmB;AAAyC2E;AAAzC;AAFwB,YAAJ;AAGX8L;AACT/Q,kBAAkBb,oDADT;AAETmB;AAAgC;AAAhC;AAFS,YAHW;AAMX0Q;AACThR,kBAAkBb,oDADT;AAETmB;AAAyC;AAAzC;AAFS,YANW;AASX2Q;AACTjR,kBAAkBb,oDADT;AAETmB;AAAgC;AAAhC;AAFS,YATW;AAYX4Q;AACTlR,kBAAkBb,oDADT;AAETmB;AAFS,YAZW;AAeX6Q;AACTnR,kBAAkBb,oDADT;AAETmB;AAFS;AAfW,SAxB8C,CAAnD;AA0CC,OA1ChB;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;UACA8Q;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AACA;;AACA;AAJA;AAKA;AACA;;;;;eACA;AAA4B;AAAA;eAC5B;AACA;AACA3M,sDAA2C,oBAA3C;;AACA;AACAA,qDAA4CrB,KAA5C;AACA;;AACA;AACA;AACA;;;;eACA;AAA0B;AAAA;eAC1B;AAA+B,kCAAsB,+EAAqBA,KAArB,CAAtB;AAA2C;;;iBAC1E,0BACA;AACA;;;iBACA;AAAA;;AACA;AACA;AACA,qCAAiC,2DAAS,IAAT,CAAjC,EAAkD,4DAAS,eAAT,CAAlD,EAA2DO,SAA3D,CAA2D;AAC3D;AACS,aAFT;;AAGA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;;AACA,4BAAwB5C,gBAAxB,EAA0CA,GAA1C,EAA0C;AAC1C;AACA;;AACA;;AACA;AACA;AACA,aAXA,CAYA;;;AACA;;AACA;AACA;;;;QA/CA+N;;AAiDAsC;AAA2D,0CAAiCjS,gEAAyBA,qDAAzB,CAAjC,EAA8EA,gEAAyB4M,8DAAzB,EAA8C,CAA9C,CAA9E,EAAkI5M,gEAAyBA,iDAAzB,CAAlI,EAA2KA,gEAAyBA,4DAAzB,CAA3K,EAA+NA,gEAAyB8Q,kEAAzB,CAA/N,EAA+Q9Q,gEAAyB+Q,4DAAzB,CAA/Q,EAA0T/Q,gEAAyBmL,uFAAzB,EAA8C,CAA9C,CAA1T;AAAwW,OAAna;;AACA8G,0CAAoCjS,gEAAwB;AAAGa,6BAAH;AAAGuB;AAAgC4M,wBAAhC;AAAgCT,4CAAhC;AAAgCjM;AAAhC,SAAH;AAAuHvB,mBAAaf,wEAAb;AAAvH,OAAxB,CAApC;;AACAiS;AAAA,gBACA;AAAMpR,gBAAMb;AAAZ,SADA,EAEA;AAAMa,gBAAM+L,8DAAZ;AAA0B1L;AAAiBL,kBAAMb;AAAvB;AAA1B,SAFA,EAGA;AAAMa,gBAAMb;AAAZ,SAHA,EAIA;AAAMa,gBAAMb;AAAZ,SAJA,EAKA;AAAMa,gBAAMiQ;AAAZ,SALA,EAMA;AAAMjQ,gBAAMkQ;AAAZ,SANA,EAOA;AAAMlQ,sBAAN;AAAMK;AAA6BL,kBAAMb;AAAnC,aAA6C;AAAIa,kBAAMb,iDAAV;AAAgBmB,mBAASgK,uFAAT;AAAhB,WAA7C;AAAN,SAPA;AAAA;;AASA8G;AACA1D;AAAwB1N,gBAAMb;AAA9B,UADA;AAEAsC;AAAsBzB,gBAAMb;AAA5B,UAFA;AAGAgP;AAAcnO,gBAAMb;AAApB;AAHA;;AAKA;AAAe,2DAAmDA,gEAAwBiS,eAAxB,EAAwB;AAC1FpR,gBAAcb;AAD4E,UAAxB,EAE7D;AAAiB;AAAUa,kBAAMb;AAAhB,aAAmC;AAAIa,kBAAM+L,8DAAV;AAA+B1L;AACxFL,oBAAsBb;AADkE;AAA/B,WAAnC,EAEN;AAAIa,kBAAMb;AAAV,WAFM,EAEmB;AAAIa,kBAAMb;AAAV,WAFnB,EAEuD;AAAIa,kBAAMiQ;AAAV,WAFvD,EAEuF;AAAIjQ,kBAAMkQ;AAAV,WAFvF,EAEkH;AAAIlQ,wBAAJ;AAAIK;AAC5IL,oBAAsBb;AADsH,eAE/H;AACba,oBAAsBb,iDADT;AAEbmB,qBAAuBgK,uFAAvB;AAFa,aAF+H;AAAJ,WAFlH;AAOF,SAT8C,EAS9C;AAAI6D;AACxBnO,kBAAkBb;AADM,YAAJ;AAEXuO;AACT1N,kBAAkBb;AADT,YAFW;AAIXsC;AACTzB,kBAAkBb;AADT;AAJW,SAT8C,CAAnD;AAeC,OAfhB;AAgBA;AACA;AACA;AACA;;;UACAkS;;;;;AACA;AAAA;;AAAA,qCACAhM,UADA,EACAkH,GADA,EACAjH,MADA,EACAwG,iBADA,EACAuE,aADA,EACAC,QADA,EACAtC,aADA;AAEA;;;QAHAoD;;AAKAC;AAAiD,qCAA4BlS,gEAAyBA,qDAAzB,CAA5B,EAAyEA,gEAAyB4M,8DAAzB,EAA8C,CAA9C,CAAzE,EAA6H5M,gEAAyBA,iDAAzB,CAA7H,EAAsKA,gEAAyBA,4DAAzB,CAAtK,EAA0NA,gEAAyB8Q,kEAAzB,CAA1N,EAA0Q9Q,gEAAyB+Q,4DAAzB,CAA1Q,EAAqT/Q,gEAAyBmL,uFAAzB,EAA8C,CAA9C,CAArT;AAAmW,OAApZ;;AACA+G,qCAA+BlS,gEAAwB;AAAGa,wBAAH;AAAGC,gDAAH;AAAGiE;AAAkI;AACpL/E,yEAAqBgF,QAArB,EAAqBmN,WAArB,EAAqB,CAArB;AACR;;AAAM;AACN;;AACQnS,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,eAA7C;AACR;AAAO,SALgD;AAKhDgD;AAAiD;AAChDnF,sEAAkB+K,UAAlB,EAAkB,CAAlB;;AACA/K,sEAAkBoR,GAAlB,EAAkB,CAAlB;;AACApR,sEAAkBqR,GAAlB,EAAkB,CAAlB;;AACArR,sEAAkBsR,GAAlB,EAAkB,CAAlB;;AACAtR,sEAAkBuR,GAAlB,EAAkB,CAAlB;AACR;;AAAM;AACN;;AACQvR,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,sBAA7C;AACAnC,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,gCAA7C;AACAnC,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,uBAA7C;AACAnC,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,6BAA7C;AACAnC,yEAAqBkF,KAAMlF,2DAA3B,MAA6CmC,iCAA7C;AACR;AAAO,SAlBgD;AAkBhDH,2DAlBgD;AAkBhDC,oBAlBgD;AAkBhDC;AAA8H;AAC7HlC,sEAAkB,4CAAlB,EAAkBmC,2BAAlB,EAAkB,oBAAlB,EAAkBA,kCAAlB,EAAkB,aAAlB,EAAkBA,8CAAlB,EAAkB,YAAlB,EAAkBA,sBAAlB,EAAkB,UAAlB,EAAkBA,oBAAlB;AACR;AAAO,SApBgD;AAoBhDC;AAAY4M;AAAZ,SApBgD;AAoBpBxM,+CApBoB;AAoBpBzB,mBAAsDf,wEAAtD,CApBoB;AAoBmEyC,kBApBnE;AAoBmEC,+BApBnE;AAoBmEC,iBApBnE;AAoBmEC,eApBnE;AAoBmEC,goBApBnE;AAoBmEC;AAAuuB;AACz1B9C;;AACAA,yEAAqB,CAArB,EAAqB,KAArB,EAAqB,CAArB,EAAqB,CAArB;;AACAA,qEAAiB,OAAjB,EAAiB;AAA+D;AAA6C,aAA7H,EAA6H,WAA7H,EAA6H;AAA8E;AAAqD,aAAhQ,EAAgQ,UAAhQ,EAAgQ;AAAsE;AAA6B,aAAnW;;AACAA,oEAAgB,CAAhB,EAAgB,KAAhB,EAAgB,CAAhB;;AACAA;;AACAA,yEAAqB,CAArB,EAAqB,KAArB,EAAqB,CAArB,EAAqB,CAArB;;AACAA,qEAAiB,SAAjB,EAAiB;AAAyE;AAAoC,aAA9H;;AACAA,yEAAqB,CAArB,EAAqB,KAArB,EAAqB,CAArB,EAAqB,CAArB;;AACAA,qEAAiB,mBAAjB,EAAiB;AAAuF;AAAiC,aAAzI;;AACAA,yEAAqB,CAArB,EAAqB,KAArB,EAAqB,CAArB;;AACAA,uEAAmB,CAAnB;;AACAA;;AACAA,oEAAgB,CAAhB,EAAgB,aAAhB;;AACAA;;AACAA;;AACAA,yEAAqB,EAArB,EAAqB,KAArB,EAAqB,CAArB,EAAqB,CAArB;;AACAA,qEAAiB,WAAjB,EAAiB;AAA8E;AAAoD,aAAnJ,EAAmJ,OAAnJ,EAAmJ;AAAiE;AAA4C,aAAhQ,EAAgQ,UAAhQ,EAAgQ;AAAuE;AAA6B,aAApW;;AACAA,oEAAgB,EAAhB,EAAgB,KAAhB,EAAgB,CAAhB;;AACAA;AACR;;AAAM;AACEA,sEAAkB,oCAAlB,EAAkBmC,wBAAlB;;AACAnC,qEAAiB,mBAAjB,EAAiBmC,6CAAjB;;AACAnC,oEAAgB,CAAhB;;AACAA,sEAAkB,yBAAlB,EAAkBmC,uCAAlB;;AACAnC,oEAAgB,CAAhB;;AACAA,sEAAkB,oCAAlB,EAAkBmC,uBAAlB;;AACAnC,qEAAiB,mBAAjB,EAAiBmC,4CAAjB;AACR;AAAO,SAhDgD;AAgDhDY,qBAAeqM,6DAAf,EAAiCsC,sEAAjC,EAAyD3G,UAAzD,CAhDgD;AAgDSzE,ywFAhDT;AAgDoxFrD;AAhDpxF,OAAxB,CAA/B;;AAiDAiP;AAAA,gBACA;AAAMrR,gBAAMb;AAAZ,SADA,EAEA;AAAMa,gBAAM+L,8DAAZ;AAA0B1L;AAAiBL,kBAAMb;AAAvB;AAA1B,SAFA,EAGA;AAAMa,gBAAMb;AAAZ,SAHA,EAIA;AAAMa,gBAAMb;AAAZ,SAJA,EAKA;AAAMa,gBAAMiQ;AAAZ,SALA,EAMA;AAAMjQ,gBAAMkQ;AAAZ,SANA,EAOA;AAAMlQ,sBAAN;AAAMK;AAA6BL,kBAAMb;AAAnC,aAA6C;AAAIa,kBAAMb,iDAAV;AAAgBmB,mBAASgK,uFAAT;AAAhB,WAA7C;AAAN,SAPA;AAAA;;AASA+G;AACAP;AAAe9Q,gBAAMb,0DAArB;AAAoCmB,iBAAS,2DAAU;AAAA;AAAA,WAAV,CAAT,EAAmB;AAAsB2E;AAAtB,WAAnB;AAApC,UADA;AAEA8L;AAAgB/Q,gBAAMb,oDAAtB;AAA+BmB;AAAsB;AAAtB;AAA/B,UAFA;AAGA0Q;AAA0BhR,gBAAMb,oDAAhC;AAAyCmB;AAA+B;AAA/B;AAAzC,UAHA;AAIA2Q;AAAiBjR,gBAAMb,oDAAvB;AAAgCmB;AAAsB;AAAtB;AAAhC,UAJA;AAKA4Q;AAAuBlR,gBAAMb,oDAA7B;AAAsCmB;AAAtC,UALA;AAMA6Q;AAA2BnR,gBAAMb,oDAAjC;AAA0CmB;AAA1C;AANA;;AAQA;AAAe,2DAAmDnB,gEAAwBkS,UAAxB,EAAwB;AAC1FrR,gBAAcb,oDAD4E;AAE1FmB;AACAC,yCADA;AAEAoB,+CAFA;AAGAJ,6BAHA;AAIAU,06CAJA;AAKAO;AACA,uDADA;AAEA,6FAFA;AAGA,4EAHA;AAIA,6EAJA;AAKA,wDALA;AAMA;AANA,aALA;AAaAJ,2BAA+BjD,iEAb/B;AAcA;AACAkD,6BAAiClD,0EAfjC;AAgBAsG;AAhBA;AAF0F,UAAxB,EAoB7D;AAAiB;AAAUzF,kBAAMb;AAAhB,aAAmC;AAAIa,kBAAM+L,8DAAV;AAA+B1L;AACxFL,oBAAsBb;AADkE;AAA/B,WAAnC,EAEN;AAAIa,kBAAMb;AAAV,WAFM,EAEmB;AAAIa,kBAAMb;AAAV,WAFnB,EAEuD;AAAIa,kBAAMiQ;AAAV,WAFvD,EAEuF;AAAIjQ,kBAAMkQ;AAAV,WAFvF,EAEkH;AAAIlQ,wBAAJ;AAAIK;AAC5IL,oBAAsBb;AADsH,eAE/H;AACba,oBAAsBb,iDADT;AAEbmB,qBAAuBgK,uFAAvB;AAFa,aAF+H;AAAJ,WAFlH;AAOF,SA3B8C,EA2B9C;AAAIwG;AACxB9Q,kBAAkBb,0DADM;AAExBmB,mBAAmB,2DAAU;AAAA;AAAA,aAAV,CAAnB,EAA6B;AAAsB2E;AAAtB,aAA7B;AAFwB,YAAJ;AAGX8L;AACT/Q,kBAAkBb,oDADT;AAETmB;AAAgC;AAAhC;AAFS,YAHW;AAMX0Q;AACThR,kBAAkBb,oDADT;AAETmB;AAAyC;AAAzC;AAFS,YANW;AASX2Q;AACTjR,kBAAkBb,oDADT;AAETmB;AAAgC;AAAhC;AAFS,YATW;AAYX4Q;AACTlR,kBAAkBb,oDADT;AAETmB;AAFS,YAZW;AAeX6Q;AACTnR,kBAAkBb,oDADT;AAETmB;AAFS;AAfW,SA3B8C,CAAnD;AA6CC,OA7ChB,KA8CA;;;UACAiR;;;;AAEA,iCAA6B,uEAAc,4EAAmB,uEAAaA,mBAAb,CAAnB,CAAd,CAA7B;AACA;;;UACAC;;;;;AACA;AACA;AAAAnM,kBADA,EACAoM,mBADA,EACAC,QADA,EACA9Q,aADA,EACAoN,aADA,EACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAA4C2D,8BAA5C;AAA4CC;AAA5C;AACA;;AAXA;AAYA;AACA;;;;;eACA;AAAmB;AAAA;eACnB;AACA,2BAAyB,+EAAqBxO,KAArB,CAAzB;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AACA,2FACA,4BADA;AAEA;AACA;;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA;;;;QAzCAyO;;AA2CAL;AAA6D,2CAAkCrS,gEAAwBiS,eAAxB,CAAlC,EAA4EjS,gEAAyBA,qDAAzB,CAA5E,EAAyHA,gEAAyBoP,6EAAzB,EAAkD,CAAlD,CAAzH,EAAiLpP,gEAAwB,UAAxB,CAAjL,EAAuNA,gEAAyBqP,4DAAzB,CAAvN,EAAsQrP,gEAAyBmL,uFAAzB,EAA8C,CAA9C,CAAtQ;AAAoT,OAAjX;;AACAkH,2CAAqCrS,gEAAwB;AAAGa,8BAAH;AAAGuB;AAAiCuQ;AAAjC,SAAH;AAAsD5R,mBAAaf,wEAAb;AAAtD,OAAxB,CAArC;;AACAqS;AAAA,gBACA;AAAMxR;AAAN,SADA,EAEA;AAAMA,gBAAMb;AAAZ,SAFA,EAGA;AAAMa,yBAAN;AAAMK;AAAgCL,kBAAMb;AAAtC,aAAgD;AAAIa,kBAAMb,iDAAV;AAAgBmB,mBAASiO,6EAAT;AAAhB,WAAhD;AAAN,SAHA,EAIA;AAAMvO,sBAAN;AAAMK;AAA6BL,kBAAMb,oDAAnC;AAA4CmB;AAA5C;AAAN,SAJA,EAKA;AAAMN,gBAAMwO;AAAZ,SALA,EAMA;AAAMxO,sBAAN;AAAMK;AAA6BL,kBAAMb;AAAnC,aAA6C;AAAIa,kBAAMb,iDAAV;AAAgBmB,mBAASgK,uFAAT;AAAhB,WAA7C;AAAN,SANA;AAAA;;AAQAkH;AACAM;AAAe9R,gBAAMb;AAArB;AADA;;AAGA;AAAe,2DAAmDA,gEAAwBqS,gBAAxB,EAAwB;AAC1FxR,gBAAcb;AAD4E,UAAxB,EAE7D;AAAiB;AAAUa;AAAV,aAAgC;AAAIA,kBAAMb;AAAV,WAAhC,EAA6D;AAAIa,2BAAJ;AAAIK;AACvFL,oBAAsBb;AADiE,eAE1E;AACba,oBAAsBb,iDADT;AAEbmB,qBAAuBiO,6EAAvB;AAFa,aAF0E;AAAJ,WAA7D,EAKN;AAAIvO,wBAAJ;AAAIK;AACpBL,oBAAsBb,oDADF;AAEpBmB;AAFoB;AAAJ,WALM,EAQN;AAAIN,kBAAMwO;AAAV,WARM,EAQyB;AAAIxO,wBAAJ;AAAIK;AACnDL,oBAAsBb;AAD6B,eAEtC;AACba,oBAAsBb,iDADT;AAEbmB,qBAAuBgK,uFAAvB;AAFa,aAFsC;AAAJ,WARzB;AAaF,SAf8C,EAe9C;AAAIwH;AACxB9R,kBAAkBb;AADM;AAAJ,SAf8C,CAAnD;AAiBC,OAjBhB;AAkBA;AACA;AACA;;;UACAmS;;;;;AACA;AAAA;;AAAA;;AACA;AACA,uCAAkC/C,kEAAlC,kCAAgDjJ,MAAhD,EAAgDD,UAAhD,EAAgDiL,QAAhD;;AACA;;AAHA;AAIA;;;;iBACA;AACA;;AACA;AACA;;;;QATAkB;;AAWAF;AAAmD,sCAA6BnS,gEAAwBkS,UAAxB,CAA7B,EAAkElS,gEAAyBA,qDAAzB,CAAlE,EAA+GA,gEAAyBA,iDAAzB,CAA/G,EAAwJA,gEAAyB+Q,4DAAzB,CAAxJ,EAAmM/Q,gEAAyBoP,6EAAzB,EAAkD,CAAlD,CAAnM,EAA2PpP,gEAAwB,UAAxB,CAA3P,EAAiSA,gEAAyBqP,4DAAzB,CAAjS,EAAgVrP,gEAAyBmL,uFAAzB,EAA8C,CAA9C,CAAhV;AAA8X,OAAjb;;AACAgH,sCAAgCnS,gEAAwB;AAAGa,yBAAH;AAAGC,qEAAH;AAAGkB,6DAAH;AAAGC,mBAAH;AAAGC;AAA+M;AAClQlC,sEAAkB,cAAlB,EAAkBmC,0BAAlB,EAAkB,eAAlB,EAAkBA,YAAlB,EAAkB,UAAlB,EAAkBA,YAAlB;;AACAnC,sEAAkB,kBAAlB,EAAkBmC,YAAlB,EAAkB,sBAAlB,EAAkBA,UAAlB;AACR;AAAO,SAHiD;AAGjDC;AAAYC,8BAAZ;AAAYC,wCAAZ;AAAYiQ;AAAZ,SAHiD;AAGuC/P,gCAHvC;AAGuCzB,mBAAuCf,wEAAvC;AAHvC,OAAxB,CAAhC;;AAIAmS;AAAA,gBACA;AAAMtR;AAAN,SADA,EAEA;AAAMA,gBAAMb;AAAZ,SAFA,EAGA;AAAMa,gBAAMb;AAAZ,SAHA,EAIA;AAAMa,gBAAMkQ;AAAZ,SAJA,EAKA;AAAMlQ,yBAAN;AAAMK;AAAgCL,kBAAMb;AAAtC,aAAgD;AAAIa,kBAAMb,iDAAV;AAAgBmB,mBAASiO,6EAAT;AAAhB,WAAhD;AAAN,SALA,EAMA;AAAMvO,sBAAN;AAAMK;AAA6BL,kBAAMb,oDAAnC;AAA4CmB;AAA5C;AAAN,SANA,EAOA;AAAMN,gBAAMwO;AAAZ,SAPA,EAQA;AAAMxO,sBAAN;AAAMK;AAA6BL,kBAAMb;AAAnC,aAA6C;AAAIa,kBAAMb,iDAAV;AAAgBmB,mBAASgK,uFAAT;AAAhB,WAA7C;AAAN,SARA;AAAA;;AAUA;AAAe,2DAAmDnL,gEAAwBmS,WAAxB,EAAwB;AAC1FtR,gBAAcb,oDAD4E;AAE1FmB;AACAC,oDADA;AAEAoB,kCAFA;AAGAJ,6DAHA;AAIAiB;AACA,yDADA;AAEA,6DAFA;AAGA,gDAHA;AAIA,2CAJA;AAKA,oDALA;AAMA;AANA;AAJA;AAF0F,UAAxB,EAe7D;AAAiB;AAAUxC;AAAV,aAA2B;AAAIA,kBAAMb;AAAV,WAA3B,EAAwD;AAAIa,kBAAMb;AAAV,WAAxD,EAAiF;AAAIa,kBAAMkQ;AAAV,WAAjF,EAA4G;AAAIlQ,2BAAJ;AAAIK;AACtIL,oBAAsBb;AADgH,eAEzH;AACba,oBAAsBb,iDADT;AAEbmB,qBAAuBiO,6EAAvB;AAFa,aAFyH;AAAJ,WAA5G,EAKN;AAAIvO,wBAAJ;AAAIK;AACpBL,oBAAsBb,oDADF;AAEpBmB;AAFoB;AAAJ,WALM,EAQN;AAAIN,kBAAMwO;AAAV,WARM,EAQyB;AAAIxO,wBAAJ;AAAIK;AACnDL,oBAAsBb;AAD6B,eAEtC;AACba,oBAAsBb,iDADT;AAEbmB,qBAAuBgK,uFAAvB;AAFa,aAFsC;AAAJ,WARzB;AAaF,SA5B8C,EA4B9C,IA5B8C,CAAnD;AA4Be,OA5B9B;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACAyH;;;;AAEAA;AAAyD;AAAA,OAAzD;;AACAA,yCAAmC5S,+DAAuB;AAAGa;AAAH,OAAvB,CAAnC;AACA+R,yCAAmC5S,+DAAuB;AAAG2J,mBACjD8C,yDADiD,EAEjD2C,mEAFiD,EAGjD9D,6DAHiD,EAIjD8D,mEAJiD,EAKjDsC,oEALiD,EAMjDrC,0DANiD,GAOlDD,mEAPkD;AAAH,OAAvB,CAAnC;;AAQA;AAAe,2DAAmDpP,gEAAwB4S,cAAxB,EAAwB;AAC1F/R,gBAAcb,mDAD4E;AAE1FmB;AACAwI,sBACoB8C,yDADpB,EAEoB2C,mEAFpB,EAGoB9D,6DAHpB,EAIoB8D,mEAJpB,EAKoBsC,oEALpB,EAMoBrC,0DANpB,CADA;AASA;AACAzF,sBACoBwF,mEADpB,EAEAR,YAFA,EAGAvD,YAHA,EAIAI,OAJA,EAKAyG,UALA,EAMAC,WANA,EAOA/G,cAPA,CAVA;AAmBAvB,2BACA+E,YADA,EAEAvD,YAFA,EAGAI,OAHA,EAIAV,UAJA,EAKAoE,mBALA,EAMA+C,UANA,EAOAC,WAPA,EAQAhF,WARA,EASAZ,iBATA,EAUA0E,aAVA,EAWA7F,cAXA;AAnBA;AAF0F,UAAxB,EAmC7D,IAnC6D,EAmC7D,IAnC6D,CAAnD;AAmCO,OAnCtB;;AAoCA;AAAe,2DAAmDpL,iEAAyB4S,cAAzB,EAAyB;AAAkB/I;AAA4B;AAA6J,WAA3M;AAA2MF;AAAyB,oBAAQ8C,yDAAR,EACvT2C,mEADuT,EAEvT9D,6DAFuT,EAGvT8D,mEAHuT,EAIvTsC,oEAJuT,EAKvTrC,0DALuT;AAKzS,WALqE;AAKrEzF;AAAyB,oBAAQwF,mEAAR,EAAuBR,YAAvB,EAAuBvD,YAAvB,EAAuBI,OAAvB,EAAuByG,UAAvB,EAAuBC,WAAvB,EAAuB/G,cAAvB;AAAuB;AALqB,SAAzB,CAAnD;AAKyI,OALxJ;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5qEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AAIA;AACA;;UACAyH,iBACA;AAAA;;AACA;AACA;;AAEA,iCAA6B,oEAAUA,cAAV,CAA7B;;UACAC;;;;AAEAA;AAAyD;AAAA,OAAzD;;AACAA,yCAAmCC,gEAAwB;AAAGlS,4BAAH;AAAGC,wCAAH;AAAGkB,yCAAH;AAAGQ;AAAH,OAAxB,CAAnC;;AACA;AAAe,2DAAmDuQ,gEAAwBD,cAAxB,EAAwB;AAC1FjS,gBAAckS,oDAD4E;AAE1F5R;AACAC,uCADA;AAEAoB,qCAFA;AAGAa;AAAwB;AAAxB;AAHA;AAF0F,UAAxB,EAO7D,IAP6D,EAO7D,IAP6D,CAAnD;AAOO,OAPtB;;UAQA2P;;;;;AACA;AAAA;;AAAA;;AACA;AACA,wCAFA,CAGA;;AACA;AAJA;AAKA;;;;iBACA;AAAA;;AACA;AACA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;AACA,0FACAC,MADA,CACA;AAAA;AAAA,eADA,EAEAA,MAFA,CAEA;AAAA;AAAA,eAFA,EAGAC,IAHA,CAGA;AAAA;AAAA,eAHA;;AAIA;AACAC;AACA;AACA;AACA;;;;QA5BAC;;AA8BAJ;AAAmD,sCAA6BD,gEAAyBA,qDAAzB,CAA7B,EAA0EA,gEAAyBM,2DAAzB,CAA1E,EAAqHN,gEAAyBO,qDAAzB,CAArH;AAAsJ,OAAzM;;AACAN,sCAAgCD,gEAAwB;AAAGlS,yBAAH;AAAGC,oCAAH;AAAGiE;AAAwH;AAC3KgO,yEAAqB/N,QAArB,EAAqB8N,cAArB,EAAqB,CAArB;AACR;;AAAM;AACN;;AACQC,yEAAqB7N,KAAM6N,2DAA3B,MAA6C5Q,qBAA7C;AACR;AAAO,SALiD;AAKjDH,qCALiD;AAKjDC,mBALiD;AAKjDC;AAAwG;AACvG6Q,sEAAkB,2BAAlB,EAAkB5Q,2BAAlB,EAAkB,wBAAlB,EAAkBA,6BAAlB;AACR;AAAO,SAPiD;AAOjDC;AAAY4M;AAAZ,SAPiD;AAOrBxM,gCAPqB;AAOrBzB,mBAAuCgS,wEAAvC,CAPqB;AAOmDrQ,+BAPnD;AAOmDC,gBAPnD;AAOmDC,eAPnD;AAOmDE;AAAiG;AACpMiQ,0EAAsBQ,GAAtB;;AACAR,uEAAmB,CAAnB;;AACAA,uEAAmB,CAAnB,EAAmB,CAAnB;AACR;AAAO,SAXiD;AAWjDzM,6UAXiD;AAWkRrD,wBAXlR;AAWkRC;AAXlR,OAAxB,CAAhC;;AAYA8P;AAAA,gBACA;AAAMnS,gBAAMkS;AAAZ,SADA,EAEA;AAAMlS,gBAAMwS;AAAZ,SAFA,EAGA;AAAMxS,yBAAN;AAAMK;AAAgCL,kBAAMkS,iDAAtC;AAA4C5R,mBAASmS,qDAAT;AAA5C;AAAN,SAHA;AAAA;;AAKAN;AACAQ;AAAqB3S,gBAAMkS,0DAA3B;AAA0C5R;AAA0B2E;AAA1B;AAA1C;AADA;;AAGA;AAAe,2DAAmDiN,gEAAwBC,WAAxB,EAAwB;AAC1FnS,gBAAckS,oDAD4E;AAE1F5R;AACAC,mCADA;AAEAoB,kCAFA;AAGAM,yGAHA;AAIAV,6BAJA;AAKAiB;AACA,oCADA;AAEA,4EAFA;AAGA;AAHA,aALA;AAUAH,6BAAiC6P,yEAVjC;AAWA9P,2BAA+B8P,iEAX/B;AAYAzM;AAZA;AAF0F,UAAxB,EAgB7D;AAAiB;AAAUzF,kBAAMkS;AAAhB,aAAmC;AAAIlS,kBAAMwS;AAAV,WAAnC,EAA8D;AAAIxS,2BAAJ;AAAIK;AACxFL,oBAAsBkS,iDADkE;AAExF5R,qBAAuBmS,qDAAvB;AAFwF;AAAJ,WAA9D;AAGF,SAnB8C,EAmB9C;AAAIE;AACxB3S,kBAAkBkS,0DADM;AAExB5R;AAAoC2E;AAApC;AAFwB;AAAJ,SAnB8C,CAAnD;AAsBC,OAtBhB;AAuBA;AACA;AACA;AACA;;;AACA;AACA,oFACA,wFADA,GAEA,+CAFA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACA2N;;;;AAEAA;AAA+D;AAAA,OAA/D;;AACAA,4CAAsCV,+DAAuB;AAAGlS;AAAH,OAAvB,CAAtC;AACA4S,4CAAsCV,+DAAuB;AAAGpJ,mBAAW+J,mEAAX,GAA6BA,mEAA7B;AAAH,OAAvB,CAAtC;;AACA;AAAe,2DAAmDX,gEAAwBU,iBAAxB,EAAwB;AAC1F5S,gBAAckS,mDAD4E;AAE1F5R;AACAwI,sBAA0B+J,mEAA1B,CADA;AAEA9J,mDAAqD8J,mEAArD,CAFA;AAGA7J;AAHA;AAF0F,UAAxB,EAO7D,IAP6D,EAO7D,IAP6D,CAAnD;AAOO,OAPtB;;AAQA;AAAe,2DAAmDkJ,iEAAyBU,iBAAzB,EAAyB;AAAqB5J;AAA4B;AAAqC,WAAtF;AAAsFF;AAAyB,oBAAQ+J,mEAAR;AAA2B,WAA1I;AAA0I9J;AAAyB,iDAAmC8J,mEAAnC;AAAkD;AAArN,SAAzB,CAAnD;AAA2S,OAA1T;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtJEC;;AACEA;;AACEA;;AACEA;;AACAA;;AACAA;;AACAA;;AACFA;;AACFA;;AAEFA;;;;;;AAIEA;;AACEA;;AACFA;;;;;;AADiDA;;AAAAA,4JAAoB,KAApB,EAAoBnJ,0BAApB;;;;;;AAK/CmJ;;AAA+CA;;AAAwCA;;;;;;AAQvFA;;AAA4EA;;AAC5EA;;;;;;AAOEA;;AAAwEA;;AAAmBA;;;;;;AAAzCA;;AAAsBA;;AAAAA;;;;;;AAE1EA;;AAA4EA;;AAC5EA;;;;;;AAUAA;;AAAkFA;;AAClFA;;;;;;AAOAA;;AAAqFA;;AACrFA;;;;;;AAQFA;;;;UC1DSC;AAYX,mCACSC,SADT,EAEkCtN,IAFlC,EAGUuN,EAHV,EAIUC,WAJV,EAKUC,aALV,EAKsC;AAAA;;AAJ7B;AACyB;AACxB;AACA;AACA;AAhBV,mCAAyB,EAAzB;AAGA,uBAAQ,UAAR;AAGQ,+BAAgB,MAAhB;AAER,8BAAsB,EAAtB;AASI;;;;iBAEJ,oBAAQ;AACN,iBAAKC,MAAL,GAAc,KAAKD,aAAL,CAAmBE,WAAnB,EAAd;AACA,iBAAKC,eAAL;AAEA,iBAAKC,SAAL;AACD;;;eAED,eAAS;AACP,mBAAO,KAAKC,SAAL,CAAeC,GAAf,CAAmB,OAAnB,CAAP;AACD;;;iBAED,uBAAc3S,KAAd,EAAmB;AAAA;;AACjB,iBAAK4S,iBAAL,GAAyB5S,KAAzB;AACA,gBAAM6S,IAAI,GAAI7S,KAAK,CAAC8S,MAAN,CAAkCC,KAAlC,CAAwC,CAAxC,CAAd;AACA,gBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,kBAAM,CAACE,MAAP,GAAgB,YAAK;AACnB,qBAAI,CAACC,YAAL,GAAoBH,MAAM,CAACI,MAA3B;;AACA,qBAAI,CAACV,SAAL,CAAeW,UAAf,CAA0B;AAAEC,qBAAK,EAAE,OAAI,CAACH;AAAd,eAA1B;;AACA,qBAAI,CAACG,KAAL,CAAWC,sBAAX,GAHmB,CAInB;;;AACA,qBAAI,CAACC,IAAL,IAAa,MAAb,GAAsB,OAAI,CAACC,SAAL,EAAtB,GAAyC,IAAzC,CALmB,CAMnB;AACD,aAPD;;AAQAT,kBAAM,CAACU,aAAP,CAAqBb,IAArB,EAZiB,CAcjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;iBAED,qBAAS;AACP,gBAAI,KAAKjO,IAAT,EAAe;AACb,mBAAK4O,IAAL,GAAY,MAAZ;AACA,mBAAKG,KAAL,GAAa,WAAb;AACA,mBAAKR,YAAL,GAAoB,KAAKvO,IAAL,CAAU0O,KAA9B;AACA,mBAAKM,QAAL,GAAgB,KAAKzB,EAAL,CAAQ0B,KAAR,CAAc;AAC5BC,kBAAE,EAAE,CAAC,KAAKlP,IAAL,CAAUkP,EAAX,EAAeC,+DAAf,CADwB;AAE5BC,oBAAI,EAAE,CAAC,KAAKpP,IAAL,CAAUoP,IAAX,EAAiBD,+DAAjB,CAFsB;AAG5B;AACAE,2BAAW,EAAE,CAAC,KAAKrP,IAAL,CAAUqP,WAAX,EAAwBF,+DAAxB,CAJe;AAK5BG,0BAAU,EAAE,CACV,KAAKtP,IAAL,CAAUsP,UADA,EAEV,CACEH,+DADF,EAEEA,+DAAmB,KAAKI,aAAxB,CAFF,EAGEJ,2DAAe,CAAf,CAHF,CAFU,CALgB;AAa5BK,wBAAQ,EAAE,CAAC,KAAKxP,IAAL,CAAUwP,QAAX,EAAqBL,+DAArB;AAbkB,eAAd,CAAhB;AAeA,mBAAKrB,SAAL,GAAiB,KAAKP,EAAL,CAAQ0B,KAAR,CAAc;AAC7BP,qBAAK,EAAE,CAAC,KAAK1O,IAAL,CAAU0O,KAAX,EAAkB,CAACS,+DAAD,CAAlB;AADsB,eAAd,CAAjB;AAGA;AACD;;AACD,iBAAKP,IAAL,GAAY,QAAZ;AACA,iBAAKG,KAAL,GAAa,aAAb;AACA,iBAAKC,QAAL,GAAgB,KAAKzB,EAAL,CAAQ0B,KAAR,CAAc;AAC5BG,kBAAI,EAAE,CAAC,EAAD,EAAK,CAACD,+DAAD,CAAL,CADsB;AAE5B;AACAE,yBAAW,EAAE,CAAC,EAAD,CAHe;AAI5BC,wBAAU,EAAE,CACV,IADU,EAEV,CACEH,+DADF,EAEEA,+DAAmB,KAAKI,aAAxB,CAFF,EAGEJ,2DAAe,CAAf,CAHF,CAFU,CAJgB;AAY5BK,sBAAQ,EAAE,CAAC,IAAD,EAAO,CAACL,+DAAD,CAAP;AAZkB,aAAd,CAAhB;AAcA,iBAAKrB,SAAL,GAAiB,KAAKP,EAAL,CAAQ0B,KAAR,CAAc;AAC7BP,mBAAK,EAAE,CAAC,IAAD,EAAO,CAACS,+DAAD,CAAP;AADsB,aAAd,CAAjB;AAGD;;;eAED,eAAY;AACV,mBAAO,KAAKH,QAAL,CAAcjB,GAAd,CAAkB,MAAlB,CAAP;AACD;;;eAED,eAAe;AACb,mBAAO,KAAKiB,QAAL,CAAcjB,GAAd,CAAkB,aAAlB,CAAP;AACD;;;eAED,eAAc;AACZ,mBAAO,KAAKiB,QAAL,CAAcjB,GAAd,CAAkB,YAAlB,CAAP;AACD;;;eAED,eAAY;AACV,mBAAO,KAAKiB,QAAL,CAAcjB,GAAd,CAAkB,UAAlB,CAAP;AACD;;;iBAED,2BAAe;AAAA;;AACb,iBAAKP,WAAL,CAAiBiC,YAAjB,CAA8B,KAAK/B,MAAL,CAAYwB,EAA1C;AACA,iBAAK1B,WAAL,CAAiBkC,2BAAjB,GAA+CzR,SAA/C,CAAyD,UAAC0R,YAAD,EAAiB;AACxE,qBAAI,CAACA,YAAL,GAAoBA,YAAY,CAACC,OAAjC;AACD,aAFD;AAGD;;;iBAED,kBAAM;AACJ,iBAAKC,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKb,QAAL,CAAcc,OAAlB,EAA2B;AACzB,mBAAKrC,aAAL,CAAmBsC,qBAAnB,CAAyC,KAAKf,QAA9C;AACA,mBAAKa,SAAL,GAAiB,KAAjB;AACA;AACD;;AACD,gBAAI,KAAK7P,IAAT,EAAe;AACb,mBAAKgQ,QAAL;AACA;AACD;;AAED,iBAAKC,QAAL;AACD;;;iBAED,oBAAQ;AAAA;;AACN,iBAAKzC,WAAL,CAAiB0C,UAAjB,CAA2BC,gCAAK,KAAKnB,QAAL,CAActR,KAAnB,GAA6B,KAAKoQ,SAAL,CAAepQ,KAA5C,CAA3B,EAA+EO,SAA/E,CAAyF,UAACmS,UAAD,EAAe;AACtG,qBAAI,CAACP,SAAL,GAAiB,KAAjB;AACAO,wBAAU,GACN,OAAI,CAAC9C,SAAL,CAAejO,KAAf,EADM,GAEN,OAAI,CAACoO,aAAL,CAAmBsC,qBAAnB,CAAyC,OAAI,CAACf,QAA9C,CAFJ;AAGD,aALD;AAMD;;;iBAED,oBAAQ;AAAA;;AACN,iBAAKxB,WAAL,CAAiB6C,QAAjB,CAA0B,KAAKrB,QAAL,CAActR,KAAxC,EAA+CO,SAA/C,CAAyD,UAACmS,UAAD,EAAe;AACtE,qBAAI,CAACP,SAAL,GAAiB,KAAjB;AACAO,wBAAU,GACN,OAAI,CAAC9C,SAAL,CAAejO,KAAf,EADM,GAEN,OAAI,CAACoO,aAAL,CAAmBsC,qBAAnB,CAAyC,OAAI,CAACf,QAA9C,CAFJ;AAGD,aALD;AAMD;;;iBAED,qBAAS;AAAA;;AACP,iBAAKa,SAAL,GAAiB,IAAjB;AACA,iBAAKrC,WAAL,CACG8C,aADH,CACiB,KAAKxC,SAAL,CAAepQ,KADhC,EACuC,KAAKsR,QAAL,CAActR,KADrD,EAEGO,SAFH,CAEa,UAACmS,UAAD,EAAe;AACxB,qBAAI,CAACP,SAAL,GAAiB,KAAjB;AACD,aAJH;AAKD;;;;;;;yBArKUxC,mBAAgBD,qMAcjBmD,qEAdiB,GAcFnD;AAAA;;;cAddC;AAAgB9S;AAAA6B;AAAAC;AAAAC;AAAAC;AAAA;;;ADX7B6Q;;AAAqBA;;;;AAAqBA;;AAC1CA;;AAEEA;;AAYAA;;AAEEA;;AAIAA;;AACEA;;AAAgDA;AAAA,qBAAUxR,yBAAV;AAA+B,aAA/B;;AAAhDwR;;AACAA;;AACAA;;AAAQA;AAAAA;;AAAA;;AAAA,qBAAS1T,WAAT;AAA2B,aAA3B;;AAAmE0T;;AAAiBA;;AAC9FA;;AAGAA;;AACEA;;AAAWA;;AAASA;;AACpBA;;AACAA;;AAEFA;;AAEAA;;AACEA;;AAAWA;;AAAQA;;AACnBA;;AACEA;;AAA2BA;;AAAwBA;;AACnDA;;AACFA;;AACAA;;AAEFA;;AAEAA;;AACEA;;AAAWA;;AAAMA;;AACjBA;;AACAA;;AACEA;;AACFA;;AACAA;;AAAgBA;;AAAGA;;AACnBA;;AAEFA;;AAEAA;;AACEA;;AAAWA;;AAAgBA;;AAC3BA;;AAEAA;;AAEFA;;AACFA;;AAEFA;;AACAA;;AACEA;;AAAoCA;;AAAMA;;AAC1CA;;AAAmCA;AAAA,qBAASxR,YAAT;AAAiB,aAAjB;;AACjCwR;;AACAA;;;;AACFA;;AACFA;;;;AAxEqBA;;AAAAA;;AAGiBA;;AAAAA;;AAY9BA;;AAAAA;;AAEoCA;;AAAAA;;AAMhCA;;AAAAA;;AAQMA;;AAAAA;;AAOEA;;AAAAA;;AACqBA;;AAAAA;;AAEvBA;;AAAAA;;AAWAA;;AAAAA;;AAQAA;;AAAAA;;AASVA;;AAAAA;;AACJA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhDU3T;;AACEA;;AACEA;;AACEA;;AACEA;;AACAA;;AACEA;;AAAoCA;;;;AAAuEA;;AAC3GA;;AAAsBA;;;;AAAoDA;;AAC5EA;;AACFA;;AACFA;;AACAA;;AACEA;;AAAyCA;AAAA;AAAA;AAAA,aAA2B,eAA3B,EAA2B;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAA3B;;AAAzCA;;AACFA;;AACAA;;AACEA;;;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAA8BA;AAAA;AAAA;AAAA,aAA0B,eAA1B,EAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAA1B;;AAA9BA;;AACFA;;AACAA;;AACEA;;AAAQA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACNA;;AACFA;;AACFA;;AACFA;;AACFA;;;;;;AAxBuDA;;AAAAA;;AAETA;;AAAAA;;AACdA;;AAAAA;;AAKeA;;AAAAA;;AAGzCA;;AAAAA;;AAK8BA;;AAAAA;;;;;;AAmBtCA;;;;UCrDC+W;AAQX;AAAA;;AAJ0B,gCAAiB,IAAI/W,uDAAJ,EAAjB;AACJ,4BAAa,IAAIA,uDAAJ,EAAb;AACE,8BAAe,IAAIA,uDAAJ,EAAf;AAER;;;;iBAEhB,oBAAQ,CAAW;;;iBAEnB,0BAAiBgX,IAAjB,EAAqB;AACnB,iBAAKC,cAAL,CAAoBC,IAApB,CAAyBF,IAAzB;AACD;;;iBAED,wBAAe/S,KAAf,EAAoB;AAClB,iBAAKkT,UAAL,CAAgBD,IAAhB,CAAqBjT,KAArB;AACD;;;iBAED,0BAAc;AACZ,iBAAKmT,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB;AACD;;;;;;;yBAtBUH;AAAe;;;cAAfA;AAAejW;AAAAsB;AAAAiV;AAAAjB;AAAAkB;AAAA;AAAA5R;AAAAuR;AAAAE;AAAAC;AAAA;AAAAzU;AAAAC;AAAAC;AAAAC;AAAA;ADR5B9C;;AACEA;;AACEA;;AACEA;;AACEA;;AAEEA;;AAEEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACAA;;AACEA;;AACFA;;AACAA;;AACEA;;AACFA;;AACFA;;AACFA;;AACAA;;AA6BFA;;AAEFA;;AACAA;;AACAA;;AACEA;;AAAGA;;AAASA;;AACZA;;AAAGA;;;;AAA8CA;;AACnDA;;AAEAA;;AAAuCA;AAAA,qBAASmC,oBAAT;AAAyB,aAAzB;;AACrCnC;;AACAA;;AACFA;;AAEAA;;AACEA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AAEFA;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;;;AA1D+CA;;AAAAA;;AAmChCA;;AAAAA;;AAGGA;;AAAAA;;AACFA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEvCF2T;;AACEA;;AAAIA;;AAAmBA;;AACzBA;;;;;;AAQEA;;AACEA;;AACFA;;;;;;AACAA;;AACEA;;AACFA;;;;;;AAWAA;;AAEEA;;AACFA;;;;;;AAUEA;;AAA6DA;;AAAaA;;;;;;AAA/BA;;AAAkBA;;AAAAA;;;;;;AAG/DA;;AAEEA;;AACFA;;;;;;AAKAA;;;;UC7DH4D;AAOX,0CACUzD,EADV,EAEUC,WAFV,EAGUC,aAHV,EAISH,SAJT,EAKkCtN,IALlC,EAK2C;AAAA;;AAJjC;AACA;AACA;AACD;AACyB;AAXlC,sBAAkB,IAAImP,qDAAJ,CAAc,EAAd,CAAlB;AACA,uBAAQ,cAAR;AACA,+BAAuB,EAAvB;AAEA,2BAAY,KAAZ;AAQI;;;;iBAEJ,oBAAQ;AACN,iBAAK8B,gBAAL;AACA,iBAAKpD,SAAL;AACD;;;iBAED,qBAAS;AACP,gBAAI,KAAK7N,IAAT,EAAe;AACb,mBAAK4O,IAAL,GAAY,MAAZ;AACA,mBAAKG,KAAL,GAAa,eAAb;AACA,mBAAKmC,IAAL,GAAY,KAAK3D,EAAL,CAAQ0B,KAAR,CAAc;AACxBC,kBAAE,EAAE,CAAC,KAAKlP,IAAL,CAAUkP,EAAX,EAAeC,+DAAf,CADoB;AAExBC,oBAAI,EAAE,CAAC,KAAKpP,IAAL,CAAUoP,IAAX,EAAiBD,+DAAjB,CAFkB;AAGxBE,2BAAW,EAAE,CAAC,KAAKrP,IAAL,CAAUqP,WAAX,EAAwBF,+DAAxB,CAHW;AAIxBgC,6BAAa,EAAE,CAAC,KAAKnR,IAAL,CAAUmR,aAAX,EAA0BhC,+DAA1B;AAJS,eAAd,CAAZ;AAMA;AACD;;AACD,iBAAKP,IAAL,GAAY,QAAZ;AACA,iBAAKG,KAAL,GAAa,iBAAb;AACA,iBAAKmC,IAAL,GAAY,KAAK3D,EAAL,CAAQ0B,KAAR,CAAc;AACxBG,kBAAI,EAAE,CAAC,EAAD,EAAKD,+DAAL,CADkB;AAExBE,yBAAW,EAAE,CAAC,EAAD,EAAKF,+DAAL,CAFW;AAGxBgC,2BAAa,EAAE,CAAC,EAAD,EAAKhC,+DAAL;AAHS,aAAd,CAAZ;AAKD;;;iBAED,4BAAgB;AAAA;;AACd,iBAAK3B,WAAL,CAAiByD,gBAAjB;AACA,iBAAKzD,WAAL,CACG4D,+BADH,GAEGnT,SAFH,CAEa,UAACoT,aAAD,EAAuB;AAChC,kBAAIA,aAAa,CAACzB,OAAlB,EAA2B;AACzB,uBAAI,CAACyB,aAAL,GAAqBA,aAAa,CAACzB,OAAd,CAAsB0B,GAAtB,CAA0B,UAAClX,OAAD,EAAUmX,KAAV,EAAmB;AAChE,yDAAYnX,OAAZ,GAAmB;AAAEwH,4BAAQ,EAAE2P,KAAK,GAAG;AAApB,mBAAnB;AACD,iBAFoB,CAArB;AAGD,eAJD,MAIO;AACL,uBAAI,CAACF,aAAL,GAAqB,EAArB;AACD;AACF,aAVH;AAWD;;;iBAED,kBAAM;AACJ,gBAAI,KAAKH,IAAL,CAAUpB,OAAd,EAAuB;AACrB,mBAAKrC,aAAL,CAAmBsC,qBAAnB,CAAyC,KAAKmB,IAA9C;AACA;AACD;;AAED,gBAAI,KAAKlR,IAAT,EAAe;AACb,mBAAKwR,cAAL;AACA;AACD;;AAED,iBAAKC,cAAL;AACD;;;iBAED,0BAAc;AAAA;;AACZ,iBAAK5B,SAAL,GAAiB,IAAjB;AACA,iBAAKrC,WAAL,CAAiBiE,cAAjB,CAAgC,KAAKP,IAAL,CAAUxT,KAA1C,EAAiDO,SAAjD,CAA2D,UAACmS,UAAD,EAAe;AACxEA,wBAAU,GACN,OAAI,CAAC9C,SAAL,CAAejO,KAAf,EADM,GAEN,OAAI,CAACoO,aAAL,CAAmBsC,qBAAnB,CAAyC,OAAI,CAACmB,IAA9C,CAFJ;AAGD,aAJD;AAKD;;;iBAED,0BAAc;AAAA;;AACZ,iBAAKrB,SAAL,GAAiB,IAAjB;AACA,iBAAKrC,WAAL,CAAiBkE,YAAjB,CAA8B,KAAKR,IAAL,CAAUxT,KAAxC,EAA+CO,SAA/C,CAAyD,UAACmS,UAAD,EAAe;AACtEA,wBAAU,GACN,OAAI,CAAC9C,SAAL,CAAejO,KAAf,EADM,GAEN,OAAI,CAACoO,aAAL,CAAmBsC,qBAAnB,CAAyC,OAAI,CAACmB,IAA9C,CAFJ;AAGD,aAJD;AAKD;;;;;;;yBAtFUF,0BAAuB5D,mmBAYxBmD,qEAZwB;AAYT;;;cAZdS;AAAuBzW;AAAA6B;AAAAC;AAAAC;AAAAC;AAAA;ADXpC6Q;;AACEA;;AAEIA;;AACEA;;AAAIA;;;;AAAqBA;;AAC3BA;;AACAA;;AACEA;;AACEA;;AACFA;;AACFA;;AAEJA;;AACAA;;AACEA;;AACEA;;AAIEA;;AACEA;;AACEA;;AAOAA;;AACEA;;AACEA;;AAA8BA;;AAAaA;;AAC3CA;;AACAA;;AAGAA;;AAGFA;;AACFA;;AAGAA;;AACEA;;AACEA;;AAA8BA;;AAAWA;;AACzCA;;AAEIA;;AAAAA;;AACJA;;AAIFA;;AACFA;;AAGAA;;AACEA;;AACEA;;AAA8BA;;AAAaA;;AAC3CA;;AACEA;;AAAiBA;;AAAQA;;AACzBA;;AACFA;;AAEAA;;AAIFA;;AACFA;;AACAA;;AACEA;;AAAwEA;AAAA,qBAASxR,YAAT;AAAiB,aAAjB;;AACtEwR;;AACAA;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;;;AA7EYA;;AAAAA;;AAgBIA;;AAAAA;;AAYMA;;AAAAA;;AAGAA;;AAAAA;;AAaAA;;AAAAA;;AAaqBA;;AAAAA;;AAGrBA;;AAAAA;;AAOAA;;AAAAA;;AACFA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErDZuE;;AACEA;;AACFA;;;;;;AAOMA;;AAAuDA;;AAAIA;;;;;;AAC3DA;;AAA4DA;;AAAqBA;;;;;;AAArBA;;AAAAA;;;;;;AAK5DA;;AAAuDA;;AAAKA;;;;;;AAC5DA;;AAAwCA;;AAAyBA;;;;;;AAAzBA;;AAAAA;;;;;;AAKxCA;;AAAuDA;;AAAaA;;;;;;AACpEA;;AAAwCA;;AAA+CA;;;;;;AAA/CA;;AAAAA;;;;;;AAKxCA;;;;;;;;AACAA;;AACEA;;AACEA;;AAAUA;;AAASA;;AACrBA;;AACAA;;AACEA;;AAAQA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACNA;;AAAUA;;AAASA;;AACnBA;;AAAMA;;AAAIA;;AACZA;;AAKFA;;AAGFA;;;;;;AAf0BA;;AAAAA;;;;;;AAkB5BA;;;;;;AACAA;;;;;;;;AACEA;;;;;;AAEFA;;AACEA;;AAA0EA;;AAAkBA;;AAC9FA;;;;;;AADmCA;;AAAAA;;;;UCzClCC;AAkBX,wCACUpE,WADV,EAEUqE,WAFV,EAGUC,MAHV,EAIUC,aAJV,EAIsC;AAAA;;AAH5B;AACA;AACA;AACA;AArBV,6BAAqB,EAArB;AACA,6BAAc,KAAd;AACA,4BAAoB,EAApB;AACA,8BAAwB,IAAxB;AACA,uBAAQ,UAAR;AACA,kCAA0B,CACxB,UADwB,EAExB,MAFwB,EAGxB,eAHwB,EAIxB,MAJwB,CAA1B;AAUQ,wBAAiB,EAAjB;AAOF;;;;iBAGN,oBAAQ;AACN,iBAAKC,YAAL,GAAoB,IAApB,CADM,CAEN;;AACA,iBAAKvC,YAAL;AACD;;;iBAED,oCAAkC;AAAA;;AAAA,gBAATzP,IAAS,uEAAJ,IAAI;AAChC,gBAAMsN,SAAS,GAAG,KAAKwE,MAAL,CAAYG,IAAZ,CAAiBC,+FAAjB,EAA0C;AAC1DlS,kBAAI,EAAEA;AADoD,aAA1C,CAAlB;AAIAsN,qBAAS,CAAC6E,WAAV,GACClU,SADD,CACW,gBAAM,EAAG;AAClB,qBAAI,CAACwR,YAAL;AACD,aAHD;AAID;;;iBAED,wBAAY;AAAA;;AACV,iBAAKjC,WAAL,CAAiBiC,YAAjB,CAA8B,KAAK/B,MAAnC,EAA2C,KAAK0E,QAAhD,EAA0D,KAAKC,SAA/D;AACA,iBAAK7E,WAAL,CACGkC,2BADH,GAEGzR,SAFH,CAEa,UAACuR,QAAD,EAAkB;AAC3B,kBAAIA,QAAQ,CAACI,OAAb,EAAsB;AACpB,uBAAI,CAAC0C,MAAL,GAAc9C,QAAQ,CAAC+C,KAAvB;AACA,uBAAI,CAACC,UAAL,GAAkBhD,QAAQ,CAACI,OAAT,CAAiB0B,GAAjB,CAAqB,UAAClX,OAAD,EAAUmX,KAAV,EAAmB;AACxD,yDAAYnX,OAAZ,GAAmB;AAAEwH,4BAAQ,EAAE2P,KAAK,GAAG;AAApB,mBAAnB;AACD,iBAFiB,CAAlB;AAGA,uBAAI,CAACS,YAAL,GAAoB,KAApB;AACD,eAND,MAMO;AACL,uBAAI,CAACM,MAAL,GAAc,CAAd;AACA,uBAAI,CAACE,UAAL,GAAkB,EAAlB;AACA,uBAAI,CAACR,YAAL,GAAoB,KAApB;AACD,eAX0B,CAa3B;AACA;;AACD,aAjBH;AAkBD;;;iBAED,0BAAc;AAAA;;AACZ,iBAAKH,WAAL,CAAiBY,UAAjB;AACA,iBAAKZ,WAAL,CAAiBa,gBAAjB,GAAoCzU,SAApC,CAA8C,UAAC0U,OAAD,EAAY;AACxDC,qBAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,kBAAMG,WAAW,GAAGH,OAAO,CAAC/C,OAAR,CAAgB0B,GAAhB,CAAoB,UAAClX,OAAD,EAAY;AAClD,uBAAO;AAAEgV,sBAAI,EAAEhV,OAAO,CAAC2Y,cAAhB;AAAgC7D,oBAAE,EAAE9U,OAAO,CAAC4Y,IAAR,CAAa9D;AAAjD,iBAAP;AACD,eAFmB,CAApB;AAGA,qBAAI,CAAC4D,WAAL,IAAoB;AAAE5D,kBAAE,EAAE,EAAN;AAAUE,oBAAI,EAAE;AAAhB,eAApB,4BAAwD0D,WAAxD;AACD,aAND;AAOD;;;iBAED,oBAAWpV,KAAX,EAAyD;AACvD,iBAAK0U,QAAL,GAAgB1U,KAAK,CAAC0U,QAAtB;AACA,iBAAKC,SAAL,GAAiB3U,KAAK,CAAC2U,SAAvB;AACA,iBAAK5C,YAAL;AACA,iBAAKuC,YAAL,GAAoB,IAApB;AACD;;;iBAED,sBAAatU,KAAb,EAAkB;AAChBkV,mBAAO,CAACC,GAAR,CAAYnV,KAAZ;AACA,iBAAKgQ,MAAL,GAAchQ,KAAd;AACA,iBAAK+R,YAAL;AACA,iBAAKuC,YAAL,GAAoB,IAApB;AACD;;;iBAED,0BAAiBxC,QAAjB,EAAyB;AAAA;;AACvB,iBAAKuC,aAAL,CAAmBkB,iBAAnB,GACCd,WADD,GAEClU,SAFD,CAEW,UAACP,KAAD,EAAU;AACnB,kBAAIA,KAAJ,EAAW;AACT,uBAAI,CAAC8P,WAAL,CAAiB0F,cAAjB,CAAgC1D,QAAhC,EACCvR,SADD,CACW,UAACP,KAAD,EAAU;AACnBA,uBAAK,GAAG,OAAI,CAAC+R,YAAL,EAAH,GAAyB,IAA9B;AACD,iBAHD;AAID;AACF,aATD;AAUD;;;;;;;yBArGUmC,wBAAqBD;AAAA;;;cAArBC;AAAqBrX;AAAAqE;AAAA;sEAwBrBuU,6DAAO;;;;;;;;;;;;;;ADtDpBxB;;AACEA;;AACEA;;AACEA;;AACEA;;AAAIA;;;;AAAqBA;;AAGzBA;;AAAQA;AAAA,qBAAS/V,8BAAT;AAAmC,aAAnC;;AAEN+V;;AACAA;;AACFA;;AACFA;;AACFA;;AACAA;;AAIEA;;AACEA;;AAIAA;;AAEEA;;AAEEA;;AACEA;;AACAA;;AACFA;;AAGAA;;AACEA;;AACAA;;AACFA;;AAGAA;;AACEA;;AACAA;;AACFA;;AAGAA;;AACEA;;AACAA;;AAiBFA;;AAEAA;;AACAA;;AAGAA;;AAGFA;;AACAA;;AAA+BA;AAAA,qBAAY/V,sBAAZ;AAA8B,aAA9B;;AAA+B+V;;AAChEA;;AAEFA;;AAEFA;;AACFA;;AACFA;;;;AA7EYA;;AAAAA;;AAegCA;;AAAAA;;AAMjBA;;AAAAA;;AAyCKA;;AAAAA;;AACiBA;;AAAAA;;AAOxBA;;AAAAA;;;;;;;qBCvDX,CACV,+DAAQ,cAAR,EAAwB,CACtB,6DAAM,WAAN,EAAmB,6DAAM;AAAEyB,kBAAM,EAAE,KAAV;AAAiBrN,qBAAS,EAAE;AAA5B,WAAN,CAAnB,CADsB,EAEtB,6DAAM,UAAN,EAAkB,6DAAM;AAAEqN,kBAAM,EAAE;AAAV,WAAN,CAAlB,CAFsB,EAGtB,kEACE,wBADF,EAEE,+DAAQ,sCAAR,CAFF,CAHsB,CAAxB,CADU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRDC;AAMX,8CACU9F,EADV,EAEUC,WAFV,EAGUC,aAHV,EAISH,SAJT,EAKkCtN,IALlC,EAK2C;AAAA;;AAJjC;AACA;AACA;AACD;AACyB;AAVlC,sBAAkB,IAAIsT,qDAAJ,CAAc,EAAd,CAAlB;AACA,uBAAQ,cAAR;AAUI;;;;iBAEJ,oBAAQ;AACN,iBAAKzF,SAAL;AACD;;;iBAED,qBAAS;AACP,gBAAI,KAAK7N,IAAT,EAAe;AACb,mBAAK4O,IAAL,GAAY,MAAZ;AACA,mBAAKG,KAAL,GAAa,oBAAb;AACA,mBAAKmC,IAAL,GAAY,KAAK3D,EAAL,CAAQ0B,KAAR,CAAc;AACxBG,oBAAI,EAAE,CAAC,KAAKpP,IAAL,CAAUoP,IAAX,EAAiBkE,+DAAjB;AADkB,eAAd,CAAZ;AAGA;AACD;;AACD,iBAAK1E,IAAL,GAAY,QAAZ;AACA,iBAAKG,KAAL,GAAa,sBAAb;AACA,iBAAKmC,IAAL,GAAY,KAAK3D,EAAL,CAAQ0B,KAAR,CAAc;AACxBG,kBAAI,EAAE,CAAC,EAAD,EAAKkE,+DAAL;AADkB,aAAd,CAAZ;AAGD;;;iBAED,kBAAM;AACJ,gBAAI,KAAKpC,IAAL,CAAUpB,OAAd,EAAuB;AACrB,mBAAKrC,aAAL,CAAmBsC,qBAAnB,CAAyC,KAAKmB,IAA9C;AACA;AACD;;AAED,gBAAI,KAAKlR,IAAT,EAAe;AACb,mBAAKwR,cAAL;AACA;AACD;;AAED,iBAAKC,cAAL;AACD;;;iBAED,0BAAc;AAAA;;AACZ,iBAAK5B,SAAL,GAAiB,IAAjB;AACA,iBAAKrC,WAAL,CAAiB+F,kBAAjB,CAAoC,KAAKrC,IAAL,CAAUxT,KAA9C,EAAqDO,SAArD,CAA+D,UAACmS,UAAD,EAAe;AAC5EA,wBAAU,GACN,OAAI,CAAC9C,SAAL,CAAejO,KAAf,EADM,GAEN,OAAI,CAACoO,aAAL,CAAmBsC,qBAAnB,CAAyC,OAAI,CAACmB,IAA9C,CAFJ;AAGD,aAJD;AAKD;;;iBACD,0BAAc;AAAA;;AACZ,iBAAKrB,SAAL,GAAiB,IAAjB;AACA,iBAAKrC,WAAL,CAAiBgG,gBAAjB,CAAkC,KAAKtC,IAAL,CAAUxT,KAA5C,EAAmDO,SAAnD,CAA6D,UAACmS,UAAD,EAAe;AAC1EA,wBAAU,GACN,OAAI,CAAC9C,SAAL,CAAejO,KAAf,EADM,GAEN,OAAI,CAACoO,aAAL,CAAmBsC,qBAAnB,CAAyC,OAAI,CAACmB,IAA9C,CAFJ;AAGD,aAJD;AAKD;;;;;;;yBA/DUmC,8BAA2BI,mmBAW5BlD,qEAX4B;AAWb;;;cAXd8C;AAA2B9Y;AAAA6B;AAAAC;AAAAC;AAAAC;AAAA;ACXxCkX;;AACEA;;AAEEA;;AACEA;;AAAIA;;;;AAAqBA;;AAC3BA;;AACAA;;AACEA;;AACEA;;AACFA;;AACFA;;AAEFA;;AACAA;;AAEEA;;AACEA;;AAEEA;;AACEA;;AAAWA;;AAAaA;;AACxBA;;AACFA;;AAaAA;;AACEA;;AAA0CA;AAAA,qBAAS7X,YAAT;AAAiB,aAAjB;;AAA8B6X;;AAAIA;;AAE9EA;;AACFA;;AACFA;;AACFA;;AACFA;;;;AArCUA;;AAAAA;;AAYEA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCJA;;AACEA;;AACFA;;;;;;AAOMA;;AAAuDA;;AAAIA;;;;;;AAC3DA;;AAA4DA;;AAAqBA;;;;;;AAArBA;;AAAAA;;;;;;AAK5DA;;AAAuDA;;AAAKA;;;;;;AAC5DA;;AAAwCA;;AAAyBA;;;;;;AAAzBA;;AAAAA;;;;;;AA8B1CA;;;;;;AACAA;;;;;;;;AACEA;;;;;;AAEFA;;AACEA;;AAA0EA;;AAAkBA;;AAC9FA;;;;;;AADmCA;;AAAAA;;;;UCvClCC;AAgBX,4CACUlG,WADV,EAEUsE,MAFV,EAE2B;AAAA;;AADjB;AACA;AAjBV,6BAAc,KAAd;AACA,4BAAoB,EAApB;AACA,8BAAwB,IAAxB;AACA,uBAAQ,UAAR;AACA,kCAA0B,CACxB,UADwB,EAExB,MAFwB,CAGxB;AAHwB,WAA1B;AASQ,wBAAiB,EAAjB;AAKF;;;;iBAGN,oBAAQ;AACN,iBAAKE,YAAL,GAAoB,IAApB;AACA,iBAAKvC,YAAL;AACD;;;iBAED,wCAAsC;AAAA;;AAAA,gBAATzP,IAAS,uEAAJ,IAAI;AACpC,gBAAMsN,SAAS,GAAG,KAAKwE,MAAL,CAAYG,IAAZ,CAAiB0B,6GAAjB,EAA8C;AAC9D3T,kBAAI,EAAEA;AADwD,aAA9C,CAAlB;AAIAsN,qBAAS,CAAC6E,WAAV,GAAwBlU,SAAxB,CAAkC,gBAAM,EAAG;AACzC;AACA,qBAAI,CAACwR,YAAL;AACD,aAHD;AAID;;;iBAED,wBAAY;AAAA;;AACV,iBAAKjC,WAAL,CAAiByD,gBAAjB,CAAkC,KAAKmB,QAAvC,EAAiD,KAAKC,SAAtD;AACA,iBAAK7E,WAAL,CACG4D,+BADH,GAEGnT,SAFH,CAEa,UAAC2V,SAAD,EAAmB;AAC5BhB,qBAAO,CAACC,GAAR,CAAYe,SAAZ;;AACA,kBAAIA,SAAS,CAAChE,OAAd,EAAuB;AACrB,uBAAI,CAAC0C,MAAL,GAAcsB,SAAS,CAACrB,KAAxB;AACA,uBAAI,CAACC,UAAL,GAAkBoB,SAAS,CAAChE,OAAV,CAAkB0B,GAAlB,CAAsB,UAAClX,OAAD,EAAUmX,KAAV,EAAmB;AACzD,yDAAYnX,OAAZ,GAAmB;AAAEwH,4BAAQ,EAAE2P,KAAK,GAAG;AAApB,mBAAnB;AACD,iBAFiB,CAAlB;AAGA,uBAAI,CAACS,YAAL,GAAoB,KAApB;AACD,eAND,MAMO;AACL,uBAAI,CAACM,MAAL,GAAc,CAAd;AACA,uBAAI,CAACE,UAAL,GAAkB,EAAlB;AACA,uBAAI,CAACR,YAAL,GAAoB,KAApB;AACD,eAZ2B,CAa5B;AACA;;AACD,aAjBH;AAkBD;;;iBAED,oBAAWtU,KAAX,EAAyD;AACvD,iBAAK0U,QAAL,GAAgB1U,KAAK,CAAC0U,QAAtB;AACA,iBAAKC,SAAL,GAAiB3U,KAAK,CAAC2U,SAAvB;AACA,iBAAK5C,YAAL;AACA,iBAAKuC,YAAL,GAAoB,IAApB;AACD;;;;;;;yBAjEU0B,4BAAyBD;AAAA;;;cAAzBC;AAAyBnZ;AAAAqE;AAAA;sEAoBzBiV,6DAAO;;;;;;;;;;;;;;ADjDpBJ;;AACEA;;AACEA;;AACEA;;AACEA;;AAAIA;;;;AAAqBA;;AAEzBA;;AAAQA;AAAA,qBAAS7X,kCAAT;AAAuC,aAAvC;;AACN6X;;AACAA;;AACFA;;AACFA;;AACFA;;AACAA;;AAIEA;;AACEA;;AAIAA;;AAEEA;;AAEEA;;AACEA;;AACAA;;AACFA;;AAGAA;;AACEA;;AACAA;;AACFA;;AA6BAA;;AACAA;;AAGAA;;AAGFA;;AACAA;;AAA+BA;AAAA,qBAAY7X,sBAAZ;AAA8B,aAA9B;;AAA+B6X;;AAChEA;;AAEFA;;AAEFA;;AACFA;;AACFA;;;;AA1EYA;;AAAAA;;AAagCA;;AAAAA;;AAMjBA;;AAAAA;;AAwCKA;;AAAAA;;AACiBA;;AAAAA;;AAOxBA;;AAAAA;;;;;;;qBCrDX,CACV,8DAAQ,cAAR,EAAwB,CACtB,4DAAM,WAAN,EAAmB,4DAAM;AAAEL,kBAAM,EAAE,KAAV;AAAiBrN,qBAAS,EAAE;AAA5B,WAAN,CAAnB,CADsB,EAEtB,4DAAM,UAAN,EAAkB,4DAAM;AAAEqN,kBAAM,EAAE;AAAV,WAAN,CAAlB,CAFsB,EAGtB,iEACE,wBADF,EAEE,8DAAQ,sCAAR,CAFF,CAHsB,CAAxB,CADU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSJK;;AACEA;;AACFA;;;;UCtBGK;AAIX;AAAA;;AAFA,0BAAkB,EAAlB;AAEiB;;;;iBAEjB,oBAAQ;AACN,iBAAKC,QAAL,CAAczB,MAAd,GAAuB,CAAvB;AACD;;;;;;;yBARUwB;AAAoB;;;cAApBA;AAAoBvZ;AAAA6B;AAAAC;AAAAC;AAAAC;AAAA;ADPjCkX;;AACEA;;AACEA;;AACEA;;AACEA;;AAEAA;;AACEA;;AACEA;;AACFA;;AACAA;;AACFA;;AACFA;;AAEAA;;AAEAA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACFA;;AAEAA;;AACEA;;AAEEA;;AAGFA;;AACFA;;AACFA;;AAEAA;;AACEA;;AACFA;;AACFA;;AAEFA;;;;AAnCaA;;AAAAA;;AAuBmBA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEoBxBjH;;AACEA;;AACEA;;;;AACFA;;AACAA;;AACEA;;AACFA;;AACAA;;AACEA;;;;AACFA;;AACFA;;;;;;AARIA;;AAAAA;;AAGAA;;AAAAA;;AAGAA;;AAAAA;;;;UC/CCwH;AAEX;AAEA;AAAA;;AAHe,sBAAW,IAAX;AAGE;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBAPUA;AAAiB;;;cAAjBA;AAAiBzZ;AAAAsB;AAAA4U;AAAA;AAAArU;AAAAC;AAAAC;AAAAC;AAAA;ADR9BiQ;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AAEAA;;AAEEA;;AACFA;;AACFA;;AAEAA;;AAEFA;;AAgBFA;;AACFA;;AACFA;;AAEAA;;AACEA;;AACEA;;AACFA;;AACAA;;AACEA;;AACAA;;AAEAA;;AAWFA;;AAEAA;;AACEA;;;;AACFA;;AACFA;;AAEFA;;AACFA;;;;AA1DgBA;;AAAAA;;AAKAA;;AAAAA;;AAIqCA;;AAAAA;;AA8BXA;;AAAAA;;AAclCA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1DFyH;;AACEA;;AACAA;;AACEA;;;;AAGFA;;AAEAA;;AACEA;;AACFA;;AACAA;;;;AACFA;;;;;;AATIA;;AAAAA;;AAQFA;;AAAAA;;;;;;;;AAwCUA;;AAA+CA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE7CA;;AACEA;;AAEAA;;AAAiBA;;AAA2BA;;AAC9CA;;AACFA;;;;;;;;AANEA;;AAEOA;;AAAAA;;AAEYA;;AAAAA;;;;;;;;AAsCrBA;;AAAoDA;AAAA;;AAAA;;AAAA;;AAAAC;AAAA;AAAA;;AAElDD;;AACFA;;;;;;;;AAFEA;;AACAA;;AAAAA;;;;;;AAHJA;;AACEA;;AAIFA;;;;;;AAJuCA;;AAAAA;;;;;;AAQvCA;;AACEA;;AAAWA;;AAAMA;;AACjBA;;AACAA;;AAAoBA;;AAAMA;;AAC5BA;;;;;;;;;;;;;;;AAcAA;;AAEEA;;AAAUA;AAAAA;;AAAA;;AAAA;AAAA;;AAA4CA;;AACxDA;;;;;;;;AAFEA;;AAC0CA;;AAAAA;;;;;;AAL9CA;;AAGEA;;AAKFA;;;;;;AALwBA;;AAAAA;;;;;;AAQxBA;;AACEA;;AACEA;;AACEA;;AACEA;;AACAA;;AACAA;;AACAA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACAA;;AACAA;;AACAA;;AACFA;;AACFA;;AACFA;;;;;;AAIAA;;AACEA;;AACEA;;AACEA;;AACFA;;AACAA;;AACEA;;AACFA;;AACAA;;AACEA;;AACFA;;AACFA;;AACFA;;;;;;;;AAgBEA;;AAEEA;;AAAUA;AAAAA;;AAAA;;AAAA;AAAA;;AAAsDA;;AAClEA;;;;;;;;AAFEA;;AAC0CA;;AAAAA;;;;;;AAH9CA;;AACEA;;AAIFA;;;;;;AAJkCA;;AAAAA;;;;;;AAMhCA;;AACEA;;AACFA;;;;;;;;AAWRA;;AACEA;;AAAYA;AAAAA;;AAAA;;AAAA;AAAA,aAAiC,YAAjC,EAAiC;AAAAA;;AAAA;;AAAA;AAAA,WAAjC,EAAiC,gBAAjC,EAAiC;AAAAA;;AAAA;;AAAA;AAAA,WAAjC;;AAEZA;;AACFA;;;;;;AAFgDA;;AAAAA,mGAAuB,MAAvB,EAAuBE,YAAvB,EAAuB,WAAvB,EAAuBA,iBAAvB;;;;;;;;;;;UCxL3CC;AAiCX,oCACU5G,WADV,EAEU6G,aAFV,EAGUC,WAHV,EAIUC,kBAJV,EAKU9G,aALV,EAMU+G,MANV,EAOU1C,MAPV,EAO2B;AAAA;;AAAA;;AANjB;AACA;AACA;AACA;AACA;AACA;AACA;AAvCV,yBAAoB,EAApB;AAEA,4BAAyB,EAAzB;AAEA,0BAAmB,EAAnB;AACA,sBAAe,EAAf;AAEA,4BAAa,CAAb;AACA,iCAAkB,CAAlB;AACA,2BAAqB,IAArB;AAEA,2BAAqB,KAArB;;AAEA,4BAAa,UAAC2C,CAAD,EAA4B;AACvC,gBAAIC,UAAJ,EAAsBC,QAAtB,EAAsCC,KAAtC;AACA,gBAAIC,KAAK,GAAG,OAAI,CAAC7B,IAAL,CAAU8B,sBAAtB;AACAJ,sBAAU,GAAG,IAAIK,IAAJ,CAAS,OAAI,CAAC/B,IAAL,CAAUgC,kBAAnB,CAAb;AACAN,sBAAU,CAACO,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B;AACAN,oBAAQ,GAAG,IAAII,IAAJ,CAAS,OAAI,CAAC/B,IAAL,CAAUkC,gBAAnB,CAAX;AACAN,iBAAK,GAAG,IAAIG,IAAJ,EAAR;AACAH,iBAAK,CAACK,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACA,mBAAOJ,KAAK,GACRH,UAAU,IAAID,CAAd,IAAmBA,CAAC,IAAIG,KAAxB,IAAiCH,CAAC,IAAIE,QAD9B,GAERD,UAAU,IAAID,CAAd,IAAmBA,CAAC,GAAGG,KAAvB,IAAgCH,CAAC,IAAIE,QAFzC;AAGD,WAXD;;AAgBA,6BAAuB,IAAvB;AAWI;;;;iBAEJ,oBAAQ;AAAA;;AACN,iBAAKJ,kBAAL,CAAwBY,YAAxB,GAAuClX,SAAvC,CAAiD,UAAC4R,SAAD,EAAc;AAC7D,qBAAI,CAACA,SAAL,GAAiBA,SAAjB;AACD,aAFD;AAGA,iBAAKuF,YAAL;AACA,iBAAK5H,WAAL,CAAiB6H,aAAjB,GAAiCpX,SAAjC,CAA2C,UAACqX,UAAD,EAAe;;;AACxD,qBAAI,CAAC3C,OAAL,GAAe2C,UAAU,CAAC3C,OAA1B;AACA,qBAAI,CAAC4C,cAAL,GAAsB,OAAI,CAAC5C,OAAL,CAAa,CAAb,CAAtB;;AACA,qBAAI,CAAC6C,aAAL,CAAmB,OAAI,CAACD,cAAxB;;AACA,qBAAI,CAACE,eAAL,GAAuBH,UAAU,CAAC1B,SAAX,CAAqBtC,GAArB,CAAyB,UAAClX,OAAD,EAAY;AAC1D;AAASsb,+BAAa,EAAEtb,OAAO,CAACsb;AAAhC,mBAAkDtb,OAAO,CAACqW,IAA1D;AACD,eAFsB,CAAvB;AAGA,kBAAIkF,YAAJ;AACAL,wBAAU,CAAC1B,SAAX,CAAqBtB,MAArB,GAA8B,CAA9B,GACKqD,YAAY,GAAG,gBAAU,CAAC/B,SAAX,CAAqB,CAArB,OAAuB,IAAvB,IAAuBgC,aAAvB,GAAuB,MAAvB,GAAuBA,GAAEF,aAD7C,GAEKC,YAAY,GAAG,IAAIZ,IAAJ,EAFpB;;AAGA,qBAAI,CAACc,eAAL,CAAqBF,YAArB;AACD,aAZD;AAaA,iBAAKG,OAAL;AACA,iBAAK9C,IAAL,GAAY,KAAKvF,aAAL,CAAmBE,WAAnB,EAAZ;AACD;;;iBAED,wBAAY;AACV,gBAAMoI,SAAS,GAAG,KAAKtI,aAAL,CAAmBuI,YAAnB,EAAlB;;AACA,oBAAQD,SAAR;AACE,mBAAK,KAAL;AACE,qBAAKE,OAAL,GAAe,IAAf;AACA;;AACF,mBAAK,KAAL;AACE,qBAAKC,MAAL,GAAc,IAAd;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACE;AAlBJ;AAoBD;;;iBAED,yBAAgBxY,KAAhB,EAAqB;AACnB,iBAAKgY,aAAL,GAAqB,KAAKjI,aAAL,CAAmB0I,UAAnB,CAA8BzY,KAA9B,CAArB;AACA,iBAAK0Y,aAAL;AACA,iBAAKC,QAAL;AACD;;;iBAED,yBAAa;AAAA;;AACX,iBAAK9B,kBAAL,CACG6B,aADH,CACiB,KAAKV,aADtB,EAEGzX,SAFH,CAEa,UAACqY,UAAD,EAAe;AACxB,qBAAI,CAACA,UAAL,GAAkBA,UAAlB;AACD,aAJH;AAKD,YAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBAEA,mBAAU7F,IAAV,EAAoB;AAClBA,gBAAI,CAAC8F,SAAL,GAAiB,KAAKC,QAAtB;AACA,gBAAMC,QAAQ,GAAGhG,IAAI,CAACiG,QAAL,GAAgBjG,IAAI,CAACnB,UAAtC;;AACA,gBAAI,KAAKgH,UAAL,IAAmBG,QAAvB,EAAiC;AAC/B,mBAAKnC,WAAL,CAAiBqC,WAAjB,CAA6BlG,IAA7B,EAD+B,CAE/B;AACD,aAHD,MAGO,IAAI,KAAKmG,SAAT,EAAoB;AACzB,kBAAMC,SAAS,GAAG,KAAKC,eAAL,GAAuB,KAAKR,UAA9C;;AACA,kBAAIO,SAAS,IAAIJ,QAAjB,EAA2B;AACzB,oBAAM5B,KAAK,GAAGkC,OAAO,6EAArB;;AAGA,oBAAIlC,KAAJ,EAAW;AACT,uBAAKP,WAAL,CAAiBqC,WAAjB,CAA6BlG,IAA7B,EADS,CAET;AACD;AACF,eARD,MAQO;AACLuG,qBAAK,sGAAL;AAGA,qBAAKxC,MAAL,CAAYyC,QAAZ,CAAqB,CAAC,8BAAD,CAArB;AACD;AACF,aAtBiB,CAuBlB;;AACD;;;iBAED,uBAAcvJ,MAAd,EAAoB;AAAA;;AAClB,iBAAKwJ,WAAL,GAAmB,IAAnB;AACA,iBAAK3B,cAAL,GAAsB7H,MAAtB;AACA,iBAAKF,WAAL,CAAiBiC,YAAjB,CAA8B,KAAK8F,cAAL,CAAoBvC,IAApB,CAAyB9D,EAAvD;AACA,iBAAK1B,WAAL,CACGkC,2BADH,GAEGrR,IAFH,CAEQ,sDAAK,CAAL,CAFR,EAGGJ,SAHH,CAGa,UAACkZ,WAAD,EAAgB;AACzB,qBAAI,CAACC,UAAL,GAAkBD,WAAW,CAACvH,OAA9B;AACA,qBAAI,CAACyH,gBAAL,GAAwB,OAAI,CAACD,UAAL,CAAgB,CAAhB,CAAxB;;AACA,kBAAI,OAAI,CAACC,gBAAT,EAA2B;AACzB,uBAAI,CAAChB,QAAL;AACD,eAFD,MAEO;AACL,uBAAI,CAACa,WAAL,GAAmB,KAAnB;AACA,uBAAI,CAACnD,QAAL,GAAgB,EAAhB;AACD;AACF,aAZH;AAaD;;;iBAED,oBAAQ;AAAA;;AACN,gBAAI,KAAKsD,gBAAL,IAAyB,KAAK9B,cAA9B,IAAgD,KAAKG,aAAzD,EAAwE;AACtE,mBAAK4B,cAAL,GACGjZ,IADH,CACQ,sDAAK,CAAL,CADR,EAEGJ,SAFH,CAEa,UAACuY,QAAD,EAAqB;AAC9B,oBAAIA,QAAJ,EAAc;AACZ,yBAAI,CAACA,QAAL,GAAgBA,QAAhB;;AACA,yBAAI,CAAChJ,WAAL,CAAiB+J,gBAAjB,CACE,OAAI,CAAChC,cAAL,CAAoBvC,IAApB,CAAyB9D,EAD3B,EAEE,OAAI,CAACmI,gBAAL,CAAsBnI,EAFxB,EAGE,OAAI,CAACwG,aAHP,EAIE,OAAI,CAACc,QAJP;;AAMA,yBAAI,CAAChJ,WAAL,CACGgK,2BADH,GAEGvZ,SAFH,CAEa,UAACwZ,KAAD,EAAU;AACnB7E,2BAAO,CAACC,GAAR,CAAY4E,KAAZ;AACA,2BAAI,CAACP,WAAL,GAAmB,KAAnB;;AACA,wBAAIO,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAE7H,OAAX,EAAoB;AAClB,6BAAI,CAACmE,QAAL,GAAgB0D,KAAK,CAAC7H,OAAN,CAAc0B,GAAd,CAAkB,UAAClX,OAAD,EAAY;AAC5C;AACEsb,uCAAa,EAAEtb,OAAO,CAACsb;AADzB,2BAEKtb,OAAO,CAACqW,IAFb;AAID,uBALe,CAAhB;AAMD,qBAPD,MAOO;AACL,6BAAI,CAACsD,QAAL,GAAgB,EAAhB;AACD;AACF,mBAfH;AAgBD,iBAxBD,MAwBO;AACL,yBAAI,CAACmD,WAAL,GAAmB,KAAnB;AACA,yBAAI,CAACnD,QAAL,GAAgB,EAAhB;AACA;AACD;AACF,eAhCH;AAiCD;AACF;;;iBAED,0BAAc;AACZ,mBAAO,KAAKjC,MAAL,CACJG,IADI,CACCyF,iGADD,EAC0B;AAC7BC,0BAAY,EAAE;AADe,aAD1B,EAIJxF,WAJI,EAAP,CADY,CAMZ;AACA;AACA;AACD;;;iBAED,mBAAO;AAAA;;AACL,iBAAKmC,WAAL,CAAiBwB,OAAjB,GAA2B7X,SAA3B,CAAqC,UAAC6S,IAAD,EAAS;AAC5C,qBAAI,CAACA,IAAL,GAAYA,IAAI,CAACA,IAAjB;AACA,qBAAI,CAACC,SAAL,GAAiBD,IAAI,CAAC8G,KAAtB,CAF4C,CAG5C;AACD,aAJD;AAKD;;;iBAED,0BAAiBla,KAAjB,EAA4B;AAC1B,iBAAK4W,WAAL,CAAiB5D,cAAjB,CAAgChT,KAAhC;AACD;;;iBAED,wBAAe+S,IAAf,EAAyB;AACvB,gBAAIgG,QAAQ,GAAGhG,IAAI,CAACiG,QAAL,GAAgBjG,IAAI,CAACnB,UAApC;;AACA,gBAAI,KAAKgH,UAAL,IAAmBG,QAAvB,EAAiC;AAC/B,mBAAKnC,WAAL,CAAiBuD,YAAjB,CAA8BpH,IAA9B,EAD+B,CAE/B;AACD,aAHD,MAGO,IAAI,KAAKmG,SAAT,EAAoB;AACzB,kBAAMC,SAAS,GAAG,KAAKC,eAAL,GAAuB,KAAKR,UAA9C;;AACA,kBAAIO,SAAS,IAAIJ,QAAjB,EAA2B;AACzB,oBAAM5B,KAAK,GAAGkC,OAAO,6EAArB;;AAGA,oBAAIlC,KAAJ,EAAW;AACT,uBAAKP,WAAL,CAAiBuD,YAAjB,CAA8BpH,IAA9B,EADS,CAET;AACD;AACF,eARD,MAQO;AACLuG,qBAAK,sGAAL,CADK,CAIL;;AACAvG,oBAAI,CAACiG,QAAL,GAAgB,CAAhB;AACA,qBAAKpC,WAAL,CAAiBqC,WAAjB,CAA6BlG,IAA7B;AACA,qBAAK+D,MAAL,CAAYyC,QAAZ,CAAqB,CAAC,8BAAD,CAArB;AACD;AACF;AACF;;;iBAED,0BAAc;AACZ,iBAAK1C,kBAAL,CAAwBuD,UAAxB,CAAmC,KAAKhH,IAAxC;AACD;;;iBAED,oBAAWiH,IAAX,EAAe;AACb,gBAAMC,OAAO,GAAG,IAAIjD,IAAJ,CAASgD,IAAT,CAAhB;AACA,mBAAO,KAAKtK,aAAL,CAAmB0I,UAAnB,CAA8B6B,OAA9B,CAAP;AACD;;;;;;;yBA5PU5D,oBAAiBH;AAAA;;;cAAjBG;AAAiB7Z;AAAA6B;AAAAC;AAAAC;AAAAC;AAAA;;;ADnB9B0X;;AACEA;;AACEA;;AACEA;;AAaFA;;AAEAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AAEEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACFA;;AACFA;;AACFA;;AACAA;;AACAA;;AACFA;;AACFA;;AACFA;;AAEAA;;AAEEA;;AAEEA;;AAcFA;;AACFA;;AAEAA;;AACEA;;AACEA;;AACFA;;AACAA;;AAA0CA;AAAA,qBAAarY,iCAAb;AAA0C,aAA1C;;AAA1CqY;;AAEAA;;AACAA;;AAAuBA;AAAAA;;AAAA;;AAAA,qBAASgE,UAAT;AAAsB,aAAtB;;AAAvBhE;;AAGFA;;AACFA;;AACAA;;AACEA;;;;AACFA;;AACFA;;AAEAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AAMFA;;AACAA;;AAEEA;;AAOFA;;AAEFA;;AACFA;;AAGAA;;AACEA;;AACEA;;AAWAA;;AAuBAA;;AAaFA;;AACFA;;AAEAA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACFA;;AAEAA;;AACEA;;AAEEA;;AAMAA;;AAUFA;;AACFA;;AACFA;;AAEAA;;AAKFA;;AACFA;;AACFA;;AACFA;;;;;;;;;;AA9MYA;;AAAAA;;AAiBCA;;AAAAA;;AAkCwCA;;AAAAA;;AAqB9BA;;AAAAA,4GAAkC,OAAlC,EAAkCrY,iBAAlC,EAAkC,eAAlC,EAAkCqc,GAAlC;;AASThE;;AAAAA;;AAYQA;;AAAAA;;AASWA;;AAAAA;;AAecA;;AAAAA;;AAWlBA;;AAAAA;;AAuBAA;;AAAAA;;AA2BAA;;AAAAA,oJAAmC,UAAnC,EAAmCiE,IAAnC;;AAoBfjE;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE9Ld,UAAMkE,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAACC;AAFZ,OADqB,EAKrB;AACEF,YAAI,EAAE,cADR;AAEEC,iBAAS,EAACE;AAFZ,OALqB,EASrB;AACEH,YAAI,EAAE,YADR;AAEEC,iBAAS,EAACG;AAFZ,OATqB,EAarB;AACEJ,YAAI,EAAE,WADR;AAEEC,iBAAS,EAACI;AAFZ,OAbqB,EAiBrB;AACEL,YAAI,EAAE,iBADR;AAEEC,iBAAS,EAACK;AAFZ,OAjBqB,EAqBrB;AACEN,YAAI,EAAE,UADR;AAEEC,iBAAS,EAACM;AAFZ,OArBqB,EAyBrB;AACEP,YAAI,EAAE,iBADR;AAEEC,iBAAS,EAACO;AAFZ,OAzBqB,EA6BrB;AACER,YAAI,EAAE,eADR;AAEEC,iBAAS,EAACQ;AAFZ,OA7BqB,CAAvB;;UAuCaC;;;;;yBAAAA;AAAiB;;;cAAjBA;;;kBAHF,CAACC,mEAAsBZ,MAAtB,CAAD,GACCY;;;;4HAECD,oBAAiB;AAAA1V;AAAAC,oBAFlB0V,yDAEkB;AAAA;AAFN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjChBC;;AACEA;;AACFA;;;;;;AAQMA;;AAAuDA;;AAAKA;;;;;;AAC5DA;;AACEA;;AAEAA;;;;AACFA;;;;;;AAHuCA;;AAAAA,uLAAsB,KAAtB,EAAsBC,gBAAtB;;AAErCD;;AAAAA;;;;;;AAOFA;;AAAuDA;;AAAMA;;;;;;AAC7DA;;AAAwCA;;;;AAA2DA;;;;;;AAA3DA;;AAAAA;;;;;;AAKxCA;;AAAuDA;;AAASA;;;;;;AAChEA;;AAAwCA;;AAAmCA;;;;;;AAAnCA;;AAAAA;;;;;;AAKxCA;;;;;;;;AACAA;;AACEA;;AAAQA;AAAA;;AAAA;;AAAA;;AAAA,uFAAyD,IAAzD,GAA6DE,WAA7D;AAA6D,WAA7D;;AAENF;;AAAUA;;AAAWA;;AACvBA;;AACFA;;;;;;;;AAMAA;;AACEA;;AAEEA;;AACEA;;AACAA;;AACEA;;AAEEA;;AAAQA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgEA;;AAAIA;;AAC9EA;;AACFA;;AACFA;;AACFA;;AACFA;;;;;;;;AAbuCA;;AAEnCA;;AAAAA;;AAEiBA;;AAAAA;;;;;;AAYvBA;;;;;;AACAA;;;;;;;;AACEA;;;;;;AAEFA;;;;;;AACAA;;AACEA;;AAA0EA;;AAAkBA;;AAC9FA;;;;;;AADmCA;;AAAAA;;;;;;;;UCzDlCG;AAgBX,qCACU3L,WADV,EAEUqE,WAFV,EAGUpE,aAHV,EAIUqE,MAJV,EAKUC,aALV,EAKsC;AAAA;;AAJ5B;AACA;AACA;AACA;AACA;AApBV,6BAAc,KAAd;AACA,4BAAqB,EAArB;AACA,8BAAwB,IAAxB;AACA,uBAAQ,OAAR;AACA,kCAA0B,EAA1B;AAiBM;;;;iBAGN,oBAAQ;AACN,iBAAKC,YAAL,GAAoB,IAApB;AACA,iBAAKoD,YAAL;AACD;;;iBAGD,sBAAsB;AAAA;;AAAA,gBAAX3E,IAAW,uEAAJ,IAAI;AACpB,gBAAMnD,SAAS,GAAG,KAAKwE,MAAL,CAAYG,IAAZ,CAAiBmH,0EAAjB,EAAmC;AACnDpZ,kBAAI,EAAEyQ;AAD6C,aAAnC,CAAlB;AAIAnD,qBAAS,CAAC6E,WAAV,GAAwBlU,SAAxB,CAAkC,gBAAM,EAAG;AACzC,qBAAI,CAACob,WAAL;AACD,aAFD;AAGD;;;iBAED,wBAAY;AACV,gBAAMtD,SAAS,GAAG,KAAKtI,aAAL,CAAmBuI,YAAnB,EAAlB;;AACA,oBAAQD,SAAR;AACE,mBAAK,KAAL;AACE,qBAAKG,MAAL,GAAc,IAAd;AACA,qBAAKxI,MAAL,GAAc,KAAKD,aAAL,CAAmBE,WAAnB,GAAiCuB,EAA/C;AACA,qBAAKmK,WAAL;AACA,qBAAKC,gBAAL,GAAwB,CACtB;AACA,sBAFsB,EAGtB,YAHsB,EAItB,UAJsB,EAKtB,MALsB,CAAxB,CAJF,CAWE;;AACA,sBAZF,CAaE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEF;AACE;AAzBJ;AA2BD;;;iBAED,uBAAW;AAAA;;AACT,iBAAK9L,WAAL,CAAiB6I,QAAjB,CAA0B,KAAK3I,MAA/B,EAAuC,IAAvC,EAA6C,KAAK0E,QAAlD,EAA4D,KAAKC,SAAjE;AACA,iBAAK7E,WAAL,CAAiB+L,qBAAjB,GACCtb,SADD,CACW,UAAC8V,QAAD,EAAa;AACtB,qBAAI,CAACvB,UAAL,GAAkBuB,QAAQ,CAACnE,OAA3B;AACAgD,qBAAO,CAACC,GAAR,CAAY,OAAI,CAACL,UAAjB;AACA,qBAAI,CAACF,MAAL,GAAcyB,QAAQ,CAACxB,KAAvB;AACA,qBAAI,CAACP,YAAL,GAAoB,KAApB;AACD,aAND;AAOD;;;iBAED,oBAAWtU,KAAX,EAAyD;AACvD,iBAAK0U,QAAL,GAAgB1U,KAAK,CAAC0U,QAAtB;AACA,iBAAKC,SAAL,GAAiB3U,KAAK,CAAC2U,SAAvB;AACA,iBAAKgH,WAAL;AACA,iBAAKrH,YAAL,GAAoB,IAApB;AACD;;;iBAED,kBAASvB,IAAT,EAAa;AAAA;;AACX,iBAAKsB,aAAL,CAAmBkB,iBAAnB,GACCd,WADD,GAEClU,SAFD,CAEW,UAACP,KAAD,EAAU;AACnB,kBAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,uBAAI,CAAC8P,WAAL,CAAiBgM,UAAjB,CAA4B/I,IAA5B,EACCxS,SADD,CACW,UAACwb,QAAD,EAAa;AAAE,yBAAI,CAACJ,WAAL;AAAmB,iBAD7C;AAED;AACF,aAPD;AAQD;;;;;;;yBAnGUF,qBAAkBH;AAAA;;;cAAlBG;AAAkB5e;AAAAqE;AAAA;sEAuBlB8a,6DAAO;;;;;;;;;;;;;;ADhDpBV;;AACEA;;AACEA;;AACEA;;AACEA;;AAAIA;;;;AAAqBA;;AAEzBA;;AAAQA;AAAA,qBAASpd,gBAAT;AAAqB,aAArB;;AACNod;;AACAA;;AACFA;;AACFA;;AACFA;;AACAA;;AAEEA;;AACEA;;AAIAA;;AAEEA;;AAGEA;;AACEA;;AACAA;;AAKFA;;AAIAA;;AACEA;;AACAA;;AACFA;;AAGAA;;AACEA;;AACAA;;AACFA;;AAGAA;;AACEA;;AACAA;;AAMFA;;AAIAA;;AACEA;;AAcFA;;AAEAA;;AACAA;;AAGAA;;AACAA;;AAGFA;;AACAA;;AAA+BA;AAAA,qBAAYpd,sBAAZ;AAA8B,aAA9B;;AAA+Bod;;AAChEA;;AAEFA;;AAEFA;;AACFA;;AACFA;;;;AAxFYA;;AAAAA;;AAWgCA;;AAAAA;;AAMjBA;;AAAAA;;AAuDKA;;AAAAA;;AACiBA;;AAAAA;;AAGJA;;AAAAA;;AAKpBA;;AAAAA;;;;;;;qBCvEX,CACV,+DAAQ,cAAR,EAAwB,CACtB,6DAAM,WAAN,EAAmB,6DAAM;AAAE5F,kBAAM,EAAE,KAAV;AAAiBrN,qBAAS,EAAE;AAA5B,WAAN,CAAnB,CADsB,EAEtB,6DAAM,UAAN,EAAkB,6DAAM;AAAEqN,kBAAM,EAAE;AAAV,WAAN,CAAlB,CAFsB,EAGtB,kEACE,wBADF,EAEE,+DAAQ,sCAAR,CAFF,CAHsB,CAAxB,CADU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC+DDuG;;;;;yBAAAA;AAAU;;;cAAVA;;;kBAtBF,CACPC,0DADO,EAEPC,mEAFO,EAGPC,wDAHO,EAIPA,gEAJO,EAKPC,kEALO,EAMPC,6EANO,EAOPC,oEAPO,EAQPC,sEARO,EASPC,kEATO,EAUPC,8EAVO,EAWPC,sEAXO,EAYPC,mFAZO,EAaPC,oEAbO,EAcPC,+DAdO,EAePC,yFAfO,EAgBPC,sEAhBO,EAiBPC,kEAjBO,EAkBPC,wEAlBO,EAmBPC,wEAnBO;;;;6HAsBElB,aAAU;AAAArW,yBAvCnBwX,6EAuCmB,EAtCnBC,+DAsCmB,EArCnBC,qEAqCmB,EApCnBC,sFAoCmB,EAnCnBC,8EAmCmB,EAlCnBC,+FAkCmB,EAjCnBC,uGAiCmB,EAhCnBC,yFAgCmB,EA/BnBC,gGA+BmB,EA9BnBC,2EA8BmB,EA7BnBC,8FA6BmB,EA5BnBC,gHA4BmB,EA3BnBC,8GA2BmB,EA1BnBC,iFA0BmB,EAzBnBC,8EAyBmB,EAxBnBC,kGAwBmB;AAxBIzY,oBAGvBwW,0DAHuB,EAIvBC,mEAJuB,EAKvBC,wDALuB,EAMvBA,gEANuB,EAOvBC,kEAPuB,EAQvBC,6EARuB,EASvBC,oEATuB,EAUvBC,sEAVuB,EAWvBC,kEAXuB,EAYvBC,8EAZuB,EAavBC,sEAbuB,EAcvBC,mFAduB,EAevBC,oEAfuB,EAgBvBC,+DAhBuB,EAiBvBC,yFAjBuB,EAkBvBC,sEAlBuB,EAmBvBC,kEAnBuB,EAoBvBC,wEApBuB,EAqBvBC,wEArBuB;AAwBJ;AAHH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UClEPiB;AAIX;AAAA;;AAFqB,2BAAY,IAAIriB,uDAAJ,EAAZ;AAEL;;;;iBAEhB,oBAAQ,CAAW;;;iBAEnB,qBAAYgX,IAAZ,EAAsB;AACpBA,gBAAI,CAACiG,QAAL,GAAgB,CAAhB;AACA,iBAAKqF,SAAL,CAAepL,IAAf,CAAoBF,IAApB;AACD;;;;;;;yBAXUqL;AAAa;;;cAAbA;AAAavhB;AAAAsB;AAAA4U;AAAA;AAAAtR;AAAA4c;AAAA;AAAA3f;AAAAC;AAAAC;AAAAC;AAAA;ACP1B9C;;AACEA;;AACEA;;AACAA;;AACEA;;;;AACFA;;AACAA;;AACEA;;;;AACFA;;AAGEA;;AACEA;;AAAQA;AAAA,qBAASmC,yBAAT;AAA0B,aAA1B;;AACNnC;;AAAUA;;AAAaA;;AACzBA;;AAMFA;;AAEJA;;AACFA;;;;AAvBKA;;AAE2EA;;AAAAA,mLAAmB,KAAnB,EAAmBmC,uCAAnB;;AAE1EnC;;AAAAA;;AAGAA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEEga;;AACEA;;AACFA;;;;;;AAOMA;;AAAuDA;;AAAIA;;;;;;AAC3DA;;AAA4DA;;AAAqBA;;;;;;AAArBA;;AAAAA;;;;;;AAK5DA;;AAAuDA;;AAAGA;;;;;;AAC1DA;;AAAwCA;;AAA+BA;;;;;;AAA/BA;;AAAAA;;;;;;AAKxCA;;AAAuDA;;AAAGA;;;;;;AAC1DA;;AAAwCA;;AAA6BA;;;;;;AAA7BA;;AAAAA;;;;;;AAKxCA;;AAAuCA;;AAASA;;;;;;AAChDA;;AAAwCA;;AAAqCA;;;;;;AAArCA;;AAAAA;;;;;;AAIxCA;;AAAuCA;;AAAKA;;;;;;AAC5CA;;AAAwCA;;AAA0BA;;;;;;AAA1BA;;AAAAA;;;;;;AAKxCA;;;;;;AACAA;;AACEA;;AAAUA;;AAASA;;AACrBA;;;;;;AAMAA;;AACEA;;AAEEA;;AACEA;;AAAuCA;;AAAqBA;;AAC5DA;;AAAqCA;;AAAqBA;;AAC1DA;;AAAmCA;;AAAiBA;;AACpDA;;AAAqCA;;AAAqBA;;AAC5DA;;AACAA;;AACEA;;AACFA;;AACFA;;AACFA;;;;;;;;AAbuCA;;AAEnCA;;AAAAA;;AAEyCA;;AAAAA;;AACFA;;AAAAA;;AACFA;;AAAAA;;AACEA;;AAAAA;;AAGrCA;;AAAAA;;;;;;AAMRA;;;;;;;;AACAA;;AAEEA;AAAA;;AAAA;;AAAA;;AAAA,uFAAyD,IAAzD,GAA6DuI,WAA7D;AAA6D,WAA7D;;AACFvI;;;;;;;;AAFEA;;;;;;AAGFA;;;;;;AACAA;;AACEA;;AAA0EA;;AAAkBA;;AAC9FA;;;;;;AADmCA;;AAAAA;;;;;;;;UCpDlCwI;AAmBX,0CACUzO,WADV,EACkC;AAAA;;AAAxB;AAnBV,6BAAc,KAAd;AACA,4BAAoB,EAApB;AACA,8BAAwB,IAAxB,CAiBkC,CAhBlC;;AACA,uBAAQ,iBAAR;AACA,kCAA0B,CACxB,UADwB,EAExB,YAFwB,EAGxB,SAHwB,EAIxB,iBAJwB,EAKxB,MALwB,EAMxB,MANwB,CAA1B;AAeI;;;;iBAGJ,oBAAQ;AACN,iBAAKwE,YAAL,GAAoB,IAApB;AACA,iBAAKkK,iBAAL;AACD;;;iBAED,6BAAiB;AAAA;;AACf,iBAAK1O,WAAL,CAAiB2O,iBAAjB,CAAmC,KAAK/J,QAAxC,EAAkD,KAAKC,SAAvD;AACA,iBAAK7E,WAAL,CACG4O,gCADH,GAEGne,SAFH,CAEa,UAAC2V,SAAD,EAAmB;AAC5B,kBAAIA,SAAS,CAAChE,OAAd,EAAuB;AACrB,uBAAI,CAAC0C,MAAL,GAAcsB,SAAS,CAACrB,KAAxB;AACA,uBAAI,CAACC,UAAL,GAAkBoB,SAAS,CAAChE,OAAV,CAAkB0B,GAAlB,CAAsB,UAAClX,OAAD,EAAUmX,KAAV,EAAmB;AACzD,yDAAYnX,OAAZ,GAAmB;AAAEwH,4BAAQ,EAAE2P,KAAK,GAAG;AAApB,mBAAnB;AACD,iBAFiB,CAAlB;AAGA,uBAAI,CAACS,YAAL,GAAoB,KAApB;AACD,eAND,MAMO;AACL,uBAAI,CAACM,MAAL,GAAc,CAAd;AACA,uBAAI,CAACE,UAAL,GAAkB,EAAlB;AACA,uBAAI,CAACR,YAAL,GAAoB,KAApB;AACD;AACF,aAdH;AAeD;;;iBAED,oBAAWtU,KAAX,EAAyD;AACvD,iBAAK0U,QAAL,GAAgB1U,KAAK,CAAC0U,QAAtB;AACA,iBAAKC,SAAL,GAAiB3U,KAAK,CAAC2U,SAAvB;AACA,iBAAK6J,iBAAL;AACA,iBAAKlK,YAAL,GAAoB,IAApB;AACD;;;;;;;yBArDUiK,0BAAuBxI;AAAA;;;cAAvBwI;AAAuB1hB;AAAAqE;AAAA;sEAsBvByd,6DAAO;;;;;;;;;;;;;;ADlDpB5I;;AACEA;;AACEA;;AACEA;;AAAIA;;;;AAAqBA;;AAC3BA;;AACAA;;AAEEA;;AAEAA;;AACEA;;AAIAA;;AAEEA;;AAEEA;;AACEA;;AACAA;;AACFA;;AAGAA;;AACEA;;AACAA;;AACFA;;AAGAA;;AACEA;;AACAA;;AACFA;;AAGAA;;AACEA;;AACAA;;AACFA;;AAEAA;;AACEA;;AACAA;;AACFA;;AAGAA;;AACEA;;AACAA;;AAGFA;;AAIAA;;AACEA;;AAcFA;;AAEAA;;AACAA;;AAIAA;;AACAA;;AAGFA;;AACAA;;AAA+BA;AAAA,qBAAY7X,sBAAZ;AAA8B,aAA9B;;AAA+B6X;;AAChEA;;AAEFA;;AAEFA;;AACFA;;AACFA;;;;AAvFUA;;AAAAA;;AAIiBA;;AAAAA;;AAGiBA;;AAAAA;;AAMjBA;;AAAAA;;AAyDKA;;AAAAA;;AACiBA;;AAAAA;;AAIJA;;AAAAA;;AAKpBA;;AAAAA;;;;;;;qBClEX,CACV,8DAAQ,cAAR,EAAwB,CACtB,4DAAM,WAAN,EAAmB,4DAAM;AAAEL,kBAAM,EAAE,KAAV;AAAiBrN,qBAAS,EAAE;AAA5B,WAAN,CAAnB,CADsB,EAEtB,4DAAM,UAAN,EAAkB,4DAAM;AAAEqN,kBAAM,EAAE;AAAV,WAAN,CAAlB,CAFsB,EAGtB,iEACE,wBADF,EAEE,8DAAQ,sCAAR,CAFF,CAHsB,CAAxB,CADU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBZK;;AACEA;;AACFA;;;;;;AASMA;;AAAuDA;;AAAKA;;;;;;AAC5DA;;AACEA;;AACAA;;;;AACFA;;;;;;AAFuCA;;AAAAA,8NAA4B,KAA5B,EAA4B6I,kDAA5B;;AACrC7I;;AAAAA;;;;;;AAMFA;;AAAuDA;;AAAMA;;;;;;AAC7DA;;AACEA;;;;AACFA;;;;;;AADEA;;AAAAA;;;;;;AAMFA;;AAAuCA;;AAAMA;;;;;;AAC7CA;;AACEA;;AACFA;;;;;;AADEA;;AAAAA;;;;;;AAMFA;;AAAuCA;;AAAOA;;;;;;AAC9CA;;AACEA;;AACFA;;;;;;AADEA;;AAAAA;;;;;;AAHJA;;AACEA;;AACAA;;AAGFA;;;;;;AAIEA;;;;;;;;AACAA;;AACEA;;AAAQA;AAAA;;AAAA;;AAAA;;AAAA,uFAAyD,IAAzD,GAA6D8I,WAA7D;AAA6D,WAA7D;;AAEN9I;;AAAUA;;AAAWA;;AACvBA;;AAEFA;;;;;;AAkDkBA;;AAAqEA;;AACrEA;;;;;;AAD+CA;;AAAsBA;;AAAAA;;;;;;AAa7EA;;AACEA;;AACFA;;;;;;AADEA;;AAAAA;;;;;;AASiBA;;;;;;;;AAJvBA;;AACEA;;AAEEA;;AAAuCA;AAAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpBA;;AAA8DA;;AAAMA;;AACzFA;;AACFA;;;;;;AAHYA;;AAAAA;;AAC6CA;;AAAAA;;;;;;AAnE/DA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACAA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACAA;;AACEA;;;;AACFA;;AACAA;;AACEA;;AACFA;;AACAA;;AACEA;;AAAgBA;;AAAQA;;AACxBA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AAAgBA;;AAAMA;;AACtBA;;AACEA;;;;AACFA;;AACFA;;AACFA;;AAEAA;;AACEA;;AAAWA;;AAAKA;;AAChBA;;AAA2BA;AAAA;AAAA;AAAA;;AAA3BA;;AACFA;;AAEAA;;AACEA;;AAAWA;;AAASA;;AACpBA;;AAAYA;AAAA;AAAA;AAAA;;AAEVA;;AAEFA;;AACFA;;AACFA;;AACFA;;AACFA;;AAEAA;;AACEA;;AACEA;;AACFA;;AAEAA;;AAGFA;;AAEFA;;AACAA;;AAOFA;;AACFA;;AACFA;;;;;;;;AAxEuCA;;AACDA;;AAAAA;;AAKrBA;;AAAAA,+JAA0B,KAA1B,EAA0B+I,qBAA1B;;AAUC/I;;AAAAA;;AAGAA;;AAAAA;;AAKEA;;AAAAA;;AAMAA;;AAAAA;;AAOGA;;AAAAA,+FAAmB,SAAnB,EAAmB+I,yBAAnB;;AAKK/I;;AAAAA;;AAEuBA;;AAAAA;;AAUvCA;;AAAAA;;AAGyBA;;AAAAA;;AAMzBA;;AAAAA;;;;;;AAYdA;;;;;;AACAA;;;;;;;;AACEA;;;;;;AAEFA;;;;;;AACAA;;AACEA;;AAA0EA;;AAAkBA;;AAC9FA;;;;;;AADmCA;;AAAAA;;;;;;;;UCxG5BgJ;AAqBX,4CACUjP,WADV,EAEUkP,mBAFV,EAEkD;AAAA;;AADxC;AACA;AAlBiB,iCAAkB,IAAIjJ,uDAAJ,EAAlB;AAI3B,kCAA0B,CACxB;AACA,gBAFwB,EAGxB,OAHwB,EAIxB,eAJwB,EAKxB,MALwB,CAA1B;AAeI;;;;iBAEJ,oBAAQ;AAAA;;AACN;AACA,iBAAKkJ,KAAL,GAAa,KAAKrD,gBAAL,GAAwB,CAAC,MAAD,EAAS,OAAT,EAAkB,eAAlB,EAAmC,MAAnC,CAArC,GAAiF,KAAKA,gBAAL,GAAwB,CAAC,MAAD,EAAS,OAAT,EAAkB,eAAlB,EAAmC,QAAnC,EAA6C,MAA7C,CAAzG;AACA,iBAAK9L,WAAL,CAAiBoP,cAAjB,GAAkC3e,SAAlC,CAA4C,UAAC4R,SAAD,EAAc;AACxD,qBAAI,CAACA,SAAL,GAAiBA,SAAjB;AACD,aAFD;AAGD;;;iBAED,qBAAYgN,OAAZ,EAAkC;AAChC;AACA;AACA,iBAAKC,YAAL;AACD;;;iBAED,gBAAI;AACFlK,mBAAO,CAACC,GAAR;AACD;;;iBAED,wBAAY;AAAA;;AACV,iBAAKb,YAAL,GAAoB,IAApB;AACA,iBAAKxE,WAAL,CAAiBsP,YAAjB,CACE,KAAKpP,MADP,EAEE,KAAKiI,YAFP,EAGE,KAAKvD,QAHP,EAIE,KAAKC,SAJP;AAMA,iBAAK7E,WAAL,CACGgK,2BADH,GAEGvZ,SAFH,CAEa,UAAC2V,SAAD,EAAmB;AAC5B,kBAAIA,SAAS,CAAChE,OAAd,EAAuB;AACrB,uBAAI,CAAC0C,MAAL,GAAcsB,SAAS,CAACrB,KAAxB;AACA,uBAAI,CAACC,UAAL,GAAkBoB,SAAS,CAAChE,OAAV,CAAkB0B,GAAlB,CAAsB,UAAClX,OAAD,EAAUmX,KAAV,EAAmB;AACzD,yDAAYnX,OAAZ,GAAmB;AAAEwH,4BAAQ,EAAE2P,KAAK,GAAG;AAApB,mBAAnB;AACD,iBAFiB,CAAlB;AAGA,uBAAI,CAACS,YAAL,GAAoB,KAApB;AACD,eAND,MAMO;AACL,uBAAI,CAACM,MAAL,GAAc,CAAd;AACA,uBAAI,CAACE,UAAL,GAAkB,EAAlB;AACA,uBAAI,CAACR,YAAL,GAAoB,KAApB;AACD,eAX2B,CAY5B;AACA;;AACD,aAhBH;AAiBD;;;iBAED,oBAAWtU,KAAX,EAAyD;AACvD,iBAAK0U,QAAL,GAAgB1U,KAAK,CAAC0U,QAAtB;AACA,iBAAKC,SAAL,GAAiB3U,KAAK,CAAC2U,SAAvB;AACA,iBAAKyK,YAAL;AACA,iBAAK9K,YAAL,GAAoB,IAApB;AACD;;;iBAED,2BAAkB5X,OAAlB,EAAyB;AACvB,gBAAIA,OAAO,CAACmc,SAAZ,EAAuB;AACrB,mBAAKwG,eAAL,CAAqBpM,IAArB,CAA0BvW,OAA1B;AACD,aAFD,MAEO;AACL,mBAAKsiB,mBAAL,CAAyBM,OAAzB,CACE,SADF,EAEE,sDAFF;AAID;AACF;;;;;;;yBAvFUP,4BAAyBhJ;AAAA;;;cAAzBgJ;AAAyBliB;AAAAsB;AAAA8gB;AAAAhH;AAAAjI;AAAAuP;AAAA;AAAA9d;AAAA4d;AAAA;AAAAviB;AAAA4B;AAAAC;AAAAC;AAAAC;AAAA;ADnCtCkX;;AACEA;;AAIAA;;AAGEA;;AAGEA;;AACEA;;AACAA;;AAIFA;;AAGAA;;AACEA;;AACAA;;AAGFA;;AAGAA;;AACEA;;AACAA;;AAGFA;;AAGAA;;AAQAA;;AACEA;;AACAA;;AAOFA;;AAIAA;;AACEA;;AAyEFA;;AAEAA;;AACAA;;AAGAA;;AACAA;;AAGFA;;AACAA;;AAA+BA;AAAA,qBAAY7X,sBAAZ;AAA8B,aAA9B;;AAA+B6X;;AAChEA;;AAEFA;;;;AAhJsCA;;AAAAA;;AAOjBA;;AAAAA;;AA4BAA;;AAAAA;;AAiGKA;;AAAAA;;AACiBA;;AAAAA;;AAGJA;;AAAAA;;AAKpBA;;AAAAA;;;;;;;qBCtHL,CACV,+DAAQ,cAAR,EAAwB,CACtB,6DAAM,WAAN,EAAmB,6DAAM;AAAEL,kBAAM,EAAE,KAAV;AAAiBrN,qBAAS,EAAE;AAA5B,WAAN,CAAnB,CADsB,EAEtB,6DAAM,UAAN,EAAkB,6DAAM;AAAEqN,kBAAM,EAAE;AAAV,WAAN,CAAlB,CAFsB,EAGtB,kEACE,wBADF,EAEE,+DAAQ,sCAAR,CAFF,CAHsB,CAAxB,CADU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBN4F;;AAAsBA;AAAAA;;AAAA;;AAAA;AAAA;;AACpBA;;AACAA;;AACFA;;;;;;;;AA8BFA;;AACEA;;AAAuBA;AAAAA;;AAAA;;AAAA;AAAA;;AACyBA;;AAClDA;;;;;;AAFuEA;;AAAAA,kGAAuB,QAAvB,EAAuB/U,aAAvB,EAAuB,OAAvB,EAAuBA,YAAvB,EAAuB,cAAvB,EAAuBA,mBAAvB;;;;;;;;AAGvE+U;;AACEA;;AAAiBA;AAAAA;;AAAA;;AAAA;AAAA;;AAC+BA;;AAClDA;;;;;;AAFiEA;;AAAAA,kGAAuB,QAAvB,EAAuBkE,aAAvB,EAAuB,OAAvB,EAAuBA,YAAvB,EAAuB,cAAvB,EAAuBA,mBAAvB;;;;;;;;;;UCb1DC;AAgCX,qCACU3P,WADV,EAEUqE,WAFV,EAGUpE,aAHV,EAIUqE,MAJV,EAI2B;AAAA;;AAHjB;AACA;AACA;AACA;AAnCV,8BAAwB,IAAxB;AACA,2BAAqB,KAArB;AAEA,6BAAc,KAAd,CAgC2B,CA/B3B;AACA;AACA;AACA;;AACA,4BAAoB,EAApB;AACA,8BAAwB,IAAxB,CA0B2B,CAzB3B;;AACA,uBAAQ,WAAR;AACA,kCAA0B,CACxB;AACA,gBAFwB,EAGxB,OAHwB,EAIxB,eAJwB,EAKxB,MALwB,CAA1B;AAWA,wBAAc,EAAd;AAaI;;;;iBAGJ,oBAAQ;AAAA;;AACN,iBAAKE,YAAL,GAAoB,IAApB;AACA,iBAAK2D,YAAL,GAAoB,KAAKlI,aAAL,CAAmB0I,UAAnB,CAA8B,IAAIpB,IAAJ,EAA9B,CAApB;AACA,iBAAKK,YAAL;AACA,iBAAK5H,WAAL,CAAiBoP,cAAjB,GAAkC3e,SAAlC,CAA4C,UAAC4R,SAAD,EAAc;AACxD,qBAAI,CAACA,SAAL,GAAiBA,SAAjB;AACD,aAFD;AAGA,iBAAKuN,IAAL,GAAY,WAAZ;AACD;;;iBAED,oBAAWA,IAAX,EAAuB;AACrB,iBAAKA,IAAL,GAAYA,IAAZ;AACD;;;iBAED,sBAAU;AACR,gBAAM9P,SAAS,GAAG,KAAKwE,MAAL,CAAYG,IAAZ,CAAiBmH,0EAAjB,CAAlB;AAEA9L,qBAAS,CAAC6E,WAAV,GAAwBlU,SAAxB,CAAkC,UAACuQ,MAAD,EAAW,CAC3C;AACD,aAFD;AAGD;;;iBAED,wBAAY;AACV,gBAAMuH,SAAS,GAAG,KAAKtI,aAAL,CAAmBuI,YAAnB,EAAlB;;AACA,oBAAQD,SAAR;AACE;AACA;AACA;AACA,mBAAK,KAAL;AACE,qBAAK4G,KAAL,GAAa,IAAb;AACA,oBAAM3J,IAAI,GAAS,KAAKvF,aAAL,CAAmBE,WAAnB,EAAnB;AACA,qBAAKD,MAAL,GAAcsF,IAAI,CAAC9D,EAAnB;AACA,qBAAKmO,YAAL;AAEA;AACF;AACA;AACA;AACA;;AACA,mBAAK,SAAL;AACE,qBAAKC,MAAL,GAAc,IAAd,CADF,CAEE;;AACA,qBAAKC,cAAL;AACA;;AAEF;AACE;AAtBJ;AAwBD;;;iBAED,0BAAc;AAAA;;AACZ,iBAAK1L,WAAL,CAAiBY,UAAjB;AACA,iBAAKZ,WAAL,CAAiBa,gBAAjB,GAAoCzU,SAApC,CAA8C,UAAC0U,OAAD,EAAY;AACxD,kBAAMG,WAAW,GAAGH,OAAO,CAAC/C,OAAR,CAAgB0B,GAAhB,CAAoB,UAAClX,OAAD,EAAY;AAClD,uBAAO;AAAEgV,sBAAI,EAAEhV,OAAO,CAAC2Y,cAAhB;AAAgC7D,oBAAE,EAAE9U,OAAO,CAAC4Y,IAAR,CAAa9D;AAAjD,iBAAP;AACD,eAFmB,CAApB;AAGA,qBAAI,CAAC4D,WAAL,IAAoB;AAAE5D,kBAAE,EAAE,EAAN;AAAUE,oBAAI,EAAE;AAAhB,eAApB,4BAAwD0D,WAAxD;AACD,aALD;AAMD;;;iBAED,wBAAY;AAAA;;AACV,iBAAKtF,WAAL,CAAiB6P,YAAjB,GAAgCpf,SAAhC,CAA0C,UAACgf,SAAD,EAAc;AACtD,qBAAI,CAACA,SAAL,GAAiBA,SAAjB;AACD,aAFD;AAGD;;;iBAED,sBAAavf,KAAb,EAAkB;AAChB,iBAAKgQ,MAAL,GAAchQ,KAAd;AACA,iBAAKsU,YAAL,GAAoB,IAApB;AACD;;;iBAED,yBAAgBtU,KAAhB,EAAqB;AACnB,iBAAKiY,YAAL,GAAoB,KAAKlI,aAAL,CAAmB0I,UAAnB,CAA8BzY,KAAK,CAACA,KAApC,CAApB;AACA,iBAAKsU,YAAL,GAAoB,IAApB;AACD;;;iBAED,2BAAkB5X,OAAlB,EAAyB;AACvB,iBAAKyV,SAAL,GAAiB,IAAjB;AACA,gBAAM7P,IAAI,GAAG;AACXyQ,kBAAI,EAAErW,OAAO,CAACqW,IAAR,CAAavB,EADR;AAEXwG,2BAAa,EAAE,KAAKC,YAFT;AAGX6H,6BAAe,EAAEpjB,OAAO,CAACqjB,aAHd;AAIXlH,uBAAS,EAAEnc,OAAO,CAACmc;AAJR,aAAb;AAMA,iBAAK/I,WAAL,CAAiBkQ,cAAjB,CAAgC1d,IAAhC;AACD;;;iBAED,yBAAa;AACX,iBAAK2d,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,gBAAI3d,IAAJ;;AACA,gBAAI,KAAKiW,OAAT,EAAkB;AAChBjW,kBAAI,GAAG,KAAKwS,UAAL,CAAgBlB,GAAhB,CAAoB,UAAClX,OAAD,EAAY;;;AACrC,uBAAO;AACLgV,sBAAI,EAAE,aAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEqB,IAAT,MAAa,IAAb,IAAamF,aAAb,GAAa,MAAb,GAAaA,GAAExG,IADhB;AAELsH,0BAAQ,EAAEtc,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEsc,QAFd;AAGL9L,0BAAQ,EAAExQ,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEwQ,QAHd;AAILgT,gCAAc,EAAE,aAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEC,mBAAT,MAA4B,IAA5B,IAA4BC,aAA5B,GAA4B,MAA5B,GAA4BA,GAAE/K,cAJzC;AAKLgL,wBAAM,EAAE3jB,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAE2jB;AALZ,iBAAP;AAOD,eARM,CAAP;AASD,aAVD,MAUO,IAAI,KAAKT,MAAT,EAAiB;AACtBtd,kBAAI,GAAG,KAAKwS,UAAL,CAAgBlB,GAAhB,CAAoB,UAAClX,OAAD,EAAY;;;AACrC,uBAAO;AACL4Y,sBAAI,EAAE5Y,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAE4Y,IADV;AAEL4K,gCAAc,EAAExjB,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEwjB,cAFpB;AAGLxO,sBAAI,EAAEhV,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEqW,IAHV;AAILiG,0BAAQ,EAAEtc,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEsc,QAJd;AAKL9L,0BAAQ,EAAExQ,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEwQ,QALd;AAMLoT,yBAAO,EAAE,aAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEH,mBAAT,MAA4B,IAA5B,IAA4BjI,aAA5B,GAA4B,MAA5B,GAA4BA,GAAE7C,cANlC;AAOLgL,wBAAM,EAAE3jB,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAE2jB;AAPZ,iBAAP;AASD,eAVM,CAAP;AAWD,aAZM,MAYA,IAAI,KAAKpB,KAAT,EAAgB;AACrB3c,kBAAI,GAAG,KAAKwS,UAAL,CAAgBlB,GAAhB,CAAoB,UAAClX,OAAD,EAAY;;;AACrC,uBAAO;AACL4Y,sBAAI,EAAE5Y,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAE4Y,IADV;AAELiL,yBAAO,EAAE7jB,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAE6jB,OAFb;AAGL7O,sBAAI,EAAEhV,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEqW,IAHV;AAILiG,0BAAQ,EAAEtc,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEsc,QAJd;AAKL9L,0BAAQ,EAAExQ,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEwQ,QALd;AAMLoT,yBAAO,EAAE,aAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEH,mBAAT,MAA4B,IAA5B,IAA4BjI,aAA5B,GAA4B,MAA5B,GAA4BA,GAAE7C,cANlC;AAOLgL,wBAAM,EAAE3jB,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAE2jB;AAPZ,iBAAP;AASD,eAVM,CAAP;AAWD,aArCU,CAsCX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,iBAAKtQ,aAAL,CAAmByQ,WAAnB,CAA+Ble,IAA/B,EAAqC,cAArC,EAAqD,KAAKsZ,gBAA1D;AACA,iBAAKqE,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACD;;;;;;;yBArLUR,qBAAkBnE;AAAA;;;cAAlBmE;AAAkB5iB;AAAAqE;AAAA;sEAsClB8a,6DAAO;;;;;;;;;;;;;;ADrEpBV;;AACEA;;AACEA;;AACEA;;AACEA;;AAAIA;;;;AAAqBA;;AAEzBA;;AAIFA;;AACFA;;AACAA;;AAEEA;;AAC8BA;AAAA,qBAAgBpd,wBAAhB;AAAoC,aAApC,EAAqC,aAArC,EAAqC;AAAA,qBAAgBA,mBAAhB;AAA+B,aAApE,EAAqC,SAArC,EAAqC;AAAA,qBAChCA,2BADgC;AACT,aAD5B;;AAC8Bod;;AAa5DA;;AACEA;;AACEA;;AAAgDA;AAAA,qBAASpd,eAAW,WAAX,CAAT;AAAgC,aAAhC;;AAAmDod;;AACxFA;;AACbA;;AACAA;;AACEA;;AAA2CA;AAAA,qBAASpd,eAAW,MAAX,CAAT;AAA2B,aAA3B;;AAA8Cod;;AAClFA;;AACTA;;AACFA;;AACAA;;AAIAA;;AAOFA;;AACFA;;AACFA;;;;AAhDYA;;AAAAA;;AAEKA;;AAAAA;;AAQUA;;AAAAA,yFAAmB,cAAnB,EAAmBpd,gBAAnB,EAAmB,aAAnB,EAAmBA,eAAnB,EAAmB,aAAnB,EAAmBA,eAAnB,EAAmB,aAAnB,EAAmB,KAAnB;;AAiBdod;;AAAAA;;AAIAA;;AAAAA;;AAIQA;;AAAAA;;AAIAA;;AAAAA;;;;;;;qBCvBP,CACV,+DAAQ,cAAR,EAAwB,CACtB,6DAAM,WAAN,EAAmB,6DAAM;AAAE5F,kBAAM,EAAE,KAAV;AAAiBrN,qBAAS,EAAE;AAA5B,WAAN,CAAnB,CADsB,EAEtB,6DAAM,UAAN,EAAkB,6DAAM;AAAEqN,kBAAM,EAAE;AAAV,WAAN,CAAlB,CAFsB,EAGtB,kEACE,wBADF,EAEE,+DAAQ,sCAAR,CAFF,CAHsB,CAAxB,CADU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBZK;;AACEA;;AACFA;;;;;;AASMA;;AAAuDA;;AAAKA;;;;;;AAC5DA;;AACEA;;AACAA;;;;AACFA;;;;;;AAFuCA;;AAAAA,8NAA4B,KAA5B,EAA4B6I,oFAA5B;;AACrC7I;;AAAAA;;;;;;AAMFA;;AAAuDA;;AAAMA;;;;;;AAC7DA;;AACEA;;;;AACFA;;;;;;AADEA;;AAAAA;;;;;;AAMFA;;AAAuCA;;AAAMA;;;;;;AAC7CA;;AAAwCA;;AAAoCA;;;;;;AAApCA;;AAAAA;;;;;;AAKxCA;;AAAuCA;;AAAOA;;;;;;AAC9CA;;AACEA;;AACFA;;;;;;AADEA;;AAAAA;;;;;;AAHJA;;AACEA;;AACAA;;AAGFA;;;;;;AAIEA;;;;;;;;AACAA;;AACEA;;AAAQA;AAAA;;AAAA;;AAAA;;AAAA,uFAAyD,IAAzD,GAA6D8I,WAA7D;AAA6D,WAA7D;;AAEN9I;;AAAUA;;AAAWA;;AACvBA;;AAEFA;;;;;;AAkDkBA;;AAAqEA;;AACrEA;;;;;;AAD+CA;;AAAsBA;;AAAAA;;;;;;AAc1DA;;;;;;;;AAJvBA;;AACEA;;AAEEA;;AAAuCA;AAAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpBA;;AAA8DA;;AAAMA;;AACzFA;;AACFA;;;;;;AAHYA;;AAAAA;;AAC6CA;;AAAAA;;;;;;AA1D/DA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACAA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACAA;;AACEA;;;;AACFA;;AACAA;;AACEA;;AACFA;;AACAA;;AACEA;;AAAgBA;;AAAQA;;AACxBA;;AACEA;;;;AACFA;;AACFA;;AACAA;;AACEA;;AAAgBA;;AAAMA;;AACtBA;;AACEA;;;;AACFA;;AACFA;;AACFA;;AAEAA;;AACEA;;AAAWA;;AAAKA;;AAChBA;;AAA2BA;AAAA;AAAA;AAAA;;AAA3BA;;AACFA;;AAEAA;;AACEA;;AAAWA;;AAASA;;AACpBA;;AAAYA;AAAA;AAAA;AAAA;;AAEVA;;AAEFA;;AACFA;;AAEFA;;AACFA;;AACFA;;AAEFA;;AACAA;;AAOFA;;AACFA;;AACFA;;;;;;;;AA/DuCA;;AACDA;;AAAAA;;AAKrBA;;AAAAA,8NAA4B,KAA5B,EAA4B+I,oFAA5B;;AAUC/I;;AAAAA;;AAGAA;;AAAAA;;AAKEA;;AAAAA;;AAMAA;;AAAAA;;AAOGA;;AAAAA,+FAAmB,SAAnB,EAAmB+I,yBAAnB;;AAKK/I;;AAAAA;;AAEuBA;;AAAAA;;AAUvCA;;AAAAA;;;;;;AAYdA;;;;;;AACAA;;;;;;;;AACEA;;;;;;AAEFA;;;;;;AACAA;;AACEA;;AAA0EA;;AAAkBA;;AAC9FA;;;;;;AADmCA;;AAAAA;;;;;;;;UC7F5B0K;AAqBX,sCACU3Q,WADV,EAEUkP,mBAFV,EAEkD;AAAA;;AADxC;AACA;AAlBiB,iCAAkB,IAAIjJ,uDAAJ,EAAlB;AAE3B,kCAA0B,CACxB;AACA,gBAFwB,EAGxB,OAHwB,EAIxB,eAJwB,EAKxB,MALwB,CAA1B;AAiBI;;;;iBAEJ,oBAAQ;AAAA;;AACN,iBAAKkJ,KAAL,GAAa,KAAKrD,gBAAL,GAAwB,CAAC,MAAD,EAAS,OAAT,EAAkB,eAAlB,EAAmC,MAAnC,CAArC,GAAiF,KAAKA,gBAAL,GAAwB,CAAC,MAAD,EAAS,OAAT,EAAkB,eAAlB,EAAmC,QAAnC,EAA6C,MAA7C,CAAzG;AACA,iBAAK9L,WAAL,CAAiBoP,cAAjB,GAAkC3e,SAAlC,CAA4C,UAAC4R,SAAD,EAAc;AACxD,qBAAI,CAACA,SAAL,GAAiBA,SAAjB;AACD,aAFD;AAGD;;;iBAED,qBAAYgN,OAAZ,EAAkC;AAChC,iBAAKuB,aAAL,GADgC,CAEhC;AACA;AACD;;;iBAED,yBAAa;AAAA;;AACX,iBAAKpM,YAAL,GAAoB,IAApB;AACA,iBAAKxE,WAAL,CACG4Q,aADH,CAEI,KAAK1Q,MAFT,EAGI,KAAKiI,YAHT,EAII,KAAKvD,QAJT,EAKI,KAAKC,SALT,EAOGpU,SAPH,CAOa,UAACogB,UAAD,EAAe;AACxB,qBAAI,CAAC7L,UAAL,GAAkB6L,UAAU,CAACzO,OAAX,CAAmB0B,GAAnB,CAAuB,UAAClX,OAAD,EAAY;AACnD,uBAAO;AACLqW,sBAAI,EAAErW,OADD;AAELqjB,+BAAa,EAAE,CAFV;AAGLD,iCAAe,EAAE;AAHZ,iBAAP;AAKD,eANiB,CAAlB;AAOA,qBAAI,CAAClL,MAAL,GAAc+L,UAAU,CAAC9L,KAAzB;AACA,qBAAI,CAACP,YAAL,GAAoB,KAApB;AACD,aAjBH;AAkBD;;;iBAED,oBAAWtU,KAAX,EAAyD;AACvD,iBAAK0U,QAAL,GAAgB1U,KAAK,CAAC0U,QAAtB;AACA,iBAAKC,SAAL,GAAiB3U,KAAK,CAAC2U,SAAvB;AACA,iBAAK+L,aAAL;AACA,iBAAKpM,YAAL,GAAoB,IAApB;AACD;;;iBAED,2BAAkB5X,OAAlB,EAAyB;AACvB,gBAAIA,OAAO,CAACmc,SAAR,IAAqBnc,OAAO,CAACqjB,aAAjC,EAAgD;AAC9C,mBAAKV,eAAL,CAAqBpM,IAArB,CAA0BvW,OAA1B;AACD,aAFD,MAEO;AACL,mBAAKsiB,mBAAL,CAAyBM,OAAzB,CACE,SADF,EAEE,sDAFF;AAID;AACF;;;;;;;yBA7EUmB,sBAAmB1K;AAAA;;;cAAnB0K;AAAmB5jB;AAAAsB;AAAA8gB;AAAAhH;AAAAjI;AAAAuP;AAAA;AAAA9d;AAAA4d;AAAA;AAAAviB;AAAA4B;AAAAC;AAAAC;AAAAC;AAAA;ADnChCkX;;AACEA;;AAIAA;;AAGEA;;AAGEA;;AACEA;;AACAA;;AAIFA;;AAGAA;;AACEA;;AACAA;;AAGFA;;AAGAA;;AACEA;;AACAA;;AACFA;;AAGAA;;AAQAA;;AACEA;;AACAA;;AAOFA;;AAIAA;;AACEA;;AAgEFA;;AAEAA;;AACAA;;AAGAA;;AACAA;;AAGFA;;AACAA;;AAA+BA;AAAA,qBAAY7X,sBAAZ;AAA8B,aAA9B;;AAA+B6X;;AAChEA;;AAEFA;;;;AArIsCA;;AAAAA;;AAOjBA;;AAAAA;;AA0BAA;;AAAAA;;AAwFKA;;AAAAA;;AACiBA;;AAAAA;;AAGJA;;AAAAA;;AAKpBA;;AAAAA;;;;;;;qBC3GL,CACV,+DAAQ,cAAR,EAAwB,CACtB,6DAAM,WAAN,EAAmB,6DAAM;AAAEL,kBAAM,EAAE,KAAV;AAAiBrN,qBAAS,EAAE;AAA5B,WAAN,CAAnB,CADsB,EAEtB,6DAAM,UAAN,EAAkB,6DAAM;AAAEqN,kBAAM,EAAE;AAAV,WAAN,CAAlB,CAFsB,EAGtB,kEACE,wBADF,EAEE,+DAAQ,sCAAR,CAFF,CAHsB,CAAxB,CADU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXN5G;;AAAyEA;;AACzEA;;;;;;AADsDA;;AAAmBA;;AAAAA;;;;UCHpE8R;AAEX,0CACU9Q,WADV,EAESF,SAFT,EAEyD;AAAA;;AAD/C;AACD;AACL;;;;iBAEJ,oBAAQ;AACN,iBAAK+P,YAAL;AACD;;;iBAED,wBAAY;AAAA;;AACV,iBAAK7P,WAAL,CAAiB6P,YAAjB,GAAgCpf,SAAhC,CAA0C,UAACgf,SAAD,EAAc;AACtD,qBAAI,CAACA,SAAL,GAAiBA,SAAjB;AACD,aAFD;AAGD;;;iBAED,kBAAS7hB,KAAT,EAAqC;AACnC,iBAAKkS,SAAL,CAAejO,KAAf,CAAqBjE,KAAK,CAACsC,KAAN,CAAYwR,EAAjC;AACD;;;;;;;yBAnBUoP,0BAAuB9R;AAAA;;;cAAvB8R;AAAuB/jB;AAAA6B;AAAAC;AAAAC;AAAAC;AAAA;ADVpCiQ;;AACEA;;AACEA;;AAAUA;;AAAKA;;AACjBA;;AAEFA;;AACAA;;AACEA;;AACEA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAyCA;AAAA,qBAAU5Q,oBAAV;AAA0B,aAA1B;;AACvC4Q;;AAEFA;;AACFA;;AACFA;;AACFA;;;;AALgDA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UENnC+R;AAEX,gCAAoBzM,MAApB,EAAqC;AAAA;;AAAjB;AAAqB;;;;iBAGzC,6BAAsF;AAAA,gBAApE/C,KAAoE,uEAA9D,eAA8D;AAAA,gBAA7CyP,OAA6C,uEAAnC,mCAAmC;AACpF,mBAAO,KAAK1M,MAAL,CAAYG,IAAZ,CAAiBwM,uGAAjB,EAAyC;AAC9C;AACA;AACA9G,0BAAY,EAAE,IAHgC;AAI9C;AACA3X,kBAAI,EAAE;AACJ+O,qBAAK,EAAEA,KADH;AAEJyP,uBAAO,EAAEA;AAFL;AALwC,aAAzC,CAAP;AAUD;;;;;;;yBAhBUD,gBAAa/R;AAAA;;;eAAb+R;AAAavhB,iBAAbuhB,cAAa;AAAAxhB,oBAFZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCQD2hB;AA2BX,8BACUC,IADV,EAEUjC,mBAFV,EAEkD;AAAA;;AADxC;AACA;AA5BF,wBAASkC,sEAAT;AAEA,oCAAqB,IAAIC,yCAAJ,EAArB;AACA,+BAAmC,IAAIC,qEAAJ,EAAnC;AACA,uCAAwB,IAAID,yCAAJ,EAAxB;AACA,gCAAoC,IAAIC,qEAAJ,EAApC;AACA,wCAAyB,IAAID,yCAAJ,EAAzB;AACA,2BAA+B,IAAIC,qEAAJ,EAA/B;AACA,mCAAoB,IAAID,yCAAJ,EAApB;AACA,yBAA6B,IAAIC,qEAAJ,EAA7B;AACA,iCAAkB,IAAID,yCAAJ,EAAlB;AACA,uBAA2B,IAAIC,qEAAJ,EAA3B;AACA,+BAAgB,IAAID,yCAAJ,EAAhB;AACA,4BAAgC,IAAIC,qEAAJ,EAAhC;AACA,oCAAqB,IAAID,yCAAJ,EAArB;AACA,qCAAsB,IAAIA,yCAAJ,EAAtB;AACA,oCAAqB,IAAIA,yCAAJ,EAArB;AACA,qCAAsB,IAAIA,yCAAJ,EAAtB;AAEA,oCAAqB,IAAIA,yCAAJ,EAArB;AAKA,mCAAoB,IAAIA,yCAAJ,EAApB;AAKJ;;;;iBAEJ,oBAAWpO,IAAX,EAAe;AAAA;;AACb,iBAAKkO,IAAL,CAAUI,IAAV,WAAkB,KAAKC,MAAvB,kBAA4CvO,IAA5C,EAAkDxS,SAAlD,CACE,UAACghB,QAAD,EAAa;AACX,qBAAI,CAACvC,mBAAL,CAAyBwC,IAAzB;;AACA,qBAAI,CAACC,kBAAL,CAAwBne,IAAxB,CAA6B,IAA7B;AACD,aAJH,EAKE,UAACoe,GAAD,EAAQ;AACN,qBAAI,CAACD,kBAAL,CAAwBne,IAAxB,CAA6B,KAA7B;;AACA,qBAAI,CAAC0b,mBAAL,CAAyBM,OAAzB;AACD,aARH;AAUA,mBAAO,KAAKmC,kBAAL,CAAwBE,YAAxB,EAAP;AACD;;;iBAED,kBAAS5O,IAAT,EAAa;AAAA;;AACX,iBAAKkO,IAAL,CAAUW,KAAV,WAAmB,KAAKN,MAAxB,wBAA4CvO,IAAI,CAACvB,EAAjD,QAAwDuB,IAAxD,EAA8DxS,SAA9D,CACE,UAACghB,QAAD,EAAa;AACX,qBAAI,CAACvC,mBAAL,CAAyBwC,IAAzB;;AACA,qBAAI,CAACC,kBAAL,CAAwBne,IAAxB,CAA6B,IAA7B;AACD,aAJH,EAKE,UAACoe,GAAD,EAAQ;AACN,qBAAI,CAAC1C,mBAAL,CAAyBM,OAAzB;;AACA,qBAAI,CAACmC,kBAAL,CAAwBne,IAAxB,CAA6B,KAA7B;AACD,aARH;AAUA,mBAAO,KAAKme,kBAAL,CAAwBE,YAAxB,EAAP;AACD;;;iBAED,uBAAc3Q,KAAd,EAAqB+B,IAArB,EAAyB;AAAA;;AACvB,iBAAKkO,IAAL,CAAUW,KAAV,WAAmB,KAAKN,MAAxB,wBAA4CvO,IAAI,CAACvB,EAAjD,QAAwDR,KAAxD,EAA+DzQ,SAA/D,CACE,UAACghB,QAAD,EAAa;AACX,qBAAI,CAACvC,mBAAL,CAAyBwC,IAAzB;;AACA,qBAAI,CAACK,mBAAL,CAAyBve,IAAzB,CAA8B,IAA9B;AACD,aAJH,EAKE,UAACoe,GAAD,EAAQ;AACN,qBAAI,CAAC1C,mBAAL,CAAyBM,OAAzB;;AACA,qBAAI,CAACuC,mBAAL,CAAyBve,IAAzB,CAA8B,KAA9B;AACD,aARH;AAUA,mBAAO,KAAKue,mBAAL,CAAyBF,YAAzB,EAAP;AACD;;;iBAED,oBAAW5O,IAAX,EAAe;AAAA;;AACb,iBAAKkO,IAAL,qBAAoB,KAAKK,MAAzB,wBAA6CvO,IAAI,CAACvB,EAAlD,QAAyDjR,SAAzD,CACE,UAACghB,QAAD,EAAa;AACX,qBAAI,CAACvC,mBAAL,CAAyB8C,MAAzB,CAAgC,QAAhC,EAA0C,4BAA1C;;AACA,qBAAI,CAACL,kBAAL,CAAwBne,IAAxB,CAA6B,IAA7B;AACD,aAJH,EAKE,UAACoe,GAAD,EAAQ;AACN,qBAAI,CAAC1C,mBAAL,CAAyB8C,MAAzB,CAAgC,cAAhC,EAAgD,kBAAhD;;AACA,qBAAI,CAACL,kBAAL,CAAwBne,IAAxB,CAA6B,KAA7B;AACD,aARH;AAUA,mBAAO,KAAKme,kBAAL,CAAwBE,YAAxB,EAAP;AACD;;;iBAED,kBAAS3R,MAAT,EAA8D;AAAA;;AAAA,gBAA7C8B,QAA6C,uEAAlC,IAAkC;AAAA,gBAA5B4C,QAA4B,uEAAjB,EAAiB;AAAA,gBAAbC,SAAa,uEAAD,CAAC;AAC5D,gBAAMoN,KAAK,oBAAarN,QAAb,qBAAgCC,SAAhC,SACT3E,MAAM,GAAG,YAAYA,MAAf,GAAwB,EADrB,SAER8B,QAAQ,GAAG,eAAeA,QAAlB,GAA6B,EAF7B,CAAX;AAGA,iBAAKmP,IAAL,CACG5Q,GADH,WAC6B,KAAKiR,MADlC,wBACsDS,KADtD,GAEGxhB,SAFH,CAGI,UAACyhB,GAAD,EAAQ;AACN,qBAAI,CAACjI,KAAL,GAAaiI,GAAb;;AACA,qBAAI,CAACC,aAAL,CAAmB3e,IAAnB,CAAuBmP,kBAAM,OAAI,CAACsH,KAAX,CAAvB;AACD,aANL,EAOI,UAAC2H,GAAD,EAAQ,CAAG,CAPf;AASD;;;iBAED,uBAAc1R,MAAd,EAAsBgI,aAAtB,EAAiE;AAAA;;AAAA,gBAA5BtD,QAA4B,uEAAjB,EAAiB;AAAA,gBAAbC,SAAa,uEAAD,CAAC;AAC/D,gBAAMoN,KAAK,oBAAarN,QAAb,qBAAgCC,SAAhC,SACTqD,aAAa,GAAG,oBAAoBA,aAAvB,GAAuC,EAD3C,SAERhI,MAAM,GAAG,aAAaA,MAAhB,GAAyB,EAFvB,CAAX;AAGA,iBAAKiR,IAAL,CACG5Q,GADH,WAC6B,KAAKiR,MADlC,kCACgES,KADhE,GAEGxhB,SAFH,CAGI,UAACyhB,GAAD,EAAQ;AACN,qBAAI,CAACrB,UAAL,GAAkBqB,GAAlB;;AACA,qBAAI,CAACE,kBAAL,CAAwB5e,IAAxB,CAA4BmP,kBAAM,OAAI,CAACkO,UAAX,CAA5B;AACD,aANL,EAOI,UAACe,GAAD,EAAQ,CAAG,CAPf;AAUA,mBAAO,KAAKQ,kBAAL,CAAwBP,YAAxB,EAAP;AACD;;;iBAED,iCAAqB;AACnB,mBAAO,KAAKM,aAAL,CAAmBN,YAAnB,EAAP;AACD;;;iBAED,wBAAe7P,QAAf,EAAuB;AAAA;;AACrB,iBAAKmP,IAAL,CAAUI,IAAV,WAAkB,KAAKC,MAAvB,sBAAgDxP,QAAhD,EAA0DvR,SAA1D,CACE,UAACghB,QAAD,EAAa;AACX,qBAAI,CAACvC,mBAAL,CAAyBmD,OAAzB,CAAiC,SAAjC,EAA4C,qBAA5C;;AACA,qBAAI,CAACV,kBAAL,CAAwBne,IAAxB,CAA6B,IAA7B;AACD,aAJH,EAKE,UAACoe,GAAD,EAAQ;AACN,qBAAI,CAACD,kBAAL,CAAwBne,IAAxB,CAA6B,KAA7B;AACD,aAPH;AASA,mBAAO,KAAKme,kBAAL,CAAwBE,YAAxB,EAAP;AACD;;;iBAED,sBAAa7P,QAAb,EAAqB;AAAA;;AACnB,iBAAKmP,IAAL,CACGW,KADH,WACY,KAAKN,MADjB,4BACyCxP,QAAQ,CAACN,EADlD,QACyDM,QADzD,EAEGvR,SAFH,CAGI,UAACghB,QAAD,EAAa;AACX,qBAAI,CAACE,kBAAL,CAAwBne,IAAxB,CAA6B,IAA7B;AACD,aALL,EAMI,UAACoe,GAAD,EAAQ;AACN,qBAAI,CAACD,kBAAL,CAAwBne,IAAxB,CAA6B,KAA7B;AACD,aARL;AAUA,mBAAO,KAAKme,kBAAL,CAAwBE,YAAxB,EAAP;AACD;;;iBAED,sBAAaS,SAAb,EAAoD;AAAA;;AAAA,gBAA5B1N,QAA4B,uEAAjB,EAAiB;AAAA,gBAAbC,SAAa,uEAAD,CAAC;AAClD,gBAAMoN,KAAK,cACTK,SAAS,GAAG,YAAYA,SAAf,GAA2B,EAD3B,oBAED1N,QAFC,qBAEkBC,SAFlB,CAAX;AAGA,iBAAKsM,IAAL,CACG5Q,GADH,WAC6B,KAAKiR,MADlC,4BAC0DS,KAD1D,GAEGphB,IAFH,CAGI,qDAAI,UAACqhB,GAAD,EAAQ;AACV,qBAAOA,GAAP;AACD,aAFD,CAHJ,EAMI,6DAAY,CAAZ,CANJ,EAQGzhB,SARH,CASI,UAACyhB,GAAD,EAAQ;AACN,qBAAI,CAACtI,UAAL,GAAkBsI,GAAlB;;AACA,qBAAI,CAACK,kBAAL,CAAwB/e,IAAxB,CAA4BmP,kBAAM,OAAI,CAACiH,UAAX,CAA5B;AACD,aAZL,EAaI,UAACgI,GAAD,EAAQ,CAAG,CAbf;AAeD;;;iBAED,wBAAe5P,QAAf,EAAuB;AAAA;;AACrB,iBAAKmP,IAAL,qBAAoB,KAAKK,MAAzB,4BAAiDxP,QAAQ,CAACN,EAA1D,QAAiEjR,SAAjE,CACE,UAACghB,QAAD,EAAa;AACX,qBAAI,CAACvC,mBAAL,CAAyB8C,MAAzB,CACE,QADF,EAEE,gCAFF;;AAIA,qBAAI,CAACL,kBAAL,CAAwBne,IAAxB,CAA6B,IAA7B;AACD,aAPH,EAQE,UAACoe,GAAD,EAAQ;AACN,qBAAI,CAAC1C,mBAAL,CAAyB8C,MAAzB,CAAgC,cAAhC,EAAgD,kBAAhD;;AACA,qBAAI,CAACL,kBAAL,CAAwBne,IAAxB,CAA6B,KAA7B;AACD,aAXH;AAaA,mBAAO,KAAKme,kBAAL,CAAwBE,YAAxB,EAAP;AACD;;;iBAED,uCAA2B;AACzB,mBAAO,KAAKU,kBAAL,CAAwBV,YAAxB,EAAP;AACD;;;iBAED,4BAAmB7P,QAAnB,EAA2B;AAAA;;AACzB,iBAAKmP,IAAL,CAAUI,IAAV,WAAkB,KAAKC,MAAvB,0BAAoDxP,QAApD,EAA8DvR,SAA9D,CACE,UAACghB,QAAD,EAAa;AACX,qBAAI,CAACvC,mBAAL,CAAyBmD,OAAzB,CAAiC,SAAjC,EAA4C,0BAA5C;;AACA,qBAAI,CAACV,kBAAL,CAAwBne,IAAxB,CAA6B,IAA7B;AACD,aAJH,EAKE,UAACoe,GAAD,EAAQ;AACN,qBAAI,CAACD,kBAAL,CAAwBne,IAAxB,CAA6B,KAA7B;AACD,aAPH;AASA,mBAAO,KAAKme,kBAAL,CAAwBE,YAAxB,EAAP;AACD;;;iBAED,0BAAiB7P,QAAjB,EAAyB;AAAA;;AACvB,iBAAKmP,IAAL,CACGW,KADH,WACY,KAAKN,MADjB,gCAC6CxP,QAAQ,CAACN,EADtD,QAC6DM,QAD7D,EAEGvR,SAFH,CAGI,UAACghB,QAAD,EAAa;AACX,qBAAI,CAACE,kBAAL,CAAwBne,IAAxB,CAA6B,IAA7B;AACD,aALL,EAMI,UAACoe,GAAD,EAAQ;AACN,qBAAI,CAACD,kBAAL,CAAwBne,IAAxB,CAA6B,KAA7B;AACD,aARL;AAUA,mBAAO,KAAKme,kBAAL,CAAwBE,YAAxB,EAAP;AACD;;;iBAED,4BAA6C;AAAA;;AAAA,gBAA5BjN,QAA4B,uEAAjB,EAAiB;AAAA,gBAAbC,SAAa,uEAAD,CAAC;AAC3C;AACA,gBAAMoN,KAAK,oBAAarN,QAAb,qBAAgCC,SAAhC,CAAX;AACA,iBAAKsM,IAAL,CACG5Q,GADH,WAC6B,KAAKiR,MADlC,gCAC8DS,KAD9D,GAEGxhB,SAFH,CAGI,UAACyhB,GAAD,EAAQ;AACN,qBAAI,CAACrO,aAAL,GAAqBqO,GAArB;;AACA,qBAAI,CAACM,qBAAL,CAA2Bhf,IAA3B,CAA+BmP,kBAAM,OAAI,CAACkB,aAAX,CAA/B;AACD,aANL,EAOI,UAAC+N,GAAD,EAAQ,CAAG,CAPf;AASD;;;iBAED,2CAA+B;AAC7B,mBAAO,KAAKY,qBAAL,CAA2BX,YAA3B,EAAP;AACD;;;iBAED,gCAAoB,CAAK;;;iBAEzB,2BAAkBjN,QAAlB,EAA4BC,SAA5B,EAAqC;AAAA;;AACnC;AACA,gBAAMoN,KAAK,oBAAarN,QAAb,qBAAgCC,SAAhC,CAAX;AACA,iBAAKsM,IAAL,CACG5Q,GADH,WAC6B,KAAKiR,MADlC,kCACgES,KADhE,GAEGxhB,SAFH,CAGI,UAACyhB,GAAD,EAAQ;AACN,qBAAI,CAACO,cAAL,GAAsBP,GAAtB;;AACA,qBAAI,CAACQ,sBAAL,CAA4Blf,IAA5B,CAAgCmP,kBAAM,OAAI,CAAC8P,cAAX,CAAhC;AACD,aANL,EAOI,UAACb,GAAD,EAAQ,CAAG,CAPf;AASD;;;iBAED,4CAAgC;AAC9B,mBAAO,KAAKc,sBAAL,CAA4Bb,YAA5B,EAAP;AACD;;;iBAED,wBAAerf,IAAf,EAAmB;AAAA;;AACjB,iBAAKmgB,mBAAL,CAAyBnf,IAAzB,CAA8B,IAA9B;AACA,iBAAK2d,IAAL,CAAUI,IAAV,WAAkB,KAAKC,MAAvB,sBAAgDhf,IAAhD,EAAsD/B,SAAtD,CACE,UAACghB,QAAD,EAAa;AACX,qBAAI,CAACkB,mBAAL,CAAyBnf,IAAzB,CAA8B,KAA9B;;AACA,qBAAI,CAAC0b,mBAAL,CAAyBmD,OAAzB;AACD,aAJH,EAKE,UAACT,GAAD,EAAQ;AACN,qBAAI,CAAC1C,mBAAL,CAAyB8C,MAAzB;AACD,aAPH;AASD;;;iBAED,0BAAc;AACZ,mBAAO,KAAKW,mBAAL,CAAyBd,YAAzB,EAAP;AACD;;;iBAED,wBAAY;AAAA;;AACV,iBAAKV,IAAL,CACG5Q,GADH,WAC8B,KAAKiR,MADnC,sBAEG3gB,IAFH,CAGI,qDAAI,UAACqhB,GAAD,EAAQ;AACV,qBAAOA,GAAP;AACD,aAFD,CAHJ,EAMI,6DAAY,CAAZ,CANJ,EAQGzhB,SARH,CASI,UAACgf,SAAD,EAAc;AACZrK,qBAAO,CAACC,GAAR,CAAYoK,SAAZ;AACA,qBAAI,CAACA,SAAL,GAAiBA,SAAS,CAACrN,OAA3B;;AACA,qBAAI,CAACwQ,iBAAL,CAAuBpf,IAAvB,oBAAgC,OAAI,CAACic,SAArC;AACD,aAbL,EAcI,UAACmC,GAAD,EAAQ;AACN,qBAAI,CAACgB,iBAAL,CAAuBpf,IAAvB,CAA4B,EAA5B;AACD,aAhBL;AAkBA,mBAAO,KAAKof,iBAAL,CAAuBf,YAAvB,EAAP;AACD;;;iBAED,sBAAa3R,MAAb,EAAqBgI,aAArB,EAAgE;AAAA;;AAAA,gBAA5BtD,QAA4B,uEAAjB,EAAiB;AAAA,gBAAbC,SAAa,uEAAD,CAAC;AAC9D,gBAAMoN,KAAK,oBAAarN,QAAb,qBAAgCC,SAAhC,SACTqD,aAAa,GAAG,oBAAoBA,aAAvB,GAAuC,EAD3C,SAERhI,MAAM,GAAG,aAAaA,MAAhB,GAAyB,EAFvB,CAAX;AAGA,iBAAKiR,IAAL,CACG5Q,GADH,WAC6B,KAAKiR,MADlC,4BAC0DS,KAD1D,GAEGxhB,SAFH,CAGI,UAACyhB,GAAD,EAAQ;AACN,qBAAI,CAAC9L,SAAL,GAAiB8L,GAAjB;;AACA,qBAAI,CAACW,iBAAL,CAAuBrf,IAAvB,CAA2BmP,kBAAM,OAAI,CAACyD,SAAX,CAA3B;AACD,aANL,EAOI,UAACwL,GAAD,EAAQ;AACNxM,qBAAO,CAACC,GAAR,CAAYuM,GAAG,CAACkB,KAAhB;AACD,aATL;AAWD;;;iBAED,yBAAgB7P,IAAhB,EAAoB;AAAA;;AAClB,iBAAKkO,IAAL,qBAAoB,KAAKK,MAAzB,4BAAiDvO,IAAI,CAACvB,EAAtD,QAA6DjR,SAA7D,CACE,UAACghB,QAAD,EAAa;AACX,qBAAI,CAACE,kBAAL,CAAwBne,IAAxB,CAA6B,IAA7B;;AACA,qBAAI,CAAC0b,mBAAL,CAAyB8C,MAAzB,CACE,SADF,EAEE,iCAFF;AAID,aAPH,EAQE,UAACJ,GAAD,EAAQ;AACN,qBAAI,CAACD,kBAAL,CAAwBne,IAAxB,CAA6B,KAA7B;;AACA,qBAAI,CAAC0b,mBAAL,CAAyB8C,MAAzB,CAAgC,cAAhC,EAAgD,kBAAhD;AACD,aAXH;AAaA,mBAAO,KAAKL,kBAAL,CAAwBE,YAAxB,EAAP;AACD;;;iBAED,0BACE3R,MADF,EAEE8B,QAFF,EAGEkG,aAHF,EAIEa,SAJF,EAMe;AAAA;;AAAA,gBADbnE,QACa,uEADF,GACE;AAAA,gBAAbC,SAAa,uEAAD,CAAC;AAEb,gBAAMoN,KAAK,oBAAarN,QAAb,qBAAgCC,SAAhC,SACTqD,aAAa,GAAG,oBAAoBA,aAAvB,GAAuC,EAD3C,SAERlG,QAAQ,GAAG,eAAeA,QAAlB,GAA6B,EAF7B,SAGT9B,MAAM,GAAG,aAAaA,MAAhB,GAAyB,EAHtB,SAIR6I,SAAS,GAAG,gBAAgBA,SAAnB,GAA+B,EAJhC,CAAX;AAKA,iBAAKoI,IAAL,CACG5Q,GADH,WAC6B,KAAKiR,MADlC,4BAC0DS,KAD1D,GAEGphB,IAFH,CAEQ,8DAFR,EAGGJ,SAHH,CAII,UAACyhB,GAAD,EAAQ;AACN,qBAAI,CAAC9L,SAAL,GAAiB8L,GAAjB;;AACA,qBAAI,CAACW,iBAAL,CAAuBrf,IAAvB,CAA2BmP,kBAAM,OAAI,CAACyD,SAAX,CAA3B;AACD,aAPL,EAQI,UAACwL,GAAD,EAAQ;AACN,qBAAI,CAACxL,SAAL,GAAiB,IAAIkL,qEAAJ,EAAjB;AACA,qBAAI,CAAClL,SAAL,CAAehE,OAAf,GAAyB,EAAzB;;AACA,qBAAI,CAACyQ,iBAAL,CAAuBrf,IAAvB,CAA2BmP,kBAAM,OAAI,CAACyD,SAAX,CAA3B;AACD,aAZL;AAcD;;;iBAED,uCAA2B;AACzB,mBAAO,KAAKyM,iBAAL,CAAuBhB,YAAvB,EAAP;AACD;;;iBAED,4BAAgB,CAAK;;;iBAErB,uBAAcjN,QAAd,EAAwBC,SAAxB,EAAiC;AAAA;;AAC/B;AACA,gBAAMoN,KAAK,oBAAarN,QAAb,qBAAgCC,SAAhC,CAAX;AACA,iBAAKsM,IAAL,CACG5Q,GADH,WAC6B,KAAKiR,MADlC,yBACuDS,KADvD,GAEGxhB,SAFH,CAGI,UAACyhB,GAAD,EAAQ;AACN,qBAAI,CAACa,OAAL,GAAeb,GAAf;;AACA,qBAAI,CAACc,eAAL,CAAqBxf,IAArB,CAAyBmP,kBAAM,OAAI,CAACoQ,OAAX,CAAzB;AACD,aANL,EAOI,UAACnB,GAAD,EAAQ,CAAG,CAPf;AASD;;;iBAED,gCAAoB;AAClB,mBAAO,KAAKoB,eAAL,CAAqBnB,YAArB,EAAP;AACD;;;iBAED,yBAAa;AAAA;;AACX,iBAAKV,IAAL,CAAU5Q,GAAV,WAAiB,KAAKiR,MAAtB,+BAAwD/gB,SAAxD,CACE,UAACghB,QAAD,EAAkB;AAChB,qBAAI,CAAC3J,UAAL,GAAkB2J,QAAlB;;AACA,qBAAI,CAACwB,kBAAL,CAAwBzf,IAAxB,CAA4BmP,kBAAM,OAAI,CAACmF,UAAX,CAA5B;AACD,aAJH,EAKE,UAAC8J,GAAD,EAAQ,CAAG,CALb;AAQA,mBAAO,KAAKqB,kBAAL,CAAwBpB,YAAxB,EAAP;AACD;;;;;;;yBA1YUX,cAAWgC;AAAA;;;eAAXhC;AAAW1hB,iBAAX0hB,YAAW;AAAA3hB,oBAFV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCFD4jB;AAKX,gCACUhC,IADV,EAC0B;AAAA;;AAAhB;AALF,wBAASC,sEAAT;AAEA,iCAAkB,IAAIgC,yCAAJ,EAAlB;AAIH;;;;iBAEL,sBAAU;AAAA;;AACR,iBAAKjC,IAAL,CAAU5Q,GAAV,WAAoC,KAAKiR,MAAzC,mBACC/gB,SADD,CACW,UAACghB,QAAD,EAAa;AACtB,qBAAI,CAACtM,OAAL,GAAesM,QAAf;;AACA,qBAAI,CAAC4B,eAAL,CAAqB7f,IAArB,CAAyBmP,kBAAM,OAAI,CAACwC,OAAX,CAAzB;AAED,aALD,EAKG,UAACyM,GAAD,EAAQ,CACV,CAND;AAOD;;;iBAED,8BAAkB;AAChB,mBAAO,KAAKyB,eAAL,CAAqBxB,YAArB,EAAP;AACD;;;;;;;yBArBUsB,gBAAavT;AAAA;;;eAAbuT;AAAa3jB,iBAAb2jB,cAAa;AAAA5jB,oBAFZ;;;;","names":["_angular_core__WEBPACK_IMPORTED_MODULE_0__","_r2","ctx_r0","transformMenu","opacity","transform","fadeInItems","MatMenuContent","rxjs__WEBPACK_IMPORTED_MODULE_2__","context","_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_3__","element","_angular_common__WEBPACK_IMPORTED_MODULE_4__","type","selectors","features","provide","useExisting","decorators","args","selector","providers","MatMenuItemBase","MatMenuItem","_document","_focusMonitor","_parentMenu","event","i","_MatMenuItemMixinBase","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_6__","MAT_MENU_PANEL","hostAttrs","hostVars","hostBindings","ctx","inputs","disabled","disableRipple","role","exportAs","attrs","ngContentSelectors","decls","vars","consts","template","directives","_angular_material_core__WEBPACK_IMPORTED_MODULE_5__","encapsulation","changeDetection","_checkDisabled","_handleMouseEnter","host","providedIn","factory","overlapTrigger","xPosition","yPosition","backdropClass","_MatMenuBase","rxjs__WEBPACK_IMPORTED_MODULE_7__","menuPanelUid","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","value","previousPanelClass","classes","withWrap","withTypeAhead","withHomeAndEnd","items","subscribe","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_12__","keyCode","manager","pipe","elevation","MAT_MENU_DEFAULT_OPTIONS","contentQueries","dirIndex","MAT_MENU_CONTENT","_t","viewQuery","hasBackdrop","panelClass","classList","ariaLabel","ariaLabelledby","ariaDescribedby","outputs","closed","close","_allItems","descendants","templateRef","lazyContent","MatMenu","elementRef","ngZone","defaultOptions","MatMenu_ng_template_0_Template","styles","data","animation","matMenuAnimations","animations","deps","_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_14__","useFactory","passive","MatMenuTrigger","_menuItemInstance","_dir","_element","throwMatMenuRecursiveError","overlayConfig","overlayRef","menu","next","complete","depth","parentMenu","throwMatMenuMissingError","positionStrategy","flexibleConnectedTo","withLockedPosition","withGrowAfterOpen","withTransformOriginOn","scrollStrategy","direction","position","overlayFallbackX","originFallbackX","offsetY","originY","originFallbackY","originX","overlayX","overlayY","backdrop","parentClose","hover","detachments","rxjs__WEBPACK_IMPORTED_MODULE_20__","MAT_MENU_SCROLL_STRATEGY","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_21__","restoreFocus","_deprecatedMatMenuTriggerFor","menuData","menuOpened","onMenuOpen","menuClosed","onMenuClose","_MatMenuDirectivesModule","imports","exports","declarations","MatMenuModule","_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_22__","animationDuration","params","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","$implicit","tab_r4","_r12","MatTabGroup_div_2_ng_template_2_Template","MatTabGroup_div_2_ng_template_3_Template","ctx_r1","i_r5","_r17","ctx_r3","tab_r14","left","width","MatInkBar","requestAnimationFrame","inkBar","_MAT_INK_BAR_POSITIONER","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__","MatTabContent","MatTabLabel","_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_2__","t","MatTabBase","MatTab","rxjs__WEBPACK_IMPORTED_MODULE_4__","_MatTabMixinBase","MAT_TAB_GROUP","MAT_TAB_LABEL","MAT_TAB_CONTENT","textLabel","MatTab_ng_template_0_Template","templateLabel","_explicitContent","read","_implicitContent","translateTab","minHeight","MatTabBodyPortal","rxjs__WEBPACK_IMPORTED_MODULE_6__","_angular_common__WEBPACK_IMPORTED_MODULE_8__","_MatTabBodyBase","changeDetectorRef","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_10__","_content","origin","_onCentering","_beforeCentering","_afterLeavingCenter","_onCentered","MatTabBody","dir","MatTabBody_ng_template_2_Template","_c2","_c1","_portalHost","MatTabChangeEvent","MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","nativeElement","wrapper","Promise","tab","_MatTabGroupMixinBase","MAT_TABS_CONFIG","headerPosition","disablePagination","dynamicHeight","selectedIndex","backgroundColor","selectedIndexChange","focusChange","animationDone","selectedTabChange","MatTabGroup","animationMode","_c3","_c4","color","MatTabGroup_div_2_Template","MatTabGroup_mat_tab_body_5_Template","MatTabLabelWrapper","_angular_material_core__WEBPACK_IMPORTED_MODULE_3__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_13__","_allTabs","_tabBodyWrapper","_tabHeader","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","MatPaginatedTabHeader","_ngZone","_elementRef","passiveEventListenerOptions","withHorizontalOrientation","dirChange","resize","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__","containerEl","Math","selectedLabel","offsetLeft","offsetWidth","labelBeforePos","labelAfterPos","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","maxScrollDistance","distance","_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__","_MatTabHeaderBase","MatTabHeader","viewportRuler","platform","_c5","_c6","_c7","_c8","selectFocusedIndex","indexFocused","_angular_cdk_observers__WEBPACK_IMPORTED_MODULE_21__","_items","_inkBar","_tabListContainer","_tabList","_nextPaginator","_previousPaginator","_MatTabNavBase","MatTabNav","MatTabLink","MatTabLinkMixinBase","_MatTabLinkBase","globalRippleOptions","tabIndex","enterDuration","exitDuration","_MatTabLinkMixinBase","active","MatTabsModule","MatToolbarBase","MatToolbarRow","_angular_core__WEBPACK_IMPORTED_MODULE_1__","MatToolbar","filter","some","throwToolbarMixedModesError","_MatToolbarMixinBase","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__","_angular_common__WEBPACK_IMPORTED_MODULE_3__","_c0","_toolbarRows","MatToolbarModule","_angular_material_core__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_2__","AddFoodComponent","dialogRef","fb","foodService","helperService","vendor","getUserInfo","getCategoryList","checkMode","imageForm","get","imageChangedEvent","file","target","files","reader","FileReader","onload","imagePreview","result","patchValue","image","updateValueAndValidity","mode","saveImage","readAsDataURL","title","foodForm","group","id","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","name","description","unit_price","numberPattern","category","getCategorys","getCategorysListenerUpdated","categoryList","results","isLoading","invalid","validateAllFormFields","onUpdate","onCreate","createFood","Object","closeModal","editFood","editFoodImage","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__","BasketComponent","food","removeFromCart","emit","updateCart","confirmOrder","cart","cartTotal","CategoryCreateComponent","getCategoryTypes","form","category_type","getCategoryTypesListenerUpdated","categoryTypes","map","index","updateCategory","createCategory","editCategory","_angular_core__WEBPACK_IMPORTED_MODULE_5__","CategoryListComponent","userService","dialog","dialogService","tableLoading","open","_category_create_category_create_component__WEBPACK_IMPORTED_MODULE_0__","afterClosed","pageSize","pageIndex","length","count","dataSource","getVendors","getVendorsUpdate","vendors","console","log","vendorArray","bussiness_name","user","openConfirmDialog","deleteCategory","_angular_material_sort__WEBPACK_IMPORTED_MODULE_7__","height","CategoryTypeCreateComponent","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","createCategoryType","editCategoryType","_angular_core__WEBPACK_IMPORTED_MODULE_3__","CategoryTypeListComponent","_category_type_create_category_type_create_component__WEBPACK_IMPORTED_MODULE_0__","inventory","_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__","FoodDetailsComponent","foodList","FoodInfoComponent","_angular_core__WEBPACK_IMPORTED_MODULE_8__","ctx_r18","ctx_r12","FoodListComponent","vendorService","cartService","transactionService","router","d","start_date","end_date","today","allow","allow_same_day_booking","Date","start_booking_date","setHours","end_booking_date","getIsLoading","getuserGroup","getRecomended","recomended","selectedVendor","getCategories","recomendedFoods","delivery_date","deliveryDate","_a","setDeliveryDate","getCart","userGroup","getUserGroup","isStaff","isVend","formatDate","getDailyLimit","getFoods","dailyLimit","meal_type","mealType","subPrice","quantity","inAddToCart","allow_mix","allowance","personalBalance","confirm","alert","navigate","foodLoading","categorries","categories","selectedCategory","selectMealType","getFoodInventory","getInventoryListenerUpdated","foods","_select_meal_type_select_meal_type_component__WEBPACK_IMPORTED_MODULE_0__","disableClose","total","onUpdateCart","placeOrder","date","newDate","_r3","_r10","routes","path","component","_food_list_food_list_component__WEBPACK_IMPORTED_MODULE_0__","_food_details_food_details_component__WEBPACK_IMPORTED_MODULE_1__","_food_table_food_table_component__WEBPACK_IMPORTED_MODULE_7__","_inventory_inventory_component__WEBPACK_IMPORTED_MODULE_2__","_inventory_topup_inventory_topup_component__WEBPACK_IMPORTED_MODULE_3__","_category_list_category_list_component__WEBPACK_IMPORTED_MODULE_4__","_category_create_category_create_component__WEBPACK_IMPORTED_MODULE_6__","_category_type_list_category_type_list_component__WEBPACK_IMPORTED_MODULE_5__","FoodRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_9__","_angular_core__WEBPACK_IMPORTED_MODULE_7__","element_r14","element_r17","FoodTableComponent","_add_food_add_food_component__WEBPACK_IMPORTED_MODULE_0__","getFoodList","displayedColumns","getFoodListenerUpdate","deleteFood","listener","_angular_material_sort__WEBPACK_IMPORTED_MODULE_9__","FoodModule","_angular_common__WEBPACK_IMPORTED_MODULE_19__","_food_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_forms__WEBPACK_IMPORTED_MODULE_20__","_angular_material_tabs__WEBPACK_IMPORTED_MODULE_21__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_22__","_angular_material_input__WEBPACK_IMPORTED_MODULE_23__","_angular_material_select__WEBPACK_IMPORTED_MODULE_24__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_25__","_angular_material_datepicker__WEBPACK_IMPORTED_MODULE_26__","_angular_material_button__WEBPACK_IMPORTED_MODULE_27__","_angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_28__","_angular_material_table__WEBPACK_IMPORTED_MODULE_29__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_5__","_angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_30__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_31__","_angular_material_menu__WEBPACK_IMPORTED_MODULE_32__","_angular_material_toolbar__WEBPACK_IMPORTED_MODULE_33__","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_34__","_food_list_food_list_component__WEBPACK_IMPORTED_MODULE_1__","_food_food_component__WEBPACK_IMPORTED_MODULE_2__","_basket_basket_component__WEBPACK_IMPORTED_MODULE_3__","_food_details_food_details_component__WEBPACK_IMPORTED_MODULE_4__","_inventory_inventory_component__WEBPACK_IMPORTED_MODULE_6__","_inventory_topup_inventory_topup_component__WEBPACK_IMPORTED_MODULE_7__","_category_type_list_category_type_list_component__WEBPACK_IMPORTED_MODULE_8__","_category_list_category_list_component__WEBPACK_IMPORTED_MODULE_9__","_category_create_category_create_component__WEBPACK_IMPORTED_MODULE_10__","_add_food_add_food_component__WEBPACK_IMPORTED_MODULE_11__","_inventory_other_foods_other_foods_component__WEBPACK_IMPORTED_MODULE_12__","_inventory_current_inventory_current_inventory_component__WEBPACK_IMPORTED_MODULE_13__","_category_type_create_category_type_create_component__WEBPACK_IMPORTED_MODULE_14__","_food_table_food_table_component__WEBPACK_IMPORTED_MODULE_15__","_food_info_food_info_component__WEBPACK_IMPORTED_MODULE_16__","_select_meal_type_select_meal_type_component__WEBPACK_IMPORTED_MODULE_17__","FoodComponent","addToCart","element_r25","InventoryTopupComponent","getInventoryTopup","getInventoryTopUp","getInventoryTopUpListenerUpdated","_angular_material_sort__WEBPACK_IMPORTED_MODULE_4__","element_r15","element_r21","element_r24","CurrentInventoryComponent","notificationService","isVen","getIsToppingUp","changes","getInventory","updateInventory","warning","mealTypes","ctx_r2","InventoryComponent","view","getMealTypes","isComp","getVendorArray","top_up_quantity","quantity_left","topupInventory","downloading","vendor_user_id","vendor_user_id_full","_b","status","comment","company","exportExcel","OtherFoodsComponent","getOtherFoods","otherFoods","SelectMealTypeComponent","DialogService","message","_components_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_0__","FoodService","http","_environments_environment__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_3__","_models_response_model__WEBPACK_IMPORTED_MODULE_1__","post","apiUrl","response","info","foodCreateListener","err","asObservable","patch","imageUpdateListener","danger","query","res","foodsListener","otherFoodsListener","success","vendor_id","categoriesListener","categoryTypesListener","inventoryTopup","inventoryTopupListener","isToppingUpListener","mealTypesListener","inventoryListener","error","ratings","ratingsListener","recomendedListener","_angular_core__WEBPACK_IMPORTED_MODULE_6__","VendorService","rxjs__WEBPACK_IMPORTED_MODULE_1__","vendorsListener"],"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/menu.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js","webpack:///src/app/food/add-food/add-food.component.html","webpack:///src/app/food/add-food/add-food.component.ts","webpack:///src/app/food/basket/basket.component.html","webpack:///src/app/food/basket/basket.component.ts","webpack:///src/app/food/category-create/category-create.component.html","webpack:///src/app/food/category-create/category-create.component.ts","webpack:///src/app/food/category-list/category-list.component.html","webpack:///src/app/food/category-list/category-list.component.ts","webpack:///src/app/food/category-type-create/category-type-create.component.ts","webpack:///src/app/food/category-type-create/category-type-create.component.html","webpack:///src/app/food/category-type-list/category-type-list.component.html","webpack:///src/app/food/category-type-list/category-type-list.component.ts","webpack:///src/app/food/food-details/food-details.component.html","webpack:///src/app/food/food-details/food-details.component.ts","webpack:///src/app/food/food-info/food-info.component.html","webpack:///src/app/food/food-info/food-info.component.ts","webpack:///src/app/food/food-list/food-list.component.html","webpack:///src/app/food/food-list/food-list.component.ts","webpack:///src/app/food/food-routing.module.ts","webpack:///src/app/food/food-table/food-table.component.html","webpack:///src/app/food/food-table/food-table.component.ts","webpack:///src/app/food/food.module.ts","webpack:///src/app/food/food/food.component.ts","webpack:///src/app/food/food/food.component.html","webpack:///src/app/food/inventory-topup/inventory-topup.component.html","webpack:///src/app/food/inventory-topup/inventory-topup.component.ts","webpack:///src/app/food/inventory/current-inventory/current-inventory.component.html","webpack:///src/app/food/inventory/current-inventory/current-inventory.component.ts","webpack:///src/app/food/inventory/inventory.component.html","webpack:///src/app/food/inventory/inventory.component.ts","webpack:///src/app/food/inventory/other-foods/other-foods.component.html","webpack:///src/app/food/inventory/other-foods/other-foods.component.ts","webpack:///src/app/food/select-meal-type/select-meal-type.component.html","webpack:///src/app/food/select-meal-type/select-meal-type.component.ts","webpack:///src/app/shared/services/dialog.service.ts","webpack:///src/app/shared/services/food.service.ts","webpack:///src/app/shared/services/vendor.service.ts"],"sourcesContent":["import { FocusMonitor, FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._handleKeydown($event); })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.closed.emit(\"click\"); })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4._onAnimationStart($event); })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)'\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }])] });\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]',\n                providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nclass MatMenuItemBase {\n}\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    constructor(_elementRef, \n    /**\n     * @deprecated `_document` parameter is no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        var _a, _b;\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            const icon = icons[i];\n            (_a = icon.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(icon);\n        }\n        return ((_b = clone.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || '';\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { role: [{\n            type: Input\n        }], \n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], \n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * @docs-private\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() { return this._xPosition; }\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() { return this._yPosition; }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() { return this._overlapTrigger; }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() { return this._hasBackdrop; }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() { return this.panelClass; }\n    set classList(classes) { this.panelClass = classes; }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused)))).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable\n                .pipe(take(1))\n                .subscribe(() => this._focusFirstItem(origin));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _focusFirstItem(origin) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n        const newElevation = `mat-elevation-z${elevation}`;\n        const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n    lazyContent: [{ type: ContentChild, args: [MAT_MENU_CONTENT,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MAT_MENU_CONTENT]\n        }] }); })();\n/** @docs-public MatMenu */\nclass MatMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return new (t || MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\nMatMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenu, selectors: [[\"mat-menu\"]], hostVars: 3, hostBindings: function MatMenu_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n    } }, exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass], styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\nMatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Component,\n        args: [{\n                selector: 'mat-menu',\n                template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                host: {\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null'\n                },\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                ],\n                styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, \n    // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n    // @breaking-change 8.0.0\n    _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() { return this._menu; }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition(overlayConfig.positionStrategy);\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof _MatMenuBase) {\n            this.menu._startAnimation();\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof _MatMenuBase) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false)\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this.menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                this.menu.setPositionClasses(posX, posY);\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵfac = function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); };\n_MatMenuDirectivesModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger, MatMenuContent]; }, exports: function () { return [MatMenuTrigger, MatMenuContent, MatCommonModule]; } }); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); };\nMatMenuModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ], CdkScrollableModule, MatCommonModule, _MatMenuDirectivesModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [MatMenu, MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule, _MatMenuDirectivesModule]; }, exports: function () { return [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = restoredCtx.$implicit; const i_r5 = restoredCtx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const i_r5 = restoredCtx.index; const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._tabFocusChanged($event, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r15);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r15))(\"content\", tab_r14.content)(\"position\", tab_r14.position)(\"origin\", tab_r14.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r15));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(\n    /** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = /*@__PURE__*/ function () { let ɵMatTabLabel_BaseFactory; return function MatTabLabel_Factory(t) { return (ɵMatTabLabel_BaseFactory || (ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel)))(t || MatTabLabel); }; }();\nMatTabLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP)); };\nMatTab.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [CdkPortalOutlet,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n        this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ?\n            defaultConfig.dynamicHeight : false;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => tab._closestTabGroup === this));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        if (focusOrigin) {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of(null);\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => Promise.resolve().then(realign));\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); };\nMatTabsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n","import { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) { return new (t || MatToolbarRow)(); };\nMatToolbarRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatToolbarRow, selectors: [[\"mat-toolbar-row\"]], hostAttrs: [1, \"mat-toolbar-row\"], exportAs: [\"matToolbarRow\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' }\n            }]\n    }], null, null); })();\nclass MatToolbar extends _MatToolbarMixinBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n}\nMatToolbar.ɵfac = function MatToolbar_Factory(t) { return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatToolbar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatToolbar, selectors: [[\"mat-toolbar\"]], contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    } }, hostAttrs: [1, \"mat-toolbar\"], hostVars: 4, hostBindings: function MatToolbar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matToolbar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatToolbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _toolbarRows: [{\n            type: ContentChildren,\n            args: [MatToolbarRow, { descendants: true }]\n        }] }); })();\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵfac = function MatToolbarModule_Factory(t) { return new (t || MatToolbarModule)(); };\nMatToolbarModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatToolbarModule });\nMatToolbarModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, { declarations: function () { return [MatToolbar, MatToolbarRow]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatToolbar, MatToolbarRow, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n\n","<h2 mat-dialog-title>{{title | titlecase}}</h2>\n<mat-dialog-content class=\"mat-typography\">\n\n  <div class=\"example-loading-shade\" *ngIf=\"isLoading\">\n    <div class=\"loader-box\">\n      <div class=\"loader\">\n        <div class=\"line bg-primary\"></div>\n        <div class=\"line bg-primary\"></div>\n        <div class=\"line bg-primary\"></div>\n        <div class=\"line bg-primary\"></div>\n      </div>\n    </div>\n    <!-- <mat-spinner *ngIf=\"tableLoading\"></mat-spinner> -->\n  </div>\n\n  <form [formGroup]=\"foodForm\" class=\"row align-items-center theme-form mega-form\">\n\n    <div class=\"mb-3 image-preview col-12\" *ngIf=\"imagePreview !== '' && imagePreview && imageForm.get('image').valid\">\n      <img class=\"mx-auto rounded d-block img-fluid\" [src]=\"imagePreview\" [alt]=\"foodForm.value.name\">\n    </div>\n\n    <div class=\"col-auto\">\n      <input #imageInput type=\"file\" accept=\"image/*\" (change)=\"onImagePicked($event)\">\n      <div *ngIf=\"image.hasError('invalidMimeType')\">Selected file is not of supported format</div>\n      <button (click)=\"imageInput.click()\" class=\"btn btn-primary\" type=\"button\">Select food image</button>\n    </div>\n\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <mat-label>Food Name</mat-label>\n      <input formControlName=\"name\" matInput>\n      <mat-error *ngIf=\"foodName.invalid && (foodName.dirty || foodName.touched)\">Food name is a required field\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <mat-label>Category</mat-label>\n      <mat-select formControlName=\"category\">\n        <mat-option [value]=\"null\">Please select a category</mat-option>\n        <mat-option *ngFor=\"let category of categoryList\" [value]=\"category.id\">{{ category.name }}</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"category.invalid && (category.dirty || category.touched)\">Please select a valid food category\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <mat-label>Amount</mat-label>\n      <input formControlName=\"unit_price\" matInput type=\"number\" class=\"example-right-align\">\n      <span matPrefix>\n        ₦\n      </span>\n      <span matSuffix>.00</span>\n      <mat-error *ngIf=\"unit_price.invalid && (unit_price.dirty || unit_price.touched)\">Enter a valid amount for food\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-12\" appearance=\"outline\">\n      <mat-label>Food Description</mat-label>\n      <textarea formControlName=\"description\" matInput\n        placeholder=\"Tell users what they need to know about the food.\"></textarea>\n      <mat-error *ngIf=\"description.invalid && (description.dirty || description.touched)\">Food name is a required field\n      </mat-error>\n    </mat-form-field>\n  </form>\n\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button color=\"primary\" mat-button (click)=\"onSave()\" cdkFocusInitial>\n    <i *ngIf=\"isLoading\" class=\"fa fa-spin fa-spinner\"></i>\n    {{title | titlecase}}\n  </button>\n</mat-dialog-actions>\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { HelperService } from \"../../shared/services/helper.service\";\n\n@Component({\n  selector: \"app-add-food\",\n  templateUrl: \"./add-food.component.html\",\n  styleUrls: [\"./add-food.component.scss\"],\n})\nexport class AddFoodComponent implements OnInit {\n  imageChangedEvent: any = \"\";\n  imagePreview: string;\n\n  title = \"add food\";\n  foodForm: FormGroup;\n  imageForm: FormGroup;\n  private numberPattern = /\\d+/g;\n  vendor: any;\n  categoryList: any[] = [];\n  mode: string;\n  isLoading: boolean;\n  constructor(\n    public dialogRef: MatDialogRef<AddFoodComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private foodService: FoodService,\n    private helperService: HelperService\n  ) {}\n\n  ngOnInit(): void {\n    this.vendor = this.helperService.getUserInfo();\n    this.getCategoryList();\n\n    this.checkMode();\n  }\n\n  get image() {\n    return this.imageForm.get(\"image\");\n  }\n\n  onImagePicked(event) {\n    this.imageChangedEvent = event;\n    const file = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n      this.imageForm.patchValue({ image: this.imagePreview });\n      this.image.updateValueAndValidity();\n      // console.log(this.imageForm.value);\n      this.mode == \"edit\" ? this.saveImage() : null;\n      // console.log(this.imagePreview)\n    };\n    reader.readAsDataURL(file);\n\n    // const file = files.item(0);\n    // let reader = new FileReader();\n    // reader.onload = (event: any) => {\n    //   this.imagePreview = event.target.result;\n    //   this.foodForm.patchValue({ image: this.imagePreview });\n    //   this.image.updateValueAndValidity();\n    //   // this.testImageFile = event.target.result;\n    // };\n    // reader.readAsDataURL(file);\n  }\n\n  checkMode() {\n    if (this.data) {\n      this.mode = \"edit\";\n      this.title = \"edit food\";\n      this.imagePreview = this.data.image;\n      this.foodForm = this.fb.group({\n        id: [this.data.id, Validators.required],\n        name: [this.data.name, Validators.required],\n        // image: [this.data.image, [Validators.required]],\n        description: [this.data.description, Validators.required],\n        unit_price: [\n          this.data.unit_price,\n          [\n            Validators.required,\n            Validators.pattern(this.numberPattern),\n            Validators.min(0),\n          ],\n        ],\n        category: [this.data.category, Validators.required],\n      });\n      this.imageForm = this.fb.group({\n        image: [this.data.image, [Validators.required]],\n      });\n      return;\n    }\n    this.mode = \"create\";\n    this.title = \"create food\";\n    this.foodForm = this.fb.group({\n      name: [\"\", [Validators.required]],\n      // image: [\"\", [Validators.required]],\n      description: [\"\"],\n      unit_price: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern(this.numberPattern),\n          Validators.min(0),\n        ],\n      ],\n      category: [null, [Validators.required]],\n    });\n    this.imageForm = this.fb.group({\n      image: [null, [Validators.required]],\n    });\n  }\n\n  get foodName() {\n    return this.foodForm.get(\"name\");\n  }\n\n  get description() {\n    return this.foodForm.get(\"description\");\n  }\n\n  get unit_price() {\n    return this.foodForm.get(\"unit_price\");\n  }\n\n  get category() {\n    return this.foodForm.get(\"category\");\n  }\n\n  getCategoryList() {\n    this.foodService.getCategorys(this.vendor.id);\n    this.foodService.getCategorysListenerUpdated().subscribe((categoryList) => {\n      this.categoryList = categoryList.results;\n    });\n  }\n\n  onSave() {\n    this.isLoading = true;\n    if (this.foodForm.invalid) {\n      this.helperService.validateAllFormFields(this.foodForm);\n      this.isLoading = false;\n      return;\n    }\n    if (this.data) {\n      this.onUpdate();\n      return;\n    }\n\n    this.onCreate();\n  }\n\n  onCreate() {\n    this.foodService.createFood({...this.foodForm.value, ...this.imageForm.value}).subscribe((closeModal) => {\n      this.isLoading = false;\n      closeModal\n        ? this.dialogRef.close()\n        : this.helperService.validateAllFormFields(this.foodForm);\n    });\n  }\n\n  onUpdate() {\n    this.foodService.editFood(this.foodForm.value).subscribe((closeModal) => {\n      this.isLoading = false;\n      closeModal\n        ? this.dialogRef.close()\n        : this.helperService.validateAllFormFields(this.foodForm);\n    });\n  }\n\n  saveImage() {\n    this.isLoading = true;\n    this.foodService\n      .editFoodImage(this.imageForm.value, this.foodForm.value)\n      .subscribe((closeModal) => {\n        this.isLoading = false;\n      });\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row px-0\">\n    <div class=\"col-12 px-0\">\n      <div class=\"card bg-primary\">\n        <div class=\"card-body\">\n\n          <div class=\"basket-items table-responsive mt-5\">\n\n            <table class=\"table table-borderless table-sm \">\n              <thead>\n                <tr>\n                  <td class=\"\">\n                    item\n                  </td>\n                  <td class=\"text-center\">\n                    Qty\n                  </td>\n                  <td class=\"text-center\">\n                    Price\n                  </td>\n                </tr>\n              </thead>\n              <tbody class=\"\" *ngFor=\"let item of cart\">\n                <tr>\n                  <td>\n                    <div class=\"media\">\n                      <img class=\"rounded-circle image-radius m-r-5\" [src]=\"item.image\" alt=\"\">\n                      <div class=\"media-body\">\n                        <span class=\"d-block b-0 food-name\">{{ (item.name.length>23)? (item.name | slice:0:20)+'...':(item.name) }}</span>\n                        <span class=\"d-block\">{{item.unit_price | currency:'NGN' : \"₦\" : '1.0-0'}}</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td class=\"text-center\">\n                    <input class=\"qty\" type=\"number\" min=\"1\" [(ngModel)]=\"item.quantity\" (ngModelChange)=\"onUpdateBasket(item)\" placeholder=\"qty\">\n                  </td>\n                  <td class=\"text-center\">\n                    {{item.qty * item.unit_price | currency:'NGN' : \"₦\" : '1.0-0'}}\n                  </td>\n                </tr>\n                <tr>\n                  <td colspan=\"2\">\n                    <input type=\"text\" [value]=\"\" [(ngModel)]=\"item.comment\" (ngModelChange)=\"onUpdateBasket(item)\" placeholder=\"Order Note...\">\n                  </td>\n                  <td class=\"text-center\">\n                    <button (click)=\"onRemoveFromCart(item)\" class=\"my-auto btn btn-outline-light px-1\">\n                      <img class=\"mx-1 \" src=\"../../../assets/svg/Delete.svg\" alt=\"\">\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n          </div>\n          <hr>\n          <div class=\"d-flex justify-content-between\">\n            <p>Sub total</p>\n            <p>{{cartTotal | currency:'NGN' : \"₦\" : '1.0-0'}}</p>\n          </div>\n\n          <button [disabled]=\"isLoading == true\" (click)=\"onConfirmOrder()\" class=\"btn btn-white btn-block mt-5\">\n            <i *ngIf=\"isLoading == true\" class=\"fa fa-spin fa-spinner mr-2\"></i>\n            Confirm Order\n          </button>\n\n          <p class=\"text-center mb-2 small mt-3\">\n            Amount exceeds Company Wallet?\n          </p>\n          <div class=\"row mb-5\">\n            <div class=\"col-auto mx-auto\">\n              <button class=\"btn text-white btn-outline-light\">\n                Click Here\n              </button>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Food } from \"src/app/shared/models/food.model\";\n\n@Component({\n  selector: \"app-basket\",\n  templateUrl: \"./basket.component.html\",\n  styleUrls: [\"./basket.component.scss\"],\n})\nexport class BasketComponent implements OnInit {\n  @Input(\"cart\") cart;\n  @Input(\"isLoading\") isLoading;\n  @Input(\"cartTotal\") cartTotal;\n  @Output(\"removeFromCart\") removeFromCart = new EventEmitter<Food>();\n  @Output(\"updateCart\") updateCart = new EventEmitter<Food>();\n  @Output(\"confirmOrder\") confirmOrder = new EventEmitter<Food>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onRemoveFromCart(food) {\n    this.removeFromCart.emit(food);\n  }\n\n  onUpdateBasket(value) {\n    this.updateCart.emit(value);\n  }\n\n  onConfirmOrder() {\n    this.confirmOrder.emit(null);\n  }\n}\n","<div class=\"container-fluid\">\n  <mat-toolbar class=\"d-flex justify-content-between\">\n    <!-- <div class=\"d-flex justify-content-center\"> -->\n      <div>\n        <h2>{{title | titlecase}}</h2>\n      </div>\n      <div>\n        <mat-icon mat-button mat-dialog-close>\n          close\n        </mat-icon>\n      </div>\n    <!-- </div> -->\n  </mat-toolbar>\n  <div class=\"row\">\n    <div class=\"mx-auto col-8\">\n      <div class=\"mt-2 card bg-color1\">\n        <!-- <div class=\"card-header\">\n          <h5>{{title | titlecase}}</h5>\n        </div> -->\n        <div class=\"card-body\">\n          <form [formGroup]=\"form\" class=\"row theme-form mega-form\">\n            <ng-template matStepLabel>\n              <div class=\"col-12\">\n                <h6>Company Information</h6>\n              </div>\n            </ng-template>\n\n            <!-- Name -->\n            <div class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label class=\"col-form-label\">Category Name</label>\n                <input formControlName=\"name\" class=\"form-control\" type=\"text\" placeholder=\"Company Name\">\n                <div *ngIf=\"form.controls.name.touched && form.controls.name.errors?.required\" class=\"text text-danger\">\n                  Name is required.\n                </div>\n                <div *ngIf=\"form.controls.name.touched && form.controls.name.errors?.pattern\" class=\"text text-danger\">\n                  Name can only be alphabets.\n                </div>\n              </div>\n            </div>\n\n            <!-- description -->\n            <div class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label class=\"col-form-label\">Description</label>\n                <textarea formControlName=\"description\" class=\"form-control\" placeholder=\"Description\">\n\n                    </textarea>\n                <div *ngIf=\"form.controls.description.touched && form.controls.description.errors?.required\"\n                  class=\"text text-danger\">\n                  Category description is required.\n                </div>\n              </div>\n            </div>\n\n            <!-- sector -->\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"col-form-label\">Category Type</label>\n                <select formControlName=\"category_type\" class=\"form-control\">\n                  <option value=\"\">--none--</option>\n                  <option *ngFor=\"let type of categoryTypes\" [value]=\"type.id\">{{type.name}}</option>\n                </select>\n                <!-- <input formControlName=\"category_type\" class=\"form-control\" type=\"text\" placeholder=\"category type\"> -->\n                <div *ngIf=\"form.controls.category_type.touched && form.controls.category_type.errors?.required\"\n                  class=\"text text-danger\">\n                  Please Select a category type.\n                </div>\n              </div>\n            </div>\n            <div class=\"mx-auto col-8\">\n              <button [disabled]=\"isLoading ==true\" class=\"btn btn-primary btn-block\" (click)=\"onSave()\" mat-button >\n                <i *ngIf=\"isLoading == true\" class=\"fa fa-spin fa-spinner mr-2\"></i>\n                Save\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-category-create\",\n  templateUrl: \"./category-create.component.html\",\n  styleUrls: [\"./category-create.component.scss\"],\n})\nexport class CategoryCreateComponent implements OnInit {\n  form: FormGroup = new FormGroup({});\n  title = \"Add Category\";\n  categoryTypes: any[] = [];\n  mode: string;\n  isLoading = false\n\n  constructor(\n    private fb: FormBuilder,\n    private foodService: FoodService,\n    private helperService: HelperService,\n    public dialogRef: MatDialogRef<CategoryCreateComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {\n    this.getCategoryTypes();\n    this.checkMode();\n  }\n\n  checkMode() {\n    if (this.data) {\n      this.mode = \"edit\";\n      this.title = \"edit category\";\n      this.form = this.fb.group({\n        id: [this.data.id, Validators.required],\n        name: [this.data.name, Validators.required],\n        description: [this.data.description, Validators.required],\n        category_type: [this.data.category_type, Validators.required],\n      });\n      return;\n    }\n    this.mode = \"create\";\n    this.title = \"create category\";\n    this.form = this.fb.group({\n      name: [\"\", Validators.required],\n      description: [\"\", Validators.required],\n      category_type: [\"\", Validators.required],\n    });\n  }\n\n  getCategoryTypes() {\n    this.foodService.getCategoryTypes();\n    this.foodService\n      .getCategoryTypesListenerUpdated()\n      .subscribe((categoryTypes: any) => {\n        if (categoryTypes.results) {\n          this.categoryTypes = categoryTypes.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n        } else {\n          this.categoryTypes = [];\n        }\n      });\n  }\n\n  onSave() {\n    if (this.form.invalid) {\n      this.helperService.validateAllFormFields(this.form);\n      return;\n    }\n\n    if (this.data) {\n      this.updateCategory();\n      return;\n    }\n\n    this.createCategory();\n  }\n\n  createCategory() {\n    this.isLoading = true\n    this.foodService.createCategory(this.form.value).subscribe((closeModal) => {\n      closeModal\n        ? this.dialogRef.close()\n        : this.helperService.validateAllFormFields(this.form);\n    });\n  }\n\n  updateCategory() {\n    this.isLoading = true\n    this.foodService.editCategory(this.form.value).subscribe((closeModal) => {\n      closeModal\n        ? this.dialogRef.close()\n        : this.helperService.validateAllFormFields(this.form);\n    });\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n        <!-- <button [routerLink]=\"['/food/category-create']\" routerLinkActive=\"router-link-active\" -->\n        <button (click)=\"openCreateCategoryDialog()\"\n          class=\"btn btn-sm btn-primary\">\n          <i class=\"mr-2 fa fa-plus\"></i>\n          Add Category\n        </button>\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <!-- <app-table-functions [vendorArray]=\"vendorArray\" [downloading]=\"downloading\" (vendorChange)=\"vendorChange($event)\"></app-table-functions> -->\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n          <mat-spinner></mat-spinner>\n        </div>\n\n        <div class=\"table-responsive\">\n\n          <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n            <!-- position Column -->\n            <ng-container matColumnDef=\"position\" sticky>\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n              <td class=\"text-center\" mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n\n            <!-- Contact Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.name || 'N/A'}}</td>\n            </ng-container>\n\n            <!-- Contact Email Column -->\n            <ng-container matColumnDef=\"category_type\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Category Type</th>\n              <td mat-cell *matCellDef=\"let element\"> {{element?.category_type_full?.name || 'N/A'}} </td>\n            </ng-container>\n\n            <!-- Star Column -->\n            <ng-container matColumnDef=\"star\" stickyEnd>\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n                  <mat-icon>more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                  <button (click)=\"openCreateCategoryDialog(element)\" mat-menu-item>\n                    <mat-icon>edit_note</mat-icon>\n                    <span>Edit</span>\n                  </button>\n                  <!-- <button (click)=\"onDeleteCategory(element)\" mat-menu-item>\n                    <mat-icon>delete_forever</mat-icon>\n                    <span>Delete</span>\n                  </button> -->\n                </mat-menu>\n\n\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n              [class.example-expanded-row]=\"expandedElement === element\">\n            </tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n            </tr>\n          </table>\n          <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { DialogService } from \"src/app/shared/services/dialog.service\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { UserService } from \"src/app/user/user.service\";\nimport { CategoryCreateComponent } from \"../category-create/category-create.component\";\n\n@Component({\n  selector: \"app-category-list\",\n  templateUrl: \"./category-list.component.html\",\n  styleUrls: [\"./category-list.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class CategoryListComponent implements OnInit {\n  vendorArray: any[] = [];\n  downloading = false;\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  title = \"Category\";\n  displayedColumns: any[] = [\n    \"position\",\n    \"name\",\n    \"category_type\",\n    \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n  private vendor: string = \"\";\n\n  constructor(\n    private foodService: FoodService,\n    private userService: UserService,\n    private dialog: MatDialog,\n    private dialogService: DialogService\n    ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.tableLoading = true;\n    // this.getVendorArray()\n    this.getCategorys();\n  }\n\n  openCreateCategoryDialog(data=null) {\n    const dialogRef = this.dialog.open(CategoryCreateComponent, {\n      data: data\n    });\n\n    dialogRef.afterClosed()\n    .subscribe(result => {\n      this.getCategorys()\n    });\n  }\n\n  getCategorys() {\n    this.foodService.getCategorys(this.vendor, this.pageSize, this.pageIndex);\n    this.foodService\n      .getCategorysListenerUpdated()\n      .subscribe((category: any) => {\n        if (category.results) {\n          this.length = category.count;\n          this.dataSource = category.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n\n        // this.dataSource = new MatTableDataSource(orderHistory);\n        // this.dataSource.sort = this.sort;\n      });\n  }\n\n  getVendorArray() {\n    this.userService.getVendors();\n    this.userService.getVendorsUpdate().subscribe((vendors) => {\n      console.log(vendors)\n      const vendorArray = vendors.results.map((element) => {\n        return { name: element.bussiness_name, id: element.user.id };\n      });\n      this.vendorArray = [{ id: \"\", name: \"All Vendors\" }, ...vendorArray];\n    });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getCategorys();\n    this.tableLoading = true;\n  }\n\n  vendorChange(value) {\n    console.log(value)\n    this.vendor = value;\n    this.getCategorys();\n    this.tableLoading = true;\n  }\n\n  onDeleteCategory(category) {\n    this.dialogService.openConfirmDialog()\n    .afterClosed()\n    .subscribe((value) => {\n      if (value) {\n        this.foodService.deleteCategory(category)\n        .subscribe((value) => {\n          value ? this.getCategorys() : null;\n        })\n      }\n    })\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FoodService } from 'src/app/shared/services/food.service';\nimport { HelperService } from 'src/app/shared/services/helper.service';\n\n@Component({\n  selector: 'app-category-type-create',\n  templateUrl: './category-type-create.component.html',\n  styleUrls: ['./category-type-create.component.scss']\n})\nexport class CategoryTypeCreateComponent implements OnInit {\n  form: FormGroup = new FormGroup({});\n  title = \"Add Category\";\n  mode: string;\n  isLoading: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private foodService: FoodService,\n    private helperService: HelperService,\n    public dialogRef: MatDialogRef<CategoryTypeCreateComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {\n    this.checkMode();\n  }\n\n  checkMode() {\n    if (this.data) {\n      this.mode = \"edit\";\n      this.title = \"edit category type\";\n      this.form = this.fb.group({\n        name: [this.data.name, Validators.required],\n      });\n      return;\n    }\n    this.mode = \"create\";\n    this.title = \"create category type\";\n    this.form = this.fb.group({\n      name: [\"\", Validators.required],\n    });\n  }\n\n  onSave() {\n    if (this.form.invalid) {\n      this.helperService.validateAllFormFields(this.form);\n      return;\n    }\n\n    if (this.data) {\n      this.updateCategory();\n      return;\n    }\n\n    this.createCategory();\n  }\n\n  createCategory() {\n    this.isLoading = true\n    this.foodService.createCategoryType(this.form.value).subscribe((closeModal) => {\n      closeModal\n        ? this.dialogRef.close()\n        : this.helperService.validateAllFormFields(this.form);\n    });\n  }\n  updateCategory() {\n    this.isLoading = true\n    this.foodService.editCategoryType(this.form.value).subscribe((closeModal) => {\n      closeModal\n        ? this.dialogRef.close()\n        : this.helperService.validateAllFormFields(this.form);\n    });\n  }\n}\n","<div class=\"container-fluid\">\n  <mat-toolbar class=\"d-flex justify-content-between\">\n    <!-- <div class=\"d-flex justify-content-center\"> -->\n    <div>\n      <h2>{{title | titlecase}}</h2>\n    </div>\n    <div>\n      <mat-icon mat-button mat-dialog-close>\n        close\n      </mat-icon>\n    </div>\n    <!-- </div> -->\n  </mat-toolbar>\n  <div class=\"mt-2\">\n\n    <div class=\"card-body\">\n      <form [formGroup]=\"form\" class=\"row theme-form mega-form\">\n        <!-- Name -->\n        <mat-form-field>\n          <mat-label>Category Type</mat-label>\n          <input matInput formControlName=\"name\" type=\"text\">\n        </mat-form-field>\n        <!-- <div class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label class=\"col-form-label\">Category Name</label>\n                <input formControlName=\"name\" class=\"form-control\" type=\"text\" placeholder=\"Company Name\">\n                <div *ngIf=\"form.controls.name.touched && form.controls.name.errors?.required\" class=\"text text-danger\">\n                  Name is required.\n                </div>\n                <div *ngIf=\"form.controls.name.touched && form.controls.name.errors?.pattern\" class=\"text text-danger\">\n                  Name can only be alphabets.\n                </div>\n              </div>\n            </div> -->\n        <div class=\"mx-auto col-8\">\n          <button class=\"btn btn-primary btn-block\" (click)=\"onSave()\" mat-button>Save</button>\n\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n        <button (click)=\"openCreateCategoryTypeDialog()\" class=\"btn btn-sm btn-primary\">\n          <i class=\"mr-2 fa fa-plus\"></i>\n          Add Category Type\n        </button>\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <!-- <app-table-functions [downloading]=\"downloading\"></app-table-functions> -->\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n          <mat-spinner></mat-spinner>\n        </div>\n\n        <div class=\"table-responsive\">\n\n          <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n            <!-- position Column -->\n            <ng-container matColumnDef=\"position\" sticky>\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n              <td class=\"text-center\" mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n\n            <!-- Contact Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.name || 'N/A'}}</td>\n            </ng-container>\n\n            <!-- Star Column -->\n            <!-- <ng-container matColumnDef=\"star\" stickyEnd>\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td mat-cell *matCellDef=\"let element\">\n                <mat-icon>more_vert</mat-icon>\n              </td>\n            </ng-container> -->\n\n\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n            <!-- <ng-container matColumnDef=\"expandedDetail\">\n              <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n                <div class=\"example-element-detail\"\n                  [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                  <div class=\"example-element-diagram\">\n                    <div class=\"example-element-position\"> {{element.position}} </div>\n                    <div class=\"example-element-symbol\"> {{element.position}} </div>\n                    <div class=\"example-element-name\"> {{element.name}} </div>\n                    <div class=\"example-element-weight\"> {{element.position}} </div>\n                  </div>\n                  <div class=\"example-element-description\">\n                    {{element.description}}\n                  </div>\n                </div>\n              </td>\n            </ng-container> -->\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"\"\n              [class.example-expanded-row]=\"expandedElement === element\">\n            </tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n            </tr>\n          </table>\n          <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n","\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { CategoryTypeCreateComponent } from \"../category-type-create/category-type-create.component\";\n\n@Component({\n  selector: 'app-category-type-list',\n  templateUrl: './category-type-list.component.html',\n  styleUrls: ['./category-type-list.component.scss'],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class CategoryTypeListComponent implements OnInit {\n  downloading = false;\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  title = \"Category\";\n  displayedColumns: any[] = [\n    \"position\",\n    \"name\",\n    // \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n  private vendor: string = \"\";\n\n  constructor(\n    private foodService: FoodService,\n    private dialog: MatDialog\n    ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.tableLoading = true;\n    this.getCategorys();\n  }\n\n  openCreateCategoryTypeDialog(data=null) {\n    const dialogRef = this.dialog.open(CategoryTypeCreateComponent, {\n      data: data\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // console.log(`Dialog result: ${result}`);\n      this.getCategorys()\n    });\n  }\n\n  getCategorys() {\n    this.foodService.getCategoryTypes(this.pageSize, this.pageIndex);\n    this.foodService\n      .getCategoryTypesListenerUpdated()\n      .subscribe((inventory: any) => {\n        console.log(inventory);\n        if (inventory.results) {\n          this.length = inventory.count;\n          this.dataSource = inventory.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n        // this.dataSource = new MatTableDataSource(orderHistory);\n        // this.dataSource.sort = this.sort;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getCategorys();\n    this.tableLoading = true;\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-lg-8\">\n      <div class=\"row align-items-center justify-content-between\">\n        <img [src]=\"'../../../assets/svg/restaurant.svg'\" class=\"img-fluid vendor-logo\" alt=\"\">\n\n        <div class=\"col-auto my-auto\">\n          <p class=\"mb-0 f-w-700\">\n            Select Date\n          </p>\n          <img src=\"../../../assets/svg/date_range_light.svg\" alt=\"\">\n        </div>\n      </div>\n\n      <app-food-info></app-food-info>\n\n      <div class=\"mt-5 d-flex justify-content-between\">\n        <div class=\"mr-5\">\n          <h5>\n            Similar Food Types\n          </h5>\n        </div>\n      </div>\n\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n\n          <div *ngFor=\"let food of foodList\" class=\"col-3\">\n            <app-food></app-food>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"px-0 mx-0 col-3 basket-container\">\n      <app-basket></app-basket>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-food-details',\n  templateUrl: './food-details.component.html',\n  styleUrls: ['./food-details.component.scss']\n})\nexport class FoodDetailsComponent implements OnInit {\n\n  foodList: any[] = []\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.foodList.length = 4\n  }\n\n}\n","<div class=\"\">\n  <div class=\"row justify-content-between\">\n    <div class=\"col-7\">\n      <div class=\"card bg-secondary food-details-card\">\n        <div class=\"card-body \">\n          <div class=\"d-flex justify-content-between align-items-center\">\n            <div class=\"\">\n              <p class=\"food-name\">\n                {{food.name}}\n              </p>\n\n              <p class=\"text-gray-1\">\n                <!-- Food Description -->\n                {{food?.description || 'No description available' }}\n              </p>\n            </div>\n\n            <img class=\"rounded-circle dish d-block\" [src]=\"food.image\" alt=\"\">\n\n          </div>\n\n\n          <!-- <h3 class=\"text-primary\">\n            Ingredients\n          </h3>\n\n          <button class=\"btn btn-primary\">\n            View all ingredients\n          </button>\n\n          <h3 class=\"text-primary\">\n            Nutritional Value\n          </h3> -->\n\n\n        </div>\n      </div>\n    </div>\n\n    <div class=\"text-right col-5\">\n      <h6 class=\"h6\">\n        Latest Reviews\n      </h6>\n      <div class=\"review-box\">\n        <hr class=\"hr\">\n        rating\n\n        <ng-container *ngFor=\"let comment of food.comments\">\n          <h6 class=\"name\">\n            {{comment.by | titlecase}}\n          </h6>\n          <p class=\"pb-0 mb-0 small review text-gray\">\n            {{comment.comment}}\n          </p>\n          <small class=\"pt-0 mt-0 time\">\n            {{comment | dateTime : comment.date: comment.time}}\n          </small>\n        </ng-container>\n      </div>\n\n      <div class=\"mt-5 amount\">\n        {{food?.unit_price | currency:'NGN' : \"₦\" : '1.0-0'}}\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { Food } from 'src/app/shared/models/food.model';\n\n@Component({\n  selector: 'app-food-info',\n  templateUrl: './food-info.component.html',\n  styleUrls: ['./food-info.component.scss']\n})\nexport class FoodInfoComponent implements OnInit {\n  @Input(\"food\") food: any ='an'\n  // @Input(\"deliveryDate\") food: Food;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div *ngIf=\"isStaff\" class=\"d-flex justify-content-end align-items-center\">\n        <img class=\"mr-2\" src=\"../../../assets/images/Wallet.svg\" alt=\"\" srcset=\"\">\n        <span>\n          company {{dailyLimit | currency:\"NGN\" : \"₦\" : '1.0-0'}} (left)\n          <!-- company {{this.user?.daily_limit | currency:\"NGN\" : \"₦\" : '1.0-0'}} (daily) -->\n          <!-- {{this.user?.today_daily_limit_left | currency:\"NGN\" : \"₦\" : '1.0-0'}} (left today) -->\n        </span>\n\n        <span class=\"mx-2\">\n          |\n        </span>\n        personal {{this.user?.personal_balance | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n      </div>\n    </div>\n\n    <div class=\"col-12\">\n      <div class=\"row justify-content-between\">\n        <div [ngClass]=\"{'col-lg-9': cart.length > 0, 'col-lg-12': cart.length === 0}\" class=\"px-0 mx-0\">\n          <div>\n            <div class=\"px-3 row align-items-center justify-content-between\">\n              <div class=\"d-none d-md-block col-auto\">\n\n                <div class=\"card banner-card bg-primary\">\n                  <div class=\"card-body\">\n                    <ul class=\"pl-3 mb-4 mr-5\">\n                      <li>\n                        <h6>\n                          SELECT VENDOR & MENU\n                        </h6>\n                      </li>\n                      <li>\n                        <h6>\n                          SELECT DAY OF THE WEEK\n                        </h6>\n                      </li>\n                      <li>\n                        <h6>\n                          ORDER & CHECKOUT\n                        </h6>\n                      </li>\n                    </ul>\n                    <img class=\"banner-calendar\" src=\"../../../assets/svg/banner-card-calendar.svg\" alt=\"\">\n                    <img class=\"banner-thumb\" src=\"../../../assets/svg/banner-card-thumb.svg\" alt=\"\">\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"col-sm-auto col-md-6 vendors\">\n                <!-- Vendor List -->\n                <nav mat-align-tabs=\"center\" mat-tab-nav-bar animationDuration=\"2000ms\">\n                  <!-- <nav mat-tab-nav-bar [backgroundColor]=\"background\"> -->\n                  <a mat-tab-link *ngFor=\"let vendor of vendors\" (click)=\"getCategories(vendor)\"\n                    [active]=\"selectedVendor == vendor\">\n                    <div class=\"d-flex flex-column\">\n                      <img [src]=\"vendor.user.image || '../../../assets/svg/restaurant.svg'\"\n                        class=\"img-fluid vendor-logo\" alt=\"\">\n                      <p class=\"small\">{{ vendor.bussiness_name }}</p>\n                    </div>\n                  </a>\n                  <!-- <a mat-tab-link> <span class=\"rounded\">\n                    <img src=\"../../../assets/svg/restaurant.svg\" class=\"img-fluid\" alt=\"\">\n                  </span> </a>\n                  <a mat-tab-link> <span class=\"rounded\">\n                    <img src=\"../../../assets/svg/resturant_logo.svg\" class=\"img-fluid\" alt=\"\">\n                  </span> </a> -->\n                </nav>\n              </div>\n\n              <div class=\"col-md-auto text-right y-auto\">\n                <p class=\"mb-0 f-w-700\">\n                  Select Date\n                </p>\n                <input [matDatepickerFilter]=\"dateFilter\" (dateInput)=\"setDeliveryDate($event.value)\" #dateInput\n                  class=\"invisible-input\" [value]=\"delivery_date\" [matDatepicker]=\"picker\">\n                <mat-datepicker #picker></mat-datepicker>\n                <img class=\"img-fluid\" (click)=\"picker.open()\" src=\"../../../assets/svg/date_range_light.svg\" alt=\"\">\n\n\n              </div>\n            </div>\n            <p class=\"mb-0 text-center f-w-400\">\n              {{ dateInput.value | date: 'fullDate' }}\n            </p>\n          </div>\n\n          <div class=\"container-fluid\">\n            <div class=\"mt-5 row justify-content-between\">\n              <div class=\"d-none d-md-block col-auto\">\n                <h5>\n                  Select Meal\n                </h5>\n              </div>\n              <div class=\"col-md-6\">\n                <nav *ngIf=\"categories.length > 0\" mat-tab-nav-bar animationDuration=\"2000ms\">\n                  <a mat-tab-link *ngFor=\"let category of categories\" (click)=\"selectedCategory = category; getFoods()\"\n                    [active]=\"selectedCategory === category\">\n                    {{ category.name }}\n                  </a>\n                </nav>\n              </div>\n              <div class=\"d-none d-md-block col-auto\">\n                <!-- <p> -->\n                <mat-form-field *ngIf=\"foodList.length > 0\" appearance=\"outline\">\n                  <mat-label>Search</mat-label>\n                  <input matInput placeholder=\"Placeholder\">\n                  <mat-icon matPrefix>search</mat-icon>\n                </mat-form-field>\n                <!-- </p> -->\n\n              </div>\n\n            </div>\n          </div>\n\n\n          <div class=\"container-fluid cat-foods\">\n            <div class=\"row\">\n              <ng-container class=\"food-list\" *ngIf=\"foodLoading == false && foodList?.length > 0\">\n                <!-- List of Food -->\n                <!-- <div class=\"food-list\"> -->\n                <div *ngFor=\"let food of foodList\"\n                  [ngClass]=\"{'col-md-3': cart.length > 0, 'col-md-2': cart.length === 0}\">\n                  <app-food (addToCart)=\"addToCart($event)\" [food]=food></app-food>\n                </div>\n                <!-- </div> -->\n              </ng-container>\n\n              <!-- Data Loading -->\n              <ng-container *ngIf=\"(foodLoading == true )&& (foodList.length == 0)\">\n                <div class=\"example-loading-shade\">\n                  <div class=\"mx-auto my-auto loader-box\">\n                    <div class=\"loader\">\n                      <div class=\"line bg-primary\"></div>\n                      <div class=\"line bg-primary\"></div>\n                      <div class=\"line bg-primary\"></div>\n                      <div class=\"line bg-primary\"></div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"mx-auto my-auto loader-box\">\n                  <div class=\"loader\">\n                    <div class=\"line bg-primary\"></div>\n                    <div class=\"line bg-primary\"></div>\n                    <div class=\"line bg-primary\"></div>\n                    <div class=\"line bg-primary\"></div>\n                  </div>\n                </div>\n              </ng-container>\n\n\n              <!-- No Data -->\n              <ng-container *ngIf=\"foodLoading == false && foodList.length == 0\">\n                <div class=\"empty-cart col-12\">\n                  <div class=\"mt-4 text-center\">\n                    <img class=\"empty-cart-image\" src=\"../../../assets/svg/empty_cart.svg\" alt=\"no data\">\n                  </div>\n                  <h1 class=\"mt-4 text-center\">\n                    No data\n                  </h1>\n                  <p class=\"text-center\">\n                    No data, please try again\n                  </p>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n\n          <div class=\"mt-5 d-flex justify-content-between\">\n            <div class=\"mr-5\">\n              <h5>\n                Recomended Foods\n              </h5>\n            </div>\n          </div>\n\n          <div class=\"container-fluid recomended-food\">\n            <div class=\"row\">\n\n              <ng-container *ngIf=\"recomendedFoods?.length > 0; else noRecFoodTemplate\">\n                <div *ngFor=\"let recomendedFood of recomendedFoods\"\n                  [ngClass]=\"{'col-md-3': cart?.length > 0, 'col-md-2': cart?.length === 0}\">\n                  <app-food (addToCart)=\"addToCart($event)\" [food]=recomendedFood></app-food>\n                </div>\n              </ng-container>\n              <ng-template #noRecFoodTemplate>\n                <h1 class=\"mb-4 text-center\">\n                  No recomended foods for you.\n                </h1>\n              </ng-template>\n\n\n              <!-- <div class=\"col-12\">\n                List of Food\n              </div> -->\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"cart.length > 0\" class=\"px-0 mx-0 col-md-3 basket-container\">\n          <app-basket (confirmOrder)=\"onConfirmOrder()\" (updateCart)=\"onUpdateBasket($event)\"\n            (removeFromCart)=\"onRemoveFromCart($event)\" [isLoading]=\"isLoading\" [cart]=\"cart\" [cartTotal]=\"cartTotal\">\n          </app-basket>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FoodService } from \"../../shared/services/food.service\";\nimport { VendorService } from \"../../shared/services/vendor.service\";\nimport { Vendor } from \"../../shared/models/vendor.model\";\nimport { Category, Food } from \"../../shared/models/food.model\";\nimport { CartService } from \"src/app/shared/services/cart.service\";\nimport { TransactionService } from \"src/app/transactions/transaction.service\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { SelectMealTypeComponent } from \"../select-meal-type/select-meal-type.component\";\nimport { Observable } from \"rxjs\";\nimport { shareReplay, take, takeLast } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-food-list\",\n  templateUrl: \"./food-list.component.html\",\n  styleUrls: [\"./food-list.component.scss\"],\n})\nexport class FoodListComponent implements OnInit {\n  vendors: Vendor[] = [];\n  selectedVendor: Vendor;\n  categories: Category[] = [];\n  selectedCategory: Category;\n  foodList: Food[] = [];\n  cart: Food[] = [];\n  recomendedFoods: Food[];\n  dailyLimit = 0;\n  personalBalance = 0;\n  allow_mix: boolean = true;\n  delivery_date: any;\n  isLoading: boolean = false;\n\n  dateFilter = (d: Date | null): boolean => {\n    let start_date: Date, end_date: Date, today: Date;\n    let allow = this.user.allow_same_day_booking;\n    start_date = new Date(this.user.start_booking_date);\n    start_date.setHours(0, 0, 0, 0);\n    end_date = new Date(this.user.end_booking_date);\n    today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return allow\n      ? start_date <= d && d >= today && d <= end_date\n      : start_date <= d && d > today && d <= end_date;\n  };\n  cartTotal: number;\n  isStaff: boolean;\n  isVend: boolean;\n  user: any;\n  foodLoading: boolean = true;\n  mealType: string;\n\n  constructor(\n    private foodService: FoodService,\n    private vendorService: VendorService,\n    private cartService: CartService,\n    private transactionService: TransactionService,\n    private helperService: HelperService,\n    private router: Router,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.transactionService.getIsLoading().subscribe((isLoading) => {\n      this.isLoading = isLoading;\n    });\n    this.getuserGroup();\n    this.foodService.getRecomended().subscribe((recomended) => {\n      this.vendors = recomended.vendors;\n      this.selectedVendor = this.vendors[0];\n      this.getCategories(this.selectedVendor);\n      this.recomendedFoods = recomended.inventory.map((element) => {\n        return { delivery_date: element.delivery_date, ...element.food };\n      });\n      let deliveryDate;\n      recomended.inventory.length > 0\n        ? (deliveryDate = recomended.inventory[0]?.delivery_date)\n        : (deliveryDate = new Date());\n      this.setDeliveryDate(deliveryDate);\n    });\n    this.getCart();\n    this.user = this.helperService.getUserInfo();\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      case \"emp\":\n        this.isStaff = true;\n        break;\n      case \"ven\":\n        this.isVend = true;\n        break;\n      // case 'sid':\n      //   this.isSid = true;\n      //   this.getCompanyArray()\n      //   break;\n      // case 'comp':\n      //   this.isComp = true;\n      //   this.company = companyID\n      // this.getCompanyArray()\n      // break;\n\n      default:\n        break;\n    }\n  }\n\n  setDeliveryDate(value) {\n    this.delivery_date = this.helperService.formatDate(value);\n    this.getDailyLimit();\n    this.getFoods();\n  }\n\n  getDailyLimit() {\n    this.transactionService\n      .getDailyLimit(this.delivery_date)\n      .subscribe((dailyLimit) => {\n        this.dailyLimit = dailyLimit;\n      });\n  }\n\n  // getVendors() {\n  //   this.vendorService.getVendors();\n  //   this.vendorService.getVendorsListener().subscribe((vendors) => {\n  //     this.vendors = vendors.results;\n  //     this.selectedVendor = this.vendors[0];\n  //     this.getCategories(this.selectedVendor);\n  //   });\n  // }\n\n  addToCart(food: Food) {\n    food.meal_type = this.mealType;\n    const subPrice = food.quantity * food.unit_price;\n    if (this.dailyLimit >= subPrice) {\n      this.cartService.inAddToCart(food);\n      // this.inAddToCart(food);\n    } else if (this.allow_mix) {\n      const allowance = this.personalBalance + this.dailyLimit;\n      if (allowance >= subPrice) {\n        const allow = confirm(\n          `Amount exceed company wallet, would you like to use your personal wallet?`\n        );\n        if (allow) {\n          this.cartService.inAddToCart(food);\n          // this.inAddToCart(food);\n        }\n      } else {\n        alert(\n          `Amount exceeds company wallet, Please topup your personal wallet to continue with this transaction`\n        );\n        this.router.navigate([\"/transactions/topup-personal\"]);\n      }\n    }\n    // this.cartListener.next([...this.cart]);\n  }\n\n  getCategories(vendor) {\n    this.foodLoading = true;\n    this.selectedVendor = vendor;\n    this.foodService.getCategorys(this.selectedVendor.user.id);\n    this.foodService\n      .getCategorysListenerUpdated()\n      .pipe(take(1))\n      .subscribe((categorries) => {\n        this.categories = categorries.results;\n        this.selectedCategory = this.categories[0];\n        if (this.selectedCategory) {\n          this.getFoods();\n        } else {\n          this.foodLoading = false;\n          this.foodList = [];\n        }\n      });\n  }\n\n  getFoods() {\n    if (this.selectedCategory && this.selectedVendor && this.delivery_date) {\n      this.selectMealType()\n        .pipe(take(1))\n        .subscribe((mealType: string) => {\n          if (mealType) {\n            this.mealType = mealType;\n            this.foodService.getFoodInventory(\n              this.selectedVendor.user.id,\n              this.selectedCategory.id,\n              this.delivery_date,\n              this.mealType\n            );\n            this.foodService\n              .getInventoryListenerUpdated()\n              .subscribe((foods) => {\n                console.log(foods);\n                this.foodLoading = false;\n                if (foods?.results) {\n                  this.foodList = foods.results.map((element) => {\n                    return {\n                      delivery_date: element.delivery_date,\n                      ...element.food,\n                    };\n                  });\n                } else {\n                  this.foodList = [];\n                }\n              });\n          } else {\n            this.foodLoading = false;\n            this.foodList = [];\n            return;\n          }\n        });\n    }\n  }\n\n  selectMealType(): Observable<string> {\n    return this.dialog\n      .open(SelectMealTypeComponent, {\n        disableClose: true,\n      })\n      .afterClosed();\n    // .subscribe((mealType: number) => {\n    //   this.mealType = mealType;\n    // });\n  }\n\n  getCart() {\n    this.cartService.getCart().subscribe((cart) => {\n      this.cart = cart.cart;\n      this.cartTotal = cart.total;\n      // this.cartService.calcCartTotal();\n    });\n  }\n\n  onRemoveFromCart(value: Food) {\n    this.cartService.removeFromCart(value);\n  }\n\n  onUpdateBasket(food: Food) {\n    let subPrice = food.quantity * food.unit_price;\n    if (this.dailyLimit >= subPrice) {\n      this.cartService.onUpdateCart(food);\n      // this.onUpdateCart(food);\n    } else if (this.allow_mix) {\n      const allowance = this.personalBalance + this.dailyLimit;\n      if (allowance >= subPrice) {\n        const allow = confirm(\n          `Amount exceed company wallet, would you like to use your personal wallet?`\n        );\n        if (allow) {\n          this.cartService.onUpdateCart(food);\n          // this.onUpdateCart(food);\n        }\n      } else {\n        alert(\n          `Amount exceeds company wallet, Please topup your personal wallet to continue with this transaction`\n        );\n        // navigate them to top up screen;\n        food.quantity = 1;\n        this.cartService.inAddToCart(food);\n        this.router.navigate([\"/transactions/topup-personal\"]);\n      }\n    }\n  }\n\n  onConfirmOrder() {\n    this.transactionService.placeOrder(this.cart);\n  }\n\n  formatDate(date) {\n    const newDate = new Date(date);\n    return this.helperService.formatDate(newDate);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FoodListComponent } from './food-list/food-list.component';\nimport { FoodDetailsComponent } from './food-details/food-details.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { InventoryTopupComponent } from './inventory-topup/inventory-topup.component';\nimport { CategoryListComponent } from './category-list/category-list.component';\nimport { CategoryTypeListComponent } from './category-type-list/category-type-list.component';\nimport { CategoryCreateComponent } from './category-create/category-create.component';\nimport { FoodTableComponent } from './food-table/food-table.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component:FoodListComponent\n  },\n  {\n    path: \"food-details\",\n    component:FoodDetailsComponent\n  },\n  {\n    path: \"food-table\",\n    component:FoodTableComponent\n  },\n  {\n    path: \"inventory\",\n    component:InventoryComponent\n  },\n  {\n    path: \"inventory-topup\",\n    component:InventoryTopupComponent\n  },\n  {\n    path: \"category\",\n    component:CategoryListComponent\n  },\n  {\n    path: \"category-create\",\n    component:CategoryCreateComponent\n  },\n  {\n    path: \"category-type\",\n    component:CategoryTypeListComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FoodRoutingModule { }\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n        <button (click)=\"openDialog()\" class=\"btn btn-sm btn-primary\">\n          <i class=\"mr-2 fa fa-plus\"></i>\n          Add Food\n        </button>\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n          <mat-spinner></mat-spinner>\n        </div>\n\n        <div class=\"table-responsive\">\n\n          <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n\n            <!-- Food Column -->\n            <ng-container matColumnDef=\"food\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Food </th>\n              <td mat-cell *matCellDef=\"let element\">\n                <img class=\"rounded table-img m-r-5\" [src]=\"element?.image\" [alt]=\"element.name\">\n                <!-- <img class=\"rounded-circle image-radius m-r-5\" [src]=\"element?.image\" [alt]=\"element.name\"> -->\n                {{element?.name || 'N/A' | titlecase}}\n              </td>\n            </ng-container>\n\n\n            <!-- Unit Price Column -->\n            <ng-container matColumnDef=\"unit_price\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n              <td mat-cell *matCellDef=\"let element\"> {{ element?.unit_price | currency:\"NGN\" : \"₦\" : '1.0-0' }} </td>\n            </ng-container>\n\n            <!-- Platform Column -->\n            <ng-container matColumnDef=\"category\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Category </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element?.category_full?.name  }} </td>\n            </ng-container>\n\n            <!-- Star Column -->\n            <ng-container matColumnDef=\"star\" stickyEnd>\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td mat-cell *matCellDef=\"let element\">\n                <button (click)=\"expandedElement = expandedElement === element ? null : element\" mat-icon-button\n                  class=\"btn btn-outline-primary\">\n                  <mat-icon>expand_more</mat-icon>\n                </button>\n              </td>\n            </ng-container>\n\n\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n            <ng-container matColumnDef=\"expandedDetail\">\n              <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n                <div class=\"example-element-detail\"\n                  [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                  <div class=\"container-fluid\">\n                    <app-food-info [food]=\"element\"></app-food-info>\n                    <div class=\"card-footer\">\n                      <div class=\"d-flex justify-content-end\">\n                        <!-- <button (click)=\"onDelete(element)\" class=\"mr-2\" mat-button color=\"warn\">Delete</button> -->\n                        <button (click)=\"openDialog(element)\" mat-raised-button color=\"primary\">Edit</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n              [class.example-expanded-row]=\"expandedElement === element\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n            </tr>\n          </table>\n          <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { Food } from 'src/app/shared/models/food.model';\nimport { FoodService } from 'src/app/shared/services/food.service';\nimport { HelperService } from 'src/app/shared/services/helper.service';\nimport { UserService } from 'src/app/user/user.service';\nimport { AddFoodComponent } from '../add-food/add-food.component';\nimport { DialogService } from \"../../shared/services/dialog.service\";\n@Component({\n  selector: 'app-food-table',\n  templateUrl: './food-table.component.html',\n  styleUrls: ['./food-table.component.scss'],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class FoodTableComponent implements OnInit {\n  downloading = false;\n  dataSource: Food[] = [];\n  tableLoading: boolean = true;\n  title = \"Foods\";\n  displayedColumns: any[] = [];\n  expandedElement: any;\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n  isStaff: boolean;\n  isSid: boolean;\n  isComp: boolean;\n  isVend: boolean;\n  vendor: any;\n\n  constructor(\n    private foodService: FoodService,\n    private userService: UserService,\n    private helperService: HelperService,\n    private dialog: MatDialog,\n    private dialogService: DialogService\n    ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.tableLoading = true;\n    this.getuserGroup();\n  }\n\n\n  openDialog(food = null) {\n    const dialogRef = this.dialog.open(AddFoodComponent, {\n      data: food\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.getFoodList()\n    });\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      case \"ven\":\n        this.isVend = true;\n        this.vendor = this.helperService.getUserInfo().id\n        this.getFoodList();\n        this.displayedColumns = [\n          // \"position\",\n          \"food\",\n          \"unit_price\",\n          \"category\",\n          \"star\",\n        ];\n        // this.getCompanyArray()\n        break;\n        // case 'sid':\n        //   this.isSid = true;\n        //   this.getCompanyArray()\n        //   break;\n        // case 'comp':\n        //   this.isComp = true;\n        //   this.company = companyID\n        // this.getCompanyArray()\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getFoodList() {\n    this.foodService.getFoods(this.vendor, null, this.pageSize, this.pageIndex)\n    this.foodService.getFoodListenerUpdate()\n    .subscribe((foodList) => {\n      this.dataSource = foodList.results\n      console.log(this.dataSource)\n      this.length = foodList.count\n      this.tableLoading = false\n    })\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getFoodList();\n    this.tableLoading = true;\n  }\n\n  onDelete(food) {\n    this.dialogService.openConfirmDialog()\n    .afterClosed()\n    .subscribe((value) => {\n      if (value === true) {\n        this.foodService.deleteFood(food)\n        .subscribe((listener) => {this.getFoodList()})\n      }\n    })\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { FoodRoutingModule } from \"./food-routing.module\";\nimport { FoodListComponent } from \"./food-list/food-list.component\";\nimport { FoodComponent } from \"./food/food.component\";\nimport { BasketComponent } from \"./basket/basket.component\";\nimport { FoodDetailsComponent } from \"./food-details/food-details.component\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { InventoryComponent } from \"./inventory/inventory.component\";\nimport { InventoryTopupComponent } from \"./inventory-topup/inventory-topup.component\";\nimport { CategoryTypeListComponent } from \"./category-type-list/category-type-list.component\";\nimport { CategoryListComponent } from \"./category-list/category-list.component\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { CategoryCreateComponent } from \"./category-create/category-create.component\";\nimport { AddFoodComponent } from \"./add-food/add-food.component\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { OtherFoodsComponent } from \"./inventory/other-foods/other-foods.component\";\nimport { CurrentInventoryComponent } from \"./inventory/current-inventory/current-inventory.component\";\nimport { CategoryTypeCreateComponent } from './category-type-create/category-type-create.component';\nimport { FoodTableComponent } from './food-table/food-table.component';\nimport { FoodInfoComponent } from './food-info/food-info.component';\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectMealTypeComponent } from './select-meal-type/select-meal-type.component';\n\n@NgModule({\n  declarations: [\n    FoodListComponent,\n    FoodComponent,\n    BasketComponent,\n    FoodDetailsComponent,\n    InventoryComponent,\n    InventoryTopupComponent,\n    CategoryTypeListComponent,\n    CategoryListComponent,\n    CategoryCreateComponent,\n    AddFoodComponent,\n    OtherFoodsComponent,\n    CurrentInventoryComponent,\n    CategoryTypeCreateComponent,\n    FoodTableComponent,\n    FoodInfoComponent,\n    SelectMealTypeComponent,\n  ],\n  imports: [\n    CommonModule,\n    FoodRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatDatepickerModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatTableModule,\n    SharedModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ],\n})\nexport class FoodModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Food } from \"src/app/shared/models/food.model\";\n\n@Component({\n  selector: \"app-food\",\n  templateUrl: \"./food.component.html\",\n  styleUrls: [\"./food.component.scss\"],\n})\nexport class FoodComponent implements OnInit {\n  @Input(\"food\") food: Food;\n  @Output(\"addToCart\") addToCart = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onAddToCart(food: Food) {\n    food.quantity = 1;\n    this.addToCart.emit(food);\n  }\n}\n","<!-- <p>food works!</p> -->\n<div [matTooltip]=\"food.name\" class=\"mt-5 card bg-primary mx-1\">\n  <div class=\"card-body\">\n    <img class=\"rounded-circle image-radius mx-auto img-fluid food-img d-block\" [src]=\"food?.image\" [alt]=\"food?.name\">\n    <p class=\"text-center mb-1 mt-3\">\n      {{ (food?.name.length>23)? (food.name | slice:0:16)+'...':(food.name)}}\n    </p>\n    <p class=\"text-center\">\n      {{food?.unit_price| currency:\"NGN\" : \"₦\" : '1.0-0'}}\n    </p>\n\n    <!-- <div class=\"example-button-container\"> -->\n      <div class=\"d-flex justify-content-between\">\n        <button (click)=\"onAddToCart(food)\" class=\"d-block btn-sm mx-auto btn add-to-cart-button\" >\n          <mat-icon>shopping_cart</mat-icon>\n        </button>\n\n        <!-- <button (click)=\"onAddToCart(food)\" class=\"d-block btn-sm mx-auto btn add-to-cart-button\" >\n          <mat-icon>info</mat-icon>\n        </button> -->\n\n      </div>\n    <!-- </div> -->\n  </div>\n</div>\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>{{title | titlecase}}</h5>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions [downloading]=\"downloading\"></app-table-functions>\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n          <mat-spinner></mat-spinner>\n        </div>\n\n        <div class=\"table-responsive\">\n\n          <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n            <!-- position Column -->\n            <ng-container matColumnDef=\"position\" sticky>\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n              <td class=\"text-center\" mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n\n            <!-- Contact Name Column -->\n            <ng-container matColumnDef=\"created_by\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> By </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.created_by || 'N/A'}}</td>\n            </ng-container>\n\n            <!-- Contact Email Column -->\n            <ng-container matColumnDef=\"company\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> For</th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.company || 'N/A'}} </td>\n            </ng-container>\n\n            <!-- Company Name Column -->\n            <ng-container matColumnDef=\"top_up_quantity\">\n              <th mat-header-cell *matHeaderCellDef> Quantity </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.top_up_quantity || 'N/A'}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"date\">\n              <th mat-header-cell *matHeaderCellDef> Date </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.date || 'N/A'}} </td>\n            </ng-container>\n\n            <!-- Star Column -->\n            <ng-container matColumnDef=\"star\" stickyEnd>\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td mat-cell *matCellDef=\"let element\">\n                <mat-icon>more_vert</mat-icon>\n              </td>\n            </ng-container>\n\n\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n            <ng-container matColumnDef=\"expandedDetail\">\n              <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n                <div class=\"example-element-detail\"\n                  [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                  <div class=\"example-element-diagram\">\n                    <div class=\"example-element-position\"> {{element.position}} </div>\n                    <div class=\"example-element-symbol\"> {{element.position}} </div>\n                    <div class=\"example-element-name\"> {{element.name}} </div>\n                    <div class=\"example-element-weight\"> {{element.position}} </div>\n                  </div>\n                  <div class=\"example-element-description\">\n                    {{element.description}}\n                  </div>\n                </div>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n              [class.example-expanded-row]=\"expandedElement === element\"\n              (click)=\"expandedElement = expandedElement === element ? null : element\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n            </tr>\n          </table>\n          <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { UserService } from \"src/app/user/user.service\";\n\n@Component({\n  selector: \"app-inventory-topup\",\n  templateUrl: \"./inventory-topup.component.html\",\n  styleUrls: [\"./inventory-topup.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class InventoryTopupComponent implements OnInit {\n  downloading = false;\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  // dataSource = new MatTableDataSource([]);\n  title = \"Inventory Topup\";\n  displayedColumns: any[] = [\n    \"position\",\n    \"created_by\",\n    \"company\",\n    \"top_up_quantity\",\n    \"date\",\n    \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n\n  constructor(\n    private foodService: FoodService,\n  ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.tableLoading = true;\n    this.getInventoryTopup();\n  }\n\n  getInventoryTopup() {\n    this.foodService.getInventoryTopUp(this.pageSize, this.pageIndex);\n    this.foodService\n      .getInventoryTopUpListenerUpdated()\n      .subscribe((inventory: any) => {\n        if (inventory.results) {\n          this.length = inventory.count;\n          this.dataSource = inventory.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getInventoryTopup();\n    this.tableLoading = true;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n    <mat-spinner></mat-spinner>\n  </div>\n\n  <div class=\"table-responsive\">\n\n\n    <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n\n      <!-- Contact Name Column -->\n      <ng-container matColumnDef=\"food\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Food </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <img class=\"rounded table-img m-r-5\" [src]=\"element?.food?.image\" [alt]=\"element?.food.name\">\n          {{element?.food?.name || 'N/A' | titlecase}}\n        </td>\n      </ng-container>\n\n      <!-- Contact Email Column -->\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{element.food.unit_price | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n        </td>\n      </ng-container>\n\n      <!-- Company Name Column -->\n      <ng-container matColumnDef=\"quantity_left\">\n        <th mat-header-cell *matHeaderCellDef> Stock </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{element.quantity_left || 'N/A'}}\n        </td>\n      </ng-container>\n\n      <!-- Vendor Name Column -->\n      <ng-container *ngIf=\"!isVen\" matColumnDef=\"vendor\">\n        <th mat-header-cell *matHeaderCellDef> Vendor </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{element?.created_by?.bussiness_name || 'N/A'}}\n        </td>\n      </ng-container>\n\n      <!-- Star Column -->\n      <ng-container matColumnDef=\"star\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button (click)=\"expandedElement = expandedElement === element ? null : element\" mat-icon-button\n            class=\"btn btn-outline-primary\">\n            <mat-icon>expand_more</mat-icon>\n          </button>\n          <!-- <mat-icon (click)=\"expandedElement = expandedElement === element ? null : element\">more_vert</mat-icon> -->\n        </td>\n      </ng-container>\n\n\n      <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n      <ng-container matColumnDef=\"expandedDetail\">\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n          <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n            <div class=\"mt-3 card bg-secondary text-gray-1\">\n              <div class=\"card-body \">\n                <div class=\"d-flex\">\n                  <div class=\"col-2\">\n                    <img [src]=\"element.food.image\" class=\"img-thumbnail\" [alt]=\"element.food.name\">\n                    <br>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"mx-auto col-10\">\n                      <div class=\"row\">\n                        <p class=\"mb-0 col-12\">\n                          Name\n                        </p>\n                        <h6 class=\"col-12\">\n                          {{element.food.name | titlecase}}\n                        </h6>\n                        <p class=\"text-justify col-12\">\n                          {{element.food.description || \"Lorem ipsum dolor sit amet consec\"}}\n                        </p>\n                        <div class=\"col-6\">\n                          <p class=\"mb-0\">Category</p>\n                          <h6>\n                            {{element?.food?.category_full?.name }}\n                          </h6>\n                        </div>\n                        <div class=\"col-6\">\n                          <p class=\"mb-0\">Vendor</p>\n                          <h6>\n                            {{element?.created_by?.bussiness_name | titlecase}}\n                          </h6>\n                        </div>\n                      </div>\n\n                      <mat-form-field class=\"mt-3 col-6 comment\" appearance=\"outline\">\n                        <mat-label>Stock</mat-label>\n                        <input [disabled]=\"!isVen\" [(ngModel)]=\"element.quantity_left\" matInput>\n                      </mat-form-field>\n\n                      <mat-form-field class=\"mt-3 col-6 comment\" appearance=\"outline\">\n                        <mat-label>Meal Type</mat-label>\n                        <mat-select [(ngModel)]=\"element.meal_type\">\n                          <!-- <mat-option>None</mat-option> -->\n                          <mat-option *ngFor=\"let mealType of mealTypes\" [value]=\"mealType.id\">{{mealType.name}}\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"d-flex justify-content-end\">\n                  <div>\n                    delivery date: {{element.delivery_date}}\n                  </div>\n\n                  <div class=\"text-success\" *ngIf=\"element.delivered_date\">\n                    delivered date: {{element.delivered_date}}\n                  </div>\n                </div>\n\n              </div>\n              <div *ngIf=\"isVen\" class=\"card-footer\">\n                <div class=\"d-flex justify-content-between\">\n                  <!-- <button (click)=\"onDeleteInventory(element)\" mat-button color=\"warn\">Delete</button> -->\n                  <button [disabled]=\"isLoading == true\" (click)=\"onUpdateInventory(element)\" mat-raised-button\n                    color=\"primary\"> <i class=\"fa fa-spin fa-spinner\" *ngIf=\"isLoading==true\"></i> Update</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n        [class.example-expanded-row]=\"expandedElement === element\">\n      </tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n      </tr>\n    </table>\n    <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n  </div>\n\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { DialogService } from \"src/app/shared/services/dialog.service\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { NotificationService } from \"src/app/shared/services/notification.service\";\n\n@Component({\n  selector: \"app-current-inventory\",\n  templateUrl: \"./current-inventory.component.html\",\n  styleUrls: [\"./current-inventory.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class CurrentInventoryComponent implements OnInit, OnChanges {\n  @Input(\"isVen\") isVen;\n  @Input(\"deliveryDate\") deliveryDate;\n  @Input(\"vendor\") vendor;\n  @Input(\"mealTypes\") mealTypes: any[];\n  @Output(\"updateInventory\") updateInventory = new EventEmitter<any>();\n\n  tableLoading: boolean;\n  dataSource: any[];\n  displayedColumns: any[] = [\n    // \"position\",\n    \"food\",\n    \"price\",\n    \"quantity_left\",\n    \"star\",\n  ];\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n  isLoading: any;\n\n  constructor(\n    private foodService: FoodService,\n    private notificationService: NotificationService\n  ) {}\n\n  ngOnInit(): void {\n    // this.getInventory()\n    this.isVen ? this.displayedColumns = [\"food\", \"price\", \"quantity_left\", \"star\"]: this.displayedColumns = [\"food\", \"price\", \"quantity_left\", \"vendor\", \"star\",]\n    this.foodService.getIsToppingUp().subscribe((isLoading) => {\n      this.isLoading = isLoading;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    this.getInventory();\n  }\n\n  test() {\n    console.log(`gimme a sec`);\n  }\n\n  getInventory() {\n    this.tableLoading = true;\n    this.foodService.getInventory(\n      this.vendor,\n      this.deliveryDate,\n      this.pageSize,\n      this.pageIndex\n    );\n    this.foodService\n      .getInventoryListenerUpdated()\n      .subscribe((inventory: any) => {\n        if (inventory.results) {\n          this.length = inventory.count;\n          this.dataSource = inventory.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n        // this.dataSource = new MatTableDataSource(orderHistory);\n        // this.dataSource.sort = this.sort;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getInventory();\n    this.tableLoading = true;\n  }\n\n  onUpdateInventory(element) {\n    if (element.meal_type) {\n      this.updateInventory.emit(element);\n    } else {\n      this.notificationService.warning(\n        \"Warning\",\n        \"Kindly select a meal type and enter a valid quantity\"\n      );\n    }\n  }\n\n  // onDeleteInventory(food) {\n  //   this.dialogService.openConfirmDialog()\n  //   .afterClosed()\n  //   .subscribe((value) => {\n  //     if (value) {\n  //       this.foodService.deleteInventory(food)\n  //     }\n  //   })\n  // }\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n        <button *ngIf=\"isVen\" (click)=\"openDialog()\" class=\"btn btn-sm btn-primary\">\n          <i class=\"mr-2 fa fa-plus\"></i>\n          Add Food\n        </button>\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions [datePicker]=\"true\" [hideDownload]=\"hideDownload\" [downloading]=\"downloading\"\n        [vendorArray]=\"vendorArray\" (vendorChange)=\"vendorChange($event)\" (exportExcel)=\"onExportExcel()\"\n        [rangePicker]=\"false\" (setDate)=\"setDeliveryDate($event)\"></app-table-functions>\n\n      <!-- <mat-tab-group>\n        <mat-tab label=\"Current Inventory\">\n          <app-current-inventory (updateInventory)=\"onUpdateInventory($event)\" [vendor]=\"vendor\" [isVen]=\"isVen\"\n            [deliveryDate]=\"deliveryDate\"></app-current-inventory>\n        </mat-tab>\n        <mat-tab label=\"Other Foods\">\n          <app-other-foods (updateInventory)=\"onUpdateInventory($event)\" [vendor]=\"vendor\" [isVen]=\"isVen\"\n            [deliveryDate]=\"deliveryDate\"></app-other-foods>\n        </mat-tab>\n      </mat-tab-group> -->\n\n      <ul class=\"nav nav-tabs \">\n        <li class=\"nav-item\">\n          <a [ngClass]=\"{'active': view === 'inventory'}\" (click)=\"toggleView('inventory')\" class=\"nav-link\">Current\n            Inventory</a>\n        </li>\n        <li class=\"nav-item\">\n          <a [ngClass]=\"{'active': view === 'food'}\" (click)=\"toggleView('food')\" class=\"nav-link\">Other\n            Foods</a>\n        </li>\n      </ul>\n      <ng-container *ngIf=\"view == 'inventory';\">\n        <app-current-inventory (updateInventory)=\"onUpdateInventory($event)\" [mealTypes]=\"mealTypes\" [vendor]=\"vendor\"\n          [isVen]=\"isVen\" [deliveryDate]=\"deliveryDate\"></app-current-inventory>\n      </ng-container>\n      <ng-container *ngIf=\"view == 'food';\">\n        <app-other-foods (updateInventory)=\"onUpdateInventory($event)\" [mealTypes]=\"mealTypes\" [vendor]=\"vendor\"\n          [isVen]=\"isVen\" [deliveryDate]=\"deliveryDate\"></app-other-foods>\n      </ng-container>\n\n\n\n    </div>\n  </div>\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { User } from \"src/app/auth/login-info\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { UserService } from \"src/app/user/user.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { AddFoodComponent } from \"../add-food/add-food.component\";\n\n@Component({\n  selector: \"app-inventory\",\n  templateUrl: \"./inventory.component.html\",\n  styleUrls: [\"./inventory.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class InventoryComponent implements OnInit {\n  hideDownload: boolean = true;\n  isLoading: boolean = false;\n  vendorArray: any[];\n  downloading = false;\n  // range = new FormGroup({\n  //   start: new FormControl(),\n  //   end: new FormControl(),\n  // });\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  // dataSource = new MatTableDataSource([]);\n  title = \"Inventory\";\n  displayedColumns: any[] = [\n    // \"position\",\n    \"food\",\n    \"price\",\n    \"quantity_left\",\n    \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n\n  deliveryDate: string;\n  vendor: any = \"\";\n  isStaff: boolean;\n  isVen: boolean;\n  foods: any[];\n  isComp: boolean;\n  view: string;\n  mealTypes: any[];\n\n  constructor(\n    private foodService: FoodService,\n    private userService: UserService,\n    private helperService: HelperService,\n    private dialog: MatDialog\n  ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.tableLoading = true;\n    this.deliveryDate = this.helperService.formatDate(new Date());\n    this.getuserGroup();\n    this.foodService.getIsToppingUp().subscribe((isLoading) => {\n      this.isLoading = isLoading;\n    });\n    this.view = \"inventory\";\n  }\n\n  toggleView(view: string) {\n    this.view = view;\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(AddFoodComponent);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      // refresh the view\n    });\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      // case \"emp\":\n      //   this.isStaff = true;\n      //   break;\n      case \"ven\":\n        this.isVen = true;\n        const user: User = this.helperService.getUserInfo();\n        this.vendor = user.id;\n        this.getMealTypes();\n\n        break;\n      // case 'sid':\n      //   this.isSid = true;\n      //   this.getVendorArray()\n      //   break;\n      case \"cmp_adm\":\n        this.isComp = true;\n        // this.company = companyID\n        this.getVendorArray();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getVendorArray() {\n    this.userService.getVendors();\n    this.userService.getVendorsUpdate().subscribe((vendors) => {\n      const vendorArray = vendors.results.map((element) => {\n        return { name: element.bussiness_name, id: element.user.id };\n      });\n      this.vendorArray = [{ id: \"\", name: \"All Vendors\" }, ...vendorArray];\n    });\n  }\n\n  getMealTypes() {\n    this.foodService.getMealTypes().subscribe((mealTypes) => {\n      this.mealTypes = mealTypes;\n    });\n  }\n\n  vendorChange(value) {\n    this.vendor = value;\n    this.tableLoading = true;\n  }\n\n  setDeliveryDate(value) {\n    this.deliveryDate = this.helperService.formatDate(value.value);\n    this.tableLoading = true;\n  }\n\n  onUpdateInventory(element) {\n    this.isLoading = true;\n    const data = {\n      food: element.food.id,\n      delivery_date: this.deliveryDate,\n      top_up_quantity: element.quantity_left,\n      meal_type: element.meal_type,\n    };\n    this.foodService.topupInventory(data);\n  }\n\n  onExportExcel() {\n    this.downloading = !this.downloading;\n    let data;\n    if (this.isStaff) {\n      data = this.dataSource.map((element) => {\n        return {\n          name: element?.food?.name,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          vendor_user_id: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    } else if (this.isComp) {\n      data = this.dataSource.map((element) => {\n        return {\n          user: element?.user,\n          vendor_user_id: element?.vendor_user_id,\n          name: element?.food,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          comment: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    } else if (this.isVen) {\n      data = this.dataSource.map((element) => {\n        return {\n          user: element?.user,\n          company: element?.company,\n          name: element?.food,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          comment: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    }\n    //else if(this.isSid) {\n    //   data = this.dataSource.map((element) => {\n    //     return {\n    //       company: element?.company,\n    //       user: element?.user,\n    //       vendor_user_id: element?.vendor_user_id,\n    //       name: element?.food,\n    //       quantity: element?.quantity,\n    //       platform: element?.platform,\n    //       comment: element?.vendor_user_id_full?.bussiness_name,\n    //       status: element?.status,\n    //     };\n    //   });\n    // }\n    this.helperService.exportExcel(data, \"transactions\", this.displayedColumns);\n    this.downloading = !this.downloading;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n    <mat-spinner></mat-spinner>\n  </div>\n\n  <div class=\"table-responsive\">\n\n\n    <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n\n      <!-- Contact Name Column -->\n      <ng-container matColumnDef=\"food\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Food </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <img class=\"rounded table-img m-r-5\" [src]=\"element?.food?.image\" [alt]=\"element?.food?.name\">\n          {{element?.food?.name || 'N/A' | titlecase}}\n        </td>\n      </ng-container>\n\n      <!-- Contact Email Column -->\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{element?.food?.unit_price | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n        </td>\n      </ng-container>\n\n      <!-- Company Name Column -->\n      <ng-container matColumnDef=\"quantity_left\">\n        <th mat-header-cell *matHeaderCellDef> Stock </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.quantity_left || 'N/A'}} </td>\n      </ng-container>\n\n      <!-- Vendor Name Column -->\n      <ng-container *ngIf=\"!isVen\" matColumnDef=\"vendor\">\n        <th mat-header-cell *matHeaderCellDef> Vendor </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{element?.food?.created_by_full?.bussiness_name || 'N/A'}}\n        </td>\n      </ng-container>\n\n      <!-- Star Column -->\n      <ng-container matColumnDef=\"star\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button (click)=\"expandedElement = expandedElement === element ? null : element\" mat-icon-button\n            class=\"btn btn-outline-primary\">\n            <mat-icon>expand_more</mat-icon>\n          </button>\n          <!-- <mat-icon (click)=\"expandedElement = expandedElement === element ? null : element\">more_vert</mat-icon> -->\n        </td>\n      </ng-container>\n\n\n      <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n      <ng-container matColumnDef=\"expandedDetail\">\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n          <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n            <div class=\"mt-3 card bg-secondary text-gray-1\">\n              <div class=\"card-body \">\n                <div class=\"d-flex\">\n                  <div class=\"col-2\">\n                    <img [src]=\"element?.food?.image\" class=\"img-thumbnail\" [alt]=\"element?.food?.name\">\n                    <br>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"mx-auto col-10\">\n                      <div class=\"row\">\n                        <p class=\"mb-0 col-12\">\n                          Name\n                        </p>\n                        <h6 class=\"col-12\">\n                          {{element?.food?.name | titlecase}}\n                        </h6>\n                        <p class=\"text-justify col-12\">\n                          {{element?.food?.description}}\n                        </p>\n                        <div class=\"col-6\">\n                          <p class=\"mb-0\">Category</p>\n                          <h6>\n                            {{element?.food?.category_full?.name | titlecase }}\n                          </h6>\n                        </div>\n                        <div class=\"col-6\">\n                          <p class=\"mb-0\">Vendor</p>\n                          <h6>\n                            {{element?.food?.created_by_full?.bussiness_name | titlecase}}\n                          </h6>\n                        </div>\n                      </div>\n\n                      <mat-form-field class=\"mt-3 col-6 comment\" appearance=\"outline\">\n                        <mat-label>Stock</mat-label>\n                        <input [readonly]=\"!isVen\" [(ngModel)]=\"element.quantity_left\" matInput>\n                      </mat-form-field>\n\n                      <mat-form-field class=\"mt-3 col-6 comment\" appearance=\"outline\">\n                        <mat-label>Meal Type</mat-label>\n                        <mat-select [(ngModel)]=\"element.meal_type\">\n                          <!-- <mat-option>None</mat-option> -->\n                          <mat-option *ngFor=\"let mealType of mealTypes\" [value]=\"mealType.id\">{{mealType.name}}\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n              <div *ngIf=\"isVen\" class=\"card-footer\">\n                <div class=\"d-flex justify-content-between\">\n                  <!-- <button (click)=\"onDeleteInventory(element)\" mat-button color=\"warn\">Delete</button> -->\n                  <button [disabled]=\"isLoading == true\" (click)=\"onUpdateInventory(element)\" mat-raised-button\n                    color=\"primary\"> <i class=\"fa fa-spin fa-spinner\" *ngIf=\"isLoading==true\"></i> Update</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n        [class.example-expanded-row]=\"expandedElement === element\">\n      </tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n      </tr>\n    </table>\n    <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n  </div>\n\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { NotificationService } from \"src/app/shared/services/notification.service\";\n\n@Component({\n  selector: \"app-other-foods\",\n  templateUrl: \"./other-foods.component.html\",\n  styleUrls: [\"./other-foods.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class OtherFoodsComponent implements OnInit, OnChanges {\n  @Input(\"isVen\") isVen;\n  @Input(\"deliveryDate\") deliveryDate;\n  @Input(\"vendor\") vendor: number;\n  @Input(\"mealTypes\") mealTypes: any[];\n  @Output(\"updateInventory\") updateInventory = new EventEmitter<any>();\n  tableLoading: boolean;\n  displayedColumns: any[] = [\n    // \"position\",\n    \"food\",\n    \"price\",\n    \"quantity_left\",\n    \"star\",\n  ];\n  dataSource: any[];\n  length: number;\n\n  private pageSize: number;\n  private pageIndex: number;\n  isLoading: boolean;\n\n  constructor(\n    private foodService: FoodService,\n    private notificationService: NotificationService\n  ) {}\n\n  ngOnInit(): void {\n    this.isVen ? this.displayedColumns = [\"food\", \"price\", \"quantity_left\", \"star\"]: this.displayedColumns = [\"food\", \"price\", \"quantity_left\", \"vendor\", \"star\",]\n    this.foodService.getIsToppingUp().subscribe((isLoading) => {\n      this.isLoading = isLoading;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.getOtherFoods();\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n  }\n\n  getOtherFoods() {\n    this.tableLoading = true;\n    this.foodService\n      .getOtherFoods(\n        this.vendor,\n        this.deliveryDate,\n        this.pageSize,\n        this.pageIndex\n      )\n      .subscribe((otherFoods) => {\n        this.dataSource = otherFoods.results.map((element) => {\n          return {\n            food: element,\n            quantity_left: 0,\n            top_up_quantity: 0,\n          };\n        });\n        this.length = otherFoods.count;\n        this.tableLoading = false;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getOtherFoods();\n    this.tableLoading = true;\n  }\n\n  onUpdateInventory(element) {\n    if (element.meal_type && element.quantity_left) {\n      this.updateInventory.emit(element);\n    } else {\n      this.notificationService.warning(\n        \"Warning\",\n        \"Kindly select a meal type and enter a valid quantity\"\n      );\n    }\n  }\n}\n","<div class=\"d-flex justify-content-end\">\n  <button mat-icon-button mat-dialog-close>\n    <mat-icon>close</mat-icon>\n  </button>\n\n</div>\n<div class=\"container my-5\">\n  <h3 class=\"mb-4 text-center text-primary\">\n    Please select meal type.\n  </h3>\n  <div class=\"row\">\n    <div class=\"col-auto mx-auto\">\n      <mat-button-toggle-group class=\"mx-auto\" (change)=\"onChange($event)\" appearance=\"\">\n        <mat-button-toggle *ngFor=\"let mealType of mealTypes\" [value]=\"mealType\">{{mealType.name}}\n        </mat-button-toggle>\n      </mat-button-toggle-group>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { MatButtonToggleChange } from \"@angular/material/button-toggle\";\nimport { MatDialogRef } from \"@angular/material/dialog\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\n\n@Component({\n  selector: \"app-select-meal-type\",\n  templateUrl: \"./select-meal-type.component.html\",\n  styleUrls: [\"./select-meal-type.component.scss\"],\n})\nexport class SelectMealTypeComponent implements OnInit {\n  mealTypes: any[];\n  constructor(\n    private foodService: FoodService,\n    public dialogRef: MatDialogRef<SelectMealTypeComponent>\n  ) {}\n\n  ngOnInit(): void {\n    this.getMealTypes();\n  }\n\n  getMealTypes() {\n    this.foodService.getMealTypes().subscribe((mealTypes) => {\n      this.mealTypes = mealTypes;\n    });\n  }\n\n  onChange(event: MatButtonToggleChange) {\n    this.dialogRef.close(event.value.id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ConfirmDialogComponent } from \"../components/confirm-dialog/confirm-dialog.component\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(private dialog: MatDialog) {}\n\n\n  openConfirmDialog(title=\"Are you sure?\", message = \"You won't be able to revert this!\") {\n    return this.dialog.open(ConfirmDialogComponent, {\n      // width: \"450px\",\n      // panelClass: \"confirm-dialog-container\",\n      disableClose: true,\n      // position: { top: \"10px\" },\n      data: {\n        title: title,\n        message: message,\n      },\n    });\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport { environment } from \"../../../environments/environment\";\nimport { Food } from \"../models/food.model\";\nimport { PaginatedResponse } from \"../models/response.model\";\nimport { Vendor } from \"../models/vendor.model\";\nimport { NotificationService } from \"./notification.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FoodService {\n  private apiUrl = environment.url;\n  private categories;\n  private categoriesListener = new Subject<PaginatedResponse>();\n  private categoryTypes: PaginatedResponse = new PaginatedResponse();\n  private categoryTypesListener = new Subject<PaginatedResponse>();\n  private inventoryTopup: PaginatedResponse = new PaginatedResponse();\n  private inventoryTopupListener = new Subject<PaginatedResponse>();\n  private inventory: PaginatedResponse = new PaginatedResponse();\n  private inventoryListener = new Subject<PaginatedResponse>();\n  private ratings: PaginatedResponse = new PaginatedResponse();\n  private ratingsListener = new Subject<PaginatedResponse>();\n  private foods: PaginatedResponse = new PaginatedResponse();\n  private foodsListener = new Subject<PaginatedResponse>();\n  private otherFoods: PaginatedResponse = new PaginatedResponse();\n  private otherFoodsListener = new Subject<PaginatedResponse>();\n  private isToppingUpListener = new Subject<boolean>();\n  private foodCreateListener = new Subject<boolean>();\n  private imageUpdateListener = new Subject<boolean>();\n  private recomended: { inventory: Food[]; vendors: Vendor[] };\n  private recomendedListener = new Subject<{\n    inventory: any[];\n    vendors: Vendor[];\n  }>();\n  private mealTypes: any[];\n  private mealTypesListener = new Subject<any[]>();\n\n  constructor(\n    private http: HttpClient,\n    private notificationService: NotificationService\n  ) {}\n\n  createFood(food) {\n    this.http.post(`${this.apiUrl}food/foods/`, food).subscribe(\n      (response) => {\n        this.notificationService.info(`Success`, `Food created`);\n        this.foodCreateListener.next(true);\n      },\n      (err) => {\n        this.foodCreateListener.next(false);\n        this.notificationService.warning(`Error`, `Food not created`);\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  editFood(food) {\n    this.http.patch(`${this.apiUrl}food/foods/${food.id}/`, food).subscribe(\n      (response) => {\n        this.notificationService.info(`Success`, `Food edited`);\n        this.foodCreateListener.next(true);\n      },\n      (err) => {\n        this.notificationService.warning(`Error`, `Food not edited`);\n        this.foodCreateListener.next(false);\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  editFoodImage(image, food) {\n    this.http.patch(`${this.apiUrl}food/foods/${food.id}/`, image).subscribe(\n      (response) => {\n        this.notificationService.info(`Success`, `Image Saved`);\n        this.imageUpdateListener.next(true);\n      },\n      (err) => {\n        this.notificationService.warning(`Error`, `Image corrupted`);\n        this.imageUpdateListener.next(false);\n      }\n    );\n    return this.imageUpdateListener.asObservable();\n  }\n\n  deleteFood(food) {\n    this.http.delete(`${this.apiUrl}food/foods/${food.id}/`).subscribe(\n      (response) => {\n        this.notificationService.danger(\"Delete\", \"Your food has been deleted\");\n        this.foodCreateListener.next(true);\n      },\n      (err) => {\n        this.notificationService.danger(\"Unsuccessful\", \"An error occured\");\n        this.foodCreateListener.next(false);\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  getFoods(vendor, category = null, pageSize = 10, pageIndex = 1) {\n    const query = `?limit=${pageSize}&offset=${pageIndex}${\n      vendor ? \"vendor=\" + vendor : \"\"\n    }${category ? \"&category=\" + category : \"\"}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/foods/${query}`)\n      .subscribe(\n        (res) => {\n          this.foods = res;\n          this.foodsListener.next({ ...this.foods });\n        },\n        (err) => {}\n      );\n  }\n\n  getOtherFoods(vendor, delivery_date, pageSize = 10, pageIndex = 1) {\n    const query = `?limit=${pageSize}&offset=${pageIndex}${\n      delivery_date ? \"&delivery_date=\" + delivery_date : \"\"\n    }${vendor ? \"&vendor=\" + vendor : \"\"}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/inventory-unused${query}`)\n      .subscribe(\n        (res) => {\n          this.otherFoods = res;\n          this.otherFoodsListener.next({ ...this.otherFoods });\n        },\n        (err) => {}\n      );\n\n    return this.otherFoodsListener.asObservable();\n  }\n\n  getFoodListenerUpdate() {\n    return this.foodsListener.asObservable();\n  }\n\n  createCategory(category) {\n    this.http.post(`${this.apiUrl}food/categorys/`, category).subscribe(\n      (response) => {\n        this.notificationService.success(\"success\", \"Category created!!!\");\n        this.foodCreateListener.next(true);\n      },\n      (err) => {\n        this.foodCreateListener.next(false);\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  editCategory(category) {\n    this.http\n      .patch(`${this.apiUrl}food/categorys/${category.id}/`, category)\n      .subscribe(\n        (response) => {\n          this.foodCreateListener.next(true);\n        },\n        (err) => {\n          this.foodCreateListener.next(false);\n        }\n      );\n    return this.foodCreateListener.asObservable();\n  }\n\n  getCategorys(vendor_id, pageSize = 10, pageIndex = 1) {\n    const query = `?${\n      vendor_id ? \"vendor=\" + vendor_id : \"\"\n    }&limit=${pageSize}&offset=${pageIndex}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/categorys/${query}`)\n      .pipe(\n        map((res) => {\n          return res;\n        }),\n        shareReplay(1)\n      )\n      .subscribe(\n        (res) => {\n          this.categories = res;\n          this.categoriesListener.next({ ...this.categories });\n        },\n        (err) => {}\n      );\n  }\n\n  deleteCategory(category) {\n    this.http.delete(`${this.apiUrl}food/categorys/${category.id}/`).subscribe(\n      (response) => {\n        this.notificationService.danger(\n          \"Delete\",\n          \"Your category has been deleted\"\n        );\n        this.foodCreateListener.next(true);\n      },\n      (err) => {\n        this.notificationService.danger(\"Unsuccessful\", \"An error occured\");\n        this.foodCreateListener.next(false);\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  getCategorysListenerUpdated() {\n    return this.categoriesListener.asObservable();\n  }\n\n  createCategoryType(category) {\n    this.http.post(`${this.apiUrl}food/category-type/`, category).subscribe(\n      (response) => {\n        this.notificationService.success(\"success\", \"Category Type created!!!\");\n        this.foodCreateListener.next(true);\n      },\n      (err) => {\n        this.foodCreateListener.next(false);\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  editCategoryType(category) {\n    this.http\n      .patch(`${this.apiUrl}food/category-type/${category.id}/`, category)\n      .subscribe(\n        (response) => {\n          this.foodCreateListener.next(true);\n        },\n        (err) => {\n          this.foodCreateListener.next(false);\n        }\n      );\n    return this.foodCreateListener.asObservable();\n  }\n\n  getCategoryTypes(pageSize = 10, pageIndex = 1) {\n    // const query = `?vendor=${vendor_id}`;\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/category-type/${query}`)\n      .subscribe(\n        (res) => {\n          this.categoryTypes = res;\n          this.categoryTypesListener.next({ ...this.categoryTypes });\n        },\n        (err) => {}\n      );\n  }\n\n  getCategoryTypesListenerUpdated() {\n    return this.categoryTypesListener.asObservable();\n  }\n\n  createInventoryTopUp() {}\n\n  getInventoryTopUp(pageSize, pageIndex) {\n    // const query = `?vendor=${vendor_id}`;\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/inventory-topup/${query}`)\n      .subscribe(\n        (res) => {\n          this.inventoryTopup = res;\n          this.inventoryTopupListener.next({ ...this.inventoryTopup });\n        },\n        (err) => {}\n      );\n  }\n\n  getInventoryTopUpListenerUpdated() {\n    return this.inventoryTopupListener.asObservable();\n  }\n\n  topupInventory(data) {\n    this.isToppingUpListener.next(true);\n    this.http.post(`${this.apiUrl}food/inventory/`, data).subscribe(\n      (response) => {\n        this.isToppingUpListener.next(false);\n        this.notificationService.success(`Top up`, `Product Updated`);\n      },\n      (err) => {\n        this.notificationService.danger(`Error `, `Product not Updated`);\n      }\n    );\n  }\n\n  getIsToppingUp() {\n    return this.isToppingUpListener.asObservable();\n  }\n\n  getMealTypes() {\n    this.http\n      .get<{ results: any[] }>(`${this.apiUrl}food/meal-type/`)\n      .pipe(\n        map((res) => {\n          return res;\n        }),\n        shareReplay(1)\n      )\n      .subscribe(\n        (mealTypes) => {\n          console.log(mealTypes);\n          this.mealTypes = mealTypes.results;\n          this.mealTypesListener.next([...this.mealTypes]);\n        },\n        (err) => {\n          this.mealTypesListener.next([]);\n        }\n      );\n    return this.mealTypesListener.asObservable();\n  }\n\n  getInventory(vendor, delivery_date, pageSize = 10, pageIndex = 1) {\n    const query = `?limit=${pageSize}&offset=${pageIndex}${\n      delivery_date ? \"&delivery_date=\" + delivery_date : \"\"\n    }${vendor ? \"&vendor=\" + vendor : \"\"}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/inventory/${query}`)\n      .subscribe(\n        (res) => {\n          this.inventory = res;\n          this.inventoryListener.next({ ...this.inventory });\n        },\n        (err) => {\n          console.log(err.error);\n        }\n      );\n  }\n\n  deleteInventory(food) {\n    this.http.delete(`${this.apiUrl}food/inventory/${food.id}/`).subscribe(\n      (response) => {\n        this.foodCreateListener.next(true);\n        this.notificationService.danger(\n          \"Deleted\",\n          \"Your inventory has been deleted\"\n        );\n      },\n      (err) => {\n        this.foodCreateListener.next(false);\n        this.notificationService.danger(\"Unsuccessful\", \"An error occured\");\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  getFoodInventory(\n    vendor,\n    category,\n    delivery_date,\n    meal_type,\n    pageSize = 100,\n    pageIndex = 1\n  ) {\n    const query = `?limit=${pageSize}&offset=${pageIndex}${\n      delivery_date ? \"&delivery_date=\" + delivery_date : \"\"\n    }${category ? \"&category=\" + category : \"\"}${\n      vendor ? \"&vendor=\" + vendor : \"\"\n    }${meal_type ? \"&meal_type=\" + meal_type : \"\"}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/inventory/${query}`)\n      .pipe(shareReplay())\n      .subscribe(\n        (res) => {\n          this.inventory = res;\n          this.inventoryListener.next({ ...this.inventory });\n        },\n        (err) => {\n          this.inventory = new PaginatedResponse();\n          this.inventory.results = [];\n          this.inventoryListener.next({ ...this.inventory });\n        }\n      );\n  }\n\n  getInventoryListenerUpdated() {\n    return this.inventoryListener.asObservable();\n  }\n\n  createFoodRating() {}\n\n  getFoodRating(pageSize, pageIndex) {\n    // const query = `?vendor=${vendor_id}`;\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/rating/${query}`)\n      .subscribe(\n        (res) => {\n          this.ratings = res;\n          this.ratingsListener.next({ ...this.ratings });\n        },\n        (err) => {}\n      );\n  }\n\n  getFoodRatingUpdated() {\n    return this.ratingsListener.asObservable();\n  }\n\n  getRecomended() {\n    this.http.get(`${this.apiUrl}food/recommended-screen/`).subscribe(\n      (response: any) => {\n        this.recomended = response;\n        this.recomendedListener.next({ ...this.recomended });\n      },\n      (err) => {}\n    );\n\n    return this.recomendedListener.asObservable();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { environment } from \"../../../environments/environment\";\nimport { PaginatedResponse } from \"../models/response.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VendorService {\n  private apiUrl = environment.url\n  private vendors\n  private vendorsListener = new Subject<PaginatedResponse>()\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getVendors() {\n    this.http.get<PaginatedResponse>(`${this.apiUrl}auth/vendor/`)\n    .subscribe((response) => {\n      this.vendors = response\n      this.vendorsListener.next({ ...this.vendors })\n\n    }, (err) => {\n    })\n  }\n\n  getVendorsListener() {\n    return this.vendorsListener.asObservable()\n  }\n\n\n}\n"]}