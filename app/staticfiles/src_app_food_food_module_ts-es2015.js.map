{"version":3,"file":"src_app_food_food_module_ts-es2015.js","mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yDAAc;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0EAAkB,CAAC,qEAAa;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yCAAO;AACnC;AACA,4BAA4B,yCAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,8BAA8B,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,qDAAQ,GAAG,+DAAwB,CAAC,2DAAmB,GAAG,+DAAwB;AAC3O,iCAAiC,+DAAwB,GAAG,2KAA2K;AACvO,QAAQ,wDAAiB,kEAAkE,oCAAoC,uEAAuE,iCAAiC;AACvO,MAAM;AACN,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,OAAO,YAAY,oEAAoE,wCAAwC,wEAAiC,6MAA6M;AAC7W,QAAQ,6DAAsB;AAC9B,QAAQ,0DAAmB;AAC3B,QAAQ,uDAAgB;AACxB,MAAM;AACN,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,OAAO,eAAe,6DAAgB,yCAAyC;AAC/E;AACA,MAAM,MAAM,qDAAU,EAAE;AACxB,MAAM,gCAAgC,MAAM,iDAAM,SAAS,qDAAQ,IAAI,GAAG;AAC1E,MAAM,MAAM,2DAAY,EAAE;AAC1B,MAAM,gCAAgC,MAAM,iDAAM,2BAA2B,IAAI,MAAM,mDAAQ,EAAE;AACjG;AACA;AACA,aAAa,MAAM,gDAAK,EAAE;AAC1B,uBAAuB,MAAM,uDAAY,gCAAgC;AACzE,0BAA0B,MAAM,uDAAY,yBAAyB;AACrE;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,yEAA8B;AAC/D,+BAA+B,iEAAsB;AACrD;AACA,aAAa;AACb,KAAK,iBAAiB,UAAU,MAAM,qDAAiB,EAAE,IAAI;AAC7D,sBAAsB,iDAAM;AAC5B,uBAAuB,qDAAQ;AAC/B,aAAa,GAAG,IAAI,MAAM,2DAAmB,EAAE,IAAI;AACnD,sBAAsB,iDAAM;AAC5B;AACA,aAAa;AACb,sBAAsB,mDAAQ;AAC9B,aAAa,GAAG,IAAI,IAAI;AACxB,kBAAkB,gDAAK;AACvB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uDAAY;AAC9B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uDAAY;AAC9B;AACA,SAAS,GAAG,IAAI;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yDAAc;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oDAAS;AACnD;AACA,gCAAgC,oDAAkB;AAClD;AACA;AACA;AACA;AACA;AACA,kCAAkC,yCAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,+BAA+B,4EAAqB;AACpD;AACA;AACA,wBAAwB;AACxB;AACA,4BAA4B,4EAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yDAAS,+BAA+B,0DAAS,UAAU,4CAAK;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yDAAS,+BAA+B,0DAAS,UAAU,4CAAK;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0DAAM;AACvB,qBAAqB,sEAAc;AACnC;AACA;AACA;AACA;AACA,iBAAiB,8DAAU;AAC3B;AACA;AACA;AACA;AACA,iBAAiB,+DAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAQ,gBAAgB,8DAAU;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qDAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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oB,yCAAyC,eAAe,gLAAgL,mBAAmB,+BAA+B,mBAAmB,sCAAsC,QAAQ,SAAS,mBAAmB,2BAA2B,8DAA8D,aAAa,qBAAqB,kBAAkB,QAAQ,WAAW,2BAA2B,yCAAyC,mBAAmB,kBAAkB,gDAAgD,WAAW,UAAU,2CAA2C,qBAAqB,WAAW,gCAAgC,MAAM,OAAO,QAAQ,SAAS,kBAAkB,oBAAoB;AACt8D,aAAa;AACb,KAAK,iBAAiB,UAAU,MAAM,qDAAiB,EAAE,IAAI,MAAM,iDAAa,EAAE,IAAI;AACtF,sBAAsB,iDAAM;AAC5B;AACA,aAAa,GAAG,IAAI,UAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yDAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0DAAO;AAClB;AACA;AACA;AACA;AACA;AACA,oCAAoC,uFAA+B,GAAG,eAAe;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oDAAkB;AAC7D,kCAAkC,oDAAkB;AACpD,sCAAsC,oDAAkB;AACxD;AACA;AACA;AACA;AACA;AACA,iBAAiB,mFAAgC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uDAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uDAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAM,qCAAqC,qDAAI;AACzE;AACA,gBAAgB,0DAAS;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,+CAA+C;AAC7D,cAAc,kFAAkF;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,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ACA;AACA;AACA,iCAAiC,oDAAkB;AACnD;AACA,qCAAqC,oDAAkB;AACvD;AACA;AACA;AACA;AACA,uCAAuC,uDAAY;AACnD;AACA,+BAA+B,uDAAY;AAC3C;AACA,iCAAiC,uDAAY;AAC7C;AACA,qCAAqC,uDAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,+BAA+B,sBAAsB,6EAAqB;AAC1E;AACA,0BAA0B;AAC1B;AACA,8BAA8B,4EAAoB;AAClD;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,yDAAyD,qBAAqB;AAC9E;AACA,0DAA0D,MAAM;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yDAAS;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc,GAAG,EAAE;AACnD;AACA;AACA;AACA,kCAAkC,cAAc,GAAG,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,mCAAmC,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,4DAAwB,GAAG,+DAAwB,sBAAsB,+DAAwB,CAAC,uFAAqB;AAC/R,sCAAsC,+DAAwB,GAAG,kCAAkC,sNAAsN,aAAa,gJAAgJ,aAAa,wEAAiC,GAAG;AACvgB;AACA,MAAM,MAAM,qDAAU,EAAE;AACxB,MAAM,MAAM,4DAAiB,EAAE;AAC/B,MAAM,gCAAgC,MAAM,iDAAM,4BAA4B,IAAI,MAAM,mDAAQ,EAAE,GAAG;AACrG,MAAM,6BAA6B,MAAM,mDAAQ,EAAE,IAAI,MAAM,iDAAM,SAAS,uFAAqB,IAAI;AACrG;AACA;AACA,sBAAsB,MAAM,gDAAK,EAAE;AACnC,sBAAsB,MAAM,gDAAK,EAAE;AACnC,uBAAuB,MAAM,gDAAK,EAAE;AACpC,0BAA0B,MAAM,gDAAK,EAAE;AACvC,0BAA0B,MAAM,gDAAK,EAAE;AACvC,wBAAwB,MAAM,gDAAK,EAAE;AACrC,4BAA4B,MAAM,iDAAM,EAAE;AAC1C,oBAAoB,MAAM,iDAAM,EAAE;AAClC,sBAAsB,MAAM,iDAAM,EAAE;AACpC,0BAA0B,MAAM,iDAAM,EAAE;AACxC;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB,KAAK,iBAAiB,UAAU,MAAM,qDAAiB,EAAE,IAAI,MAAM,4DAAwB,EAAE,IAAI;AACjG,sBAAsB,iDAAM;AAC5B;AACA,aAAa;AACb,sBAAsB,mDAAQ;AAC9B,aAAa,GAAG,IAAI;AACpB,sBAAsB,mDAAQ;AAC9B,aAAa;AACb,sBAAsB,iDAAM;AAC5B,uBAAuB,uFAAqB;AAC5C,aAAa,GAAG,IAAI,IAAI;AACxB,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,iDAAM;AACxB,SAAS;AACT,kBAAkB,iDAAM;AACxB,SAAS;AACT,kBAAkB,iDAAM;AACxB,SAAS;AACT,kBAAkB,iDAAM;AACxB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS,GAAG,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,8BAA8B,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,4DAAwB,GAAG,+DAAwB,sBAAsB,+DAAwB,CAAC,uFAAqB;AAChR,iCAAiC,+DAAwB,GAAG,4HAA4H;AACxL,QAAQ,4DAAqB;AAC7B,MAAM;AACN;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,OAAO,mDAAmD;AAC1D,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,MAAM;AACN;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,OAAO,2GAA2G;AAClH,QAAQ,yDAAkB;AAC1B,OAAO,YAAY,gDAAgD,wCAAwC,gEAAyB;AACpI;AACA;AACA,aAAa,IAAI,wEAAiC,8hCAA8hC;AAChlC,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,gGAAgG,mCAAmC,6GAA6G,oCAAoC;AAC7S,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,MAAM;AACN,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,OAAO,4BAA4B,sBAAsB,oDAAc,sBAAsB,6DAAgB,EAAE,+DAAsB,EAAE,iDAAW,EAAE,gEAAsB,gBAAgB,2BAA2B,aAAa,sBAAsB,6CAA6C,8BAA8B,eAAe,YAAY,eAAe,eAAe,sBAAsB,WAAW,gBAAgB,kBAAkB,oBAAoB,uBAAuB,mBAAmB,mBAAmB,kBAAkB,qBAAqB,aAAa,4CAA4C,UAAU,+CAA+C,mBAAmB,oBAAoB,gCAAgC,eAAe,0DAA0D,WAAW,sCAAsC,oBAAoB,uBAAuB,mBAAmB,mBAAmB,yCAAyC,UAAU,yBAAyB,eAAe,gBAAgB,yBAAyB,eAAe,gBAAgB,gEAAgE,aAAa,YAAY,sBAAsB,kBAAkB,gBAAgB,aAAa,uDAAuD,8CAA8C,gBAAgB,eAAe,cAAc,MAAM,OAAO,QAAQ,SAAS,kBAAkB,cAAc,gBAAgB,gBAAgB,kCAAkC,kBAAkB,kBAAkB,gBAAgB,UAAU,YAAY,8EAA8E,kBAAkB,wBAAwB;AAChtD;AACA,MAAM,MAAM,qDAAU,EAAE;AACxB,MAAM,MAAM,4DAAiB,EAAE;AAC/B,MAAM,gCAAgC,MAAM,iDAAM,4BAA4B,IAAI,MAAM,mDAAQ,EAAE,GAAG;AACrG,MAAM,6BAA6B,MAAM,mDAAQ,EAAE,IAAI,MAAM,iDAAM,SAAS,uFAAqB,IAAI;AACrG;AACA;AACA,iBAAiB,MAAM,0DAAe,mBAAmB,mBAAmB,IAAI;AAChF,wBAAwB,MAAM,oDAAS,6BAA6B;AACpE,mBAAmB,MAAM,oDAAS,wBAAwB;AAC1D;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA;AACA,4eAA4e,skCAAskC,eAAe,+QAA+Q;AACh1D,+BAA+B,iEAAsB;AACrD;AACA,iCAAiC,0EAA+B;AAChE;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,yCAAyC,aAAa,sBAAsB,6CAA6C,8BAA8B,eAAe,YAAY,eAAe,eAAe,sBAAsB,WAAW,gBAAgB,kBAAkB,oBAAoB,uBAAuB,mBAAmB,mBAAmB,kBAAkB,qBAAqB,aAAa,4CAA4C,UAAU,+CAA+C,mBAAmB,oBAAoB,gCAAgC,eAAe,0DAA0D,WAAW,sCAAsC,oBAAoB,uBAAuB,mBAAmB,mBAAmB,yCAAyC,UAAU,yBAAyB,eAAe,gBAAgB,yBAAyB,eAAe,gBAAgB,gEAAgE,aAAa,YAAY,sBAAsB,kBAAkB,gBAAgB,aAAa,uDAAuD,8CAA8C,gBAAgB,eAAe,cAAc,MAAM,OAAO,QAAQ,SAAS,kBAAkB,cAAc,gBAAgB,gBAAgB,kCAAkC,kBAAkB,kBAAkB,gBAAgB,UAAU,YAAY,8EAA8E,kBAAkB;AAC5gD,aAAa;AACb,KAAK,iBAAiB,UAAU,MAAM,qDAAiB,EAAE,IAAI,MAAM,4DAAwB,EAAE,IAAI;AACjG,sBAAsB,iDAAM;AAC5B;AACA,aAAa;AACb,sBAAsB,mDAAQ;AAC9B,aAAa,GAAG,IAAI;AACpB,sBAAsB,mDAAQ;AAC9B,aAAa;AACb,sBAAsB,iDAAM;AAC5B,uBAAuB,uFAAqB;AAC5C,aAAa,GAAG,IAAI,IAAI;AACxB,kBAAkB,0DAAe;AACjC,6BAA6B,mBAAmB;AAChD,SAAS;AACT,kBAAkB,oDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,oDAAS;AAC3B;AACA,SAAS,GAAG,IAAI;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qEAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,qCAAqC,+DAAwB,CAAC,qDAAiB;AAClJ,wCAAwC,+DAAwB,GAAG,sJAAsJ;AACzN,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,OAAO,YAAY,sBAAsB,aAAa,wEAAiC,GAAG;AAC1F;AACA,MAAM,MAAM,qDAAU;AACtB;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB,UAAU,MAAM,qDAAiB,EAAE,IAAI,UAAU;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uFAA+B,GAAG,eAAe;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yCAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yCAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,uDAAY;AAClD;AACA,gCAAgC,uDAAY;AAC5C;AACA;AACA,YAAY,gDAAS;AACrB,sBAAsB,0DAAS;AAC/B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,0BAA0B;AAC1B;AACA,gBAAgB,4EAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gDAAS;AACjB,kBAAkB,0DAAS;AAC3B;AACA;AACA,SAAS;AACT,QAAQ,gDAAS;AACjB,kBAAkB,0DAAS;AAC3B;AACA;AACA,SAAS;AACT;AACA;AACA,yDAAyD,yCAAE;AAC3D;AACA;AACA;AACA;AACA;AACA,+BAA+B,+DAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4CAAK,8CAA8C,0DAAS;AACpE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qCAAqC,0DAAS;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sEAAc;AAC1B;AACA;AACA;AACA,iBAAiB,yDAAK;AACtB,iBAAiB,yDAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,uBAAuB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4CAAK;AACb;AACA,kBAAkB,0DAAS,CAAC,4CAAK;AACjC;AACA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;A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","sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/menu.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js","./src/app/food/add-food/add-food.component.ts","./src/app/food/add-food/add-food.component.html","./src/app/food/basket/basket.component.ts","./src/app/food/basket/basket.component.html","./src/app/food/category-create/category-create.component.ts","./src/app/food/category-create/category-create.component.html","./src/app/food/category-list/category-list.component.ts","./src/app/food/category-list/category-list.component.html","./src/app/food/category-type-create/category-type-create.component.ts","./src/app/food/category-type-create/category-type-create.component.html","./src/app/food/category-type-list/category-type-list.component.ts","./src/app/food/category-type-list/category-type-list.component.html","./src/app/food/food-details/food-details.component.ts","./src/app/food/food-details/food-details.component.html","./src/app/food/food-info/food-info.component.ts","./src/app/food/food-info/food-info.component.html","./src/app/food/food-list/food-list.component.ts","./src/app/food/food-list/food-list.component.html","./src/app/food/food-routing.module.ts","./src/app/food/food-table/food-table.component.ts","./src/app/food/food-table/food-table.component.html","./src/app/food/food.module.ts","./src/app/food/food/food.component.ts","./src/app/food/food/food.component.html","./src/app/food/inventory-topup/inventory-topup.component.ts","./src/app/food/inventory-topup/inventory-topup.component.html","./src/app/food/inventory/current-inventory/current-inventory.component.ts","./src/app/food/inventory/current-inventory/current-inventory.component.html","./src/app/food/inventory/inventory.component.ts","./src/app/food/inventory/inventory.component.html","./src/app/food/inventory/other-foods/other-foods.component.ts","./src/app/food/inventory/other-foods/other-foods.component.html","./src/app/food/select-meal-type/select-meal-type.component.ts","./src/app/food/select-meal-type/select-meal-type.component.html","./src/app/shared/services/dialog.service.ts","./src/app/shared/services/food.service.ts","./src/app/shared/services/vendor.service.ts"],"sourcesContent":["import { FocusMonitor, FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._handleKeydown($event); })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.closed.emit(\"click\"); })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4._onAnimationStart($event); })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)'\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }])] });\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]',\n                providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nclass MatMenuItemBase {\n}\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    constructor(_elementRef, \n    /**\n     * @deprecated `_document` parameter is no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        var _a, _b;\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            const icon = icons[i];\n            (_a = icon.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(icon);\n        }\n        return ((_b = clone.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || '';\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { role: [{\n            type: Input\n        }], \n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], \n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * @docs-private\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() { return this._xPosition; }\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() { return this._yPosition; }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() { return this._overlapTrigger; }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() { return this._hasBackdrop; }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() { return this.panelClass; }\n    set classList(classes) { this.panelClass = classes; }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused)))).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable\n                .pipe(take(1))\n                .subscribe(() => this._focusFirstItem(origin));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _focusFirstItem(origin) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n        const newElevation = `mat-elevation-z${elevation}`;\n        const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n    lazyContent: [{ type: ContentChild, args: [MAT_MENU_CONTENT,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MAT_MENU_CONTENT]\n        }] }); })();\n/** @docs-public MatMenu */\nclass MatMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return new (t || MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\nMatMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenu, selectors: [[\"mat-menu\"]], hostVars: 3, hostBindings: function MatMenu_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n    } }, exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass], styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\nMatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Component,\n        args: [{\n                selector: 'mat-menu',\n                template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                host: {\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null'\n                },\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                ],\n                styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, \n    // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n    // @breaking-change 8.0.0\n    _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() { return this._menu; }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition(overlayConfig.positionStrategy);\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof _MatMenuBase) {\n            this.menu._startAnimation();\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof _MatMenuBase) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false)\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this.menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                this.menu.setPositionClasses(posX, posY);\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵfac = function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); };\n_MatMenuDirectivesModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger, MatMenuContent]; }, exports: function () { return [MatMenuTrigger, MatMenuContent, MatCommonModule]; } }); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); };\nMatMenuModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ], CdkScrollableModule, MatCommonModule, _MatMenuDirectivesModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [MatMenu, MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule, _MatMenuDirectivesModule]; }, exports: function () { return [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = restoredCtx.$implicit; const i_r5 = restoredCtx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const i_r5 = restoredCtx.index; const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._tabFocusChanged($event, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r15);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r15))(\"content\", tab_r14.content)(\"position\", tab_r14.position)(\"origin\", tab_r14.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r15));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(\n    /** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = /*@__PURE__*/ function () { let ɵMatTabLabel_BaseFactory; return function MatTabLabel_Factory(t) { return (ɵMatTabLabel_BaseFactory || (ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel)))(t || MatTabLabel); }; }();\nMatTabLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP)); };\nMatTab.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [CdkPortalOutlet,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n        this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ?\n            defaultConfig.dynamicHeight : false;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => tab._closestTabGroup === this));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        if (focusOrigin) {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of(null);\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => Promise.resolve().then(realign));\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); };\nMatTabsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n","import { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) { return new (t || MatToolbarRow)(); };\nMatToolbarRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatToolbarRow, selectors: [[\"mat-toolbar-row\"]], hostAttrs: [1, \"mat-toolbar-row\"], exportAs: [\"matToolbarRow\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' }\n            }]\n    }], null, null); })();\nclass MatToolbar extends _MatToolbarMixinBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n}\nMatToolbar.ɵfac = function MatToolbar_Factory(t) { return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatToolbar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatToolbar, selectors: [[\"mat-toolbar\"]], contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    } }, hostAttrs: [1, \"mat-toolbar\"], hostVars: 4, hostBindings: function MatToolbar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matToolbar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatToolbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _toolbarRows: [{\n            type: ContentChildren,\n            args: [MatToolbarRow, { descendants: true }]\n        }] }); })();\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵfac = function MatToolbarModule_Factory(t) { return new (t || MatToolbarModule)(); };\nMatToolbarModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatToolbarModule });\nMatToolbarModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, { declarations: function () { return [MatToolbar, MatToolbarRow]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatToolbar, MatToolbarRow, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { HelperService } from \"../../shared/services/helper.service\";\n\n@Component({\n  selector: \"app-add-food\",\n  templateUrl: \"./add-food.component.html\",\n  styleUrls: [\"./add-food.component.scss\"],\n})\nexport class AddFoodComponent implements OnInit {\n  imageChangedEvent: any = \"\";\n  imagePreview: string;\n\n  title = \"add food\";\n  foodForm: FormGroup;\n  imageForm: FormGroup;\n  private numberPattern = /\\d+/g;\n  vendor: any;\n  categoryList: any[] = [];\n  mode: string;\n  isLoading: boolean;\n  constructor(\n    public dialogRef: MatDialogRef<AddFoodComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private foodService: FoodService,\n    private helperService: HelperService\n  ) {}\n\n  ngOnInit(): void {\n    this.vendor = this.helperService.getUserInfo();\n    this.getCategoryList();\n\n    this.checkMode();\n  }\n\n  get image() {\n    return this.imageForm.get(\"image\");\n  }\n\n  onImagePicked(event) {\n    this.imageChangedEvent = event;\n    const file = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n      this.imageForm.patchValue({ image: this.imagePreview });\n      this.image.updateValueAndValidity();\n      // console.log(this.imageForm.value);\n      this.mode == \"edit\" ? this.saveImage() : null;\n      // console.log(this.imagePreview)\n    };\n    reader.readAsDataURL(file);\n\n    // const file = files.item(0);\n    // let reader = new FileReader();\n    // reader.onload = (event: any) => {\n    //   this.imagePreview = event.target.result;\n    //   this.foodForm.patchValue({ image: this.imagePreview });\n    //   this.image.updateValueAndValidity();\n    //   // this.testImageFile = event.target.result;\n    // };\n    // reader.readAsDataURL(file);\n  }\n\n  checkMode() {\n    if (this.data) {\n      this.mode = \"edit\";\n      this.title = \"edit food\";\n      this.imagePreview = this.data.image;\n      this.foodForm = this.fb.group({\n        id: [this.data.id, Validators.required],\n        name: [this.data.name, Validators.required],\n        // image: [this.data.image, [Validators.required]],\n        description: [this.data.description, Validators.required],\n        unit_price: [\n          this.data.unit_price,\n          [\n            Validators.required,\n            Validators.pattern(this.numberPattern),\n            Validators.min(0),\n          ],\n        ],\n        category: [this.data.category, Validators.required],\n      });\n      this.imageForm = this.fb.group({\n        image: [this.data.image, [Validators.required]],\n      });\n      return;\n    }\n    this.mode = \"create\";\n    this.title = \"create food\";\n    this.foodForm = this.fb.group({\n      name: [\"\", [Validators.required]],\n      // image: [\"\", [Validators.required]],\n      description: [\"\"],\n      unit_price: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern(this.numberPattern),\n          Validators.min(0),\n        ],\n      ],\n      category: [null, [Validators.required]],\n    });\n    this.imageForm = this.fb.group({\n      image: [null, [Validators.required]],\n    });\n  }\n\n  get foodName() {\n    return this.foodForm.get(\"name\");\n  }\n\n  get description() {\n    return this.foodForm.get(\"description\");\n  }\n\n  get unit_price() {\n    return this.foodForm.get(\"unit_price\");\n  }\n\n  get category() {\n    return this.foodForm.get(\"category\");\n  }\n\n  getCategoryList() {\n    this.foodService.getCategorys(this.vendor.id);\n    this.foodService.getCategorysListenerUpdated().subscribe((categoryList) => {\n      this.categoryList = categoryList.results;\n    });\n  }\n\n  onSave() {\n    this.isLoading = true;\n    if (this.foodForm.invalid) {\n      this.helperService.validateAllFormFields(this.foodForm);\n      this.isLoading = false;\n      return;\n    }\n    if (this.data) {\n      this.onUpdate();\n      return;\n    }\n\n    this.onCreate();\n  }\n\n  onCreate() {\n    this.foodService.createFood({...this.foodForm.value, ...this.imageForm.value}).subscribe((closeModal) => {\n      this.isLoading = false;\n      closeModal\n        ? this.dialogRef.close()\n        : this.helperService.validateAllFormFields(this.foodForm);\n    });\n  }\n\n  onUpdate() {\n    this.foodService.editFood(this.foodForm.value).subscribe((closeModal) => {\n      this.isLoading = false;\n      closeModal\n        ? this.dialogRef.close()\n        : this.helperService.validateAllFormFields(this.foodForm);\n    });\n  }\n\n  saveImage() {\n    this.isLoading = true;\n    this.foodService\n      .editFoodImage(this.imageForm.value, this.foodForm.value)\n      .subscribe((closeModal) => {\n        this.isLoading = false;\n      });\n  }\n}\n","<h2 mat-dialog-title>{{title | titlecase}}</h2>\n<mat-dialog-content class=\"mat-typography\">\n\n  <div class=\"example-loading-shade\" *ngIf=\"isLoading\">\n    <div class=\"loader-box\">\n      <div class=\"loader\">\n        <div class=\"line bg-primary\"></div>\n        <div class=\"line bg-primary\"></div>\n        <div class=\"line bg-primary\"></div>\n        <div class=\"line bg-primary\"></div>\n      </div>\n    </div>\n    <!-- <mat-spinner *ngIf=\"tableLoading\"></mat-spinner> -->\n  </div>\n\n  <form [formGroup]=\"foodForm\" class=\"row align-items-center theme-form mega-form\">\n\n    <div class=\"mb-3 image-preview col-12\" *ngIf=\"imagePreview !== '' && imagePreview && imageForm.get('image').valid\">\n      <img class=\"mx-auto rounded d-block img-fluid\" [src]=\"imagePreview\" [alt]=\"foodForm.value.name\">\n    </div>\n\n    <div class=\"col-auto\">\n      <input #imageInput type=\"file\" accept=\"image/*\" (change)=\"onImagePicked($event)\">\n      <div *ngIf=\"image.hasError('invalidMimeType')\">Selected file is not of supported format</div>\n      <button (click)=\"imageInput.click()\" class=\"btn btn-primary\" type=\"button\">Select food image</button>\n    </div>\n\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <mat-label>Food Name</mat-label>\n      <input formControlName=\"name\" matInput>\n      <mat-error *ngIf=\"foodName.invalid && (foodName.dirty || foodName.touched)\">Food name is a required field\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <mat-label>Category</mat-label>\n      <mat-select formControlName=\"category\">\n        <mat-option [value]=\"null\">Please select a category</mat-option>\n        <mat-option *ngFor=\"let category of categoryList\" [value]=\"category.id\">{{ category.name }}</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"category.invalid && (category.dirty || category.touched)\">Please select a valid food category\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <mat-label>Amount</mat-label>\n      <input formControlName=\"unit_price\" matInput type=\"number\" class=\"example-right-align\">\n      <span matPrefix>\n        ₦\n      </span>\n      <span matSuffix>.00</span>\n      <mat-error *ngIf=\"unit_price.invalid && (unit_price.dirty || unit_price.touched)\">Enter a valid amount for food\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-12\" appearance=\"outline\">\n      <mat-label>Food Description</mat-label>\n      <textarea formControlName=\"description\" matInput\n        placeholder=\"Tell users what they need to know about the food.\"></textarea>\n      <mat-error *ngIf=\"description.invalid && (description.dirty || description.touched)\">Food name is a required field\n      </mat-error>\n    </mat-form-field>\n  </form>\n\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button color=\"primary\" mat-button (click)=\"onSave()\" cdkFocusInitial>\n    <i *ngIf=\"isLoading\" class=\"fa fa-spin fa-spinner\"></i>\n    {{title | titlecase}}\n  </button>\n</mat-dialog-actions>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Food } from \"src/app/shared/models/food.model\";\n\n@Component({\n  selector: \"app-basket\",\n  templateUrl: \"./basket.component.html\",\n  styleUrls: [\"./basket.component.scss\"],\n})\nexport class BasketComponent implements OnInit {\n  @Input(\"cart\") cart;\n  @Input(\"isLoading\") isLoading;\n  @Input(\"cartTotal\") cartTotal;\n  @Output(\"removeFromCart\") removeFromCart = new EventEmitter<Food>();\n  @Output(\"updateCart\") updateCart = new EventEmitter<Food>();\n  @Output(\"confirmOrder\") confirmOrder = new EventEmitter<Food>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onRemoveFromCart(food) {\n    this.removeFromCart.emit(food);\n  }\n\n  onUpdateBasket(value) {\n    this.updateCart.emit(value);\n  }\n\n  onConfirmOrder() {\n    this.confirmOrder.emit(null);\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row px-0\">\n    <div class=\"col-12 px-0\">\n      <div class=\"card bg-primary\">\n        <div class=\"card-body\">\n\n          <div class=\"basket-items table-responsive mt-5\">\n\n            <table class=\"table table-borderless table-sm \">\n              <thead>\n                <tr>\n                  <td class=\"\">\n                    item\n                  </td>\n                  <td class=\"text-center\">\n                    Qty\n                  </td>\n                  <td class=\"text-center\">\n                    Price\n                  </td>\n                </tr>\n              </thead>\n              <tbody class=\"\" *ngFor=\"let item of cart\">\n                <tr>\n                  <td>\n                    <div class=\"media\">\n                      <img class=\"rounded-circle image-radius m-r-5\" [src]=\"item.image\" alt=\"\">\n                      <div class=\"media-body\">\n                        <span class=\"d-block b-0 food-name\">{{ (item.name.length>23)? (item.name | slice:0:20)+'...':(item.name) }}</span>\n                        <span class=\"d-block\">{{item.unit_price | currency:'NGN' : \"₦\" : '1.0-0'}}</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td class=\"text-center\">\n                    <input class=\"qty\" type=\"number\" min=\"1\" [(ngModel)]=\"item.quantity\" (ngModelChange)=\"onUpdateBasket(item)\" placeholder=\"qty\">\n                  </td>\n                  <td class=\"text-center\">\n                    {{item.qty * item.unit_price | currency:'NGN' : \"₦\" : '1.0-0'}}\n                  </td>\n                </tr>\n                <tr>\n                  <td colspan=\"2\">\n                    <input type=\"text\" [value]=\"\" [(ngModel)]=\"item.comment\" (ngModelChange)=\"onUpdateBasket(item)\" placeholder=\"Order Note...\">\n                  </td>\n                  <td class=\"text-center\">\n                    <button (click)=\"onRemoveFromCart(item)\" class=\"my-auto btn btn-outline-light px-1\">\n                      <img class=\"mx-1 \" src=\"../../../assets/svg/Delete.svg\" alt=\"\">\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n          </div>\n          <hr>\n          <div class=\"d-flex justify-content-between\">\n            <p>Sub total</p>\n            <p>{{cartTotal | currency:'NGN' : \"₦\" : '1.0-0'}}</p>\n          </div>\n\n          <button [disabled]=\"isLoading == true\" (click)=\"onConfirmOrder()\" class=\"btn btn-white btn-block mt-5\">\n            <i *ngIf=\"isLoading == true\" class=\"fa fa-spin fa-spinner mr-2\"></i>\n            Confirm Order\n          </button>\n\n          <p class=\"text-center mb-2 small mt-3\">\n            Amount exceeds Company Wallet?\n          </p>\n          <div class=\"row mb-5\">\n            <div class=\"col-auto mx-auto\">\n              <button class=\"btn text-white btn-outline-light\">\n                Click Here\n              </button>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-category-create\",\n  templateUrl: \"./category-create.component.html\",\n  styleUrls: [\"./category-create.component.scss\"],\n})\nexport class CategoryCreateComponent implements OnInit {\n  form: FormGroup = new FormGroup({});\n  title = \"Add Category\";\n  categoryTypes: any[] = [];\n  mode: string;\n  isLoading = false\n\n  constructor(\n    private fb: FormBuilder,\n    private foodService: FoodService,\n    private helperService: HelperService,\n    public dialogRef: MatDialogRef<CategoryCreateComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {\n    this.getCategoryTypes();\n    this.checkMode();\n  }\n\n  checkMode() {\n    if (this.data) {\n      this.mode = \"edit\";\n      this.title = \"edit category\";\n      this.form = this.fb.group({\n        id: [this.data.id, Validators.required],\n        name: [this.data.name, Validators.required],\n        description: [this.data.description, Validators.required],\n        category_type: [this.data.category_type, Validators.required],\n      });\n      return;\n    }\n    this.mode = \"create\";\n    this.title = \"create category\";\n    this.form = this.fb.group({\n      name: [\"\", Validators.required],\n      description: [\"\", Validators.required],\n      category_type: [\"\", Validators.required],\n    });\n  }\n\n  getCategoryTypes() {\n    this.foodService.getCategoryTypes();\n    this.foodService\n      .getCategoryTypesListenerUpdated()\n      .subscribe((categoryTypes: any) => {\n        if (categoryTypes.results) {\n          this.categoryTypes = categoryTypes.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n        } else {\n          this.categoryTypes = [];\n        }\n      });\n  }\n\n  onSave() {\n    if (this.form.invalid) {\n      this.helperService.validateAllFormFields(this.form);\n      return;\n    }\n\n    if (this.data) {\n      this.updateCategory();\n      return;\n    }\n\n    this.createCategory();\n  }\n\n  createCategory() {\n    this.isLoading = true\n    this.foodService.createCategory(this.form.value).subscribe((closeModal) => {\n      closeModal\n        ? this.dialogRef.close()\n        : this.helperService.validateAllFormFields(this.form);\n    });\n  }\n\n  updateCategory() {\n    this.isLoading = true\n    this.foodService.editCategory(this.form.value).subscribe((closeModal) => {\n      closeModal\n        ? this.dialogRef.close()\n        : this.helperService.validateAllFormFields(this.form);\n    });\n  }\n}\n","<div class=\"container-fluid\">\n  <mat-toolbar class=\"d-flex justify-content-between\">\n    <!-- <div class=\"d-flex justify-content-center\"> -->\n      <div>\n        <h2>{{title | titlecase}}</h2>\n      </div>\n      <div>\n        <mat-icon mat-button mat-dialog-close>\n          close\n        </mat-icon>\n      </div>\n    <!-- </div> -->\n  </mat-toolbar>\n  <div class=\"row\">\n    <div class=\"mx-auto col-8\">\n      <div class=\"mt-2 card bg-color1\">\n        <!-- <div class=\"card-header\">\n          <h5>{{title | titlecase}}</h5>\n        </div> -->\n        <div class=\"card-body\">\n          <form [formGroup]=\"form\" class=\"row theme-form mega-form\">\n            <ng-template matStepLabel>\n              <div class=\"col-12\">\n                <h6>Company Information</h6>\n              </div>\n            </ng-template>\n\n            <!-- Name -->\n            <div class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label class=\"col-form-label\">Category Name</label>\n                <input formControlName=\"name\" class=\"form-control\" type=\"text\" placeholder=\"Company Name\">\n                <div *ngIf=\"form.controls.name.touched && form.controls.name.errors?.required\" class=\"text text-danger\">\n                  Name is required.\n                </div>\n                <div *ngIf=\"form.controls.name.touched && form.controls.name.errors?.pattern\" class=\"text text-danger\">\n                  Name can only be alphabets.\n                </div>\n              </div>\n            </div>\n\n            <!-- description -->\n            <div class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label class=\"col-form-label\">Description</label>\n                <textarea formControlName=\"description\" class=\"form-control\" placeholder=\"Description\">\n\n                    </textarea>\n                <div *ngIf=\"form.controls.description.touched && form.controls.description.errors?.required\"\n                  class=\"text text-danger\">\n                  Category description is required.\n                </div>\n              </div>\n            </div>\n\n            <!-- sector -->\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"col-form-label\">Category Type</label>\n                <select formControlName=\"category_type\" class=\"form-control\">\n                  <option value=\"\">--none--</option>\n                  <option *ngFor=\"let type of categoryTypes\" [value]=\"type.id\">{{type.name}}</option>\n                </select>\n                <!-- <input formControlName=\"category_type\" class=\"form-control\" type=\"text\" placeholder=\"category type\"> -->\n                <div *ngIf=\"form.controls.category_type.touched && form.controls.category_type.errors?.required\"\n                  class=\"text text-danger\">\n                  Please Select a category type.\n                </div>\n              </div>\n            </div>\n            <div class=\"mx-auto col-8\">\n              <button [disabled]=\"isLoading ==true\" class=\"btn btn-primary btn-block\" (click)=\"onSave()\" mat-button >\n                <i *ngIf=\"isLoading == true\" class=\"fa fa-spin fa-spinner mr-2\"></i>\n                Save\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { DialogService } from \"src/app/shared/services/dialog.service\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { UserService } from \"src/app/user/user.service\";\nimport { CategoryCreateComponent } from \"../category-create/category-create.component\";\n\n@Component({\n  selector: \"app-category-list\",\n  templateUrl: \"./category-list.component.html\",\n  styleUrls: [\"./category-list.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class CategoryListComponent implements OnInit {\n  vendorArray: any[] = [];\n  downloading = false;\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  title = \"Category\";\n  displayedColumns: any[] = [\n    \"position\",\n    \"name\",\n    \"category_type\",\n    \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n  private vendor: string = \"\";\n\n  constructor(\n    private foodService: FoodService,\n    private userService: UserService,\n    private dialog: MatDialog,\n    private dialogService: DialogService\n    ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.tableLoading = true;\n    // this.getVendorArray()\n    this.getCategorys();\n  }\n\n  openCreateCategoryDialog(data=null) {\n    const dialogRef = this.dialog.open(CategoryCreateComponent, {\n      data: data\n    });\n\n    dialogRef.afterClosed()\n    .subscribe(result => {\n      this.getCategorys()\n    });\n  }\n\n  getCategorys() {\n    this.foodService.getCategorys(this.vendor, this.pageSize, this.pageIndex);\n    this.foodService\n      .getCategorysListenerUpdated()\n      .subscribe((category: any) => {\n        if (category.results) {\n          this.length = category.count;\n          this.dataSource = category.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n\n        // this.dataSource = new MatTableDataSource(orderHistory);\n        // this.dataSource.sort = this.sort;\n      });\n  }\n\n  getVendorArray() {\n    this.userService.getVendors();\n    this.userService.getVendorsUpdate().subscribe((vendors) => {\n      console.log(vendors)\n      const vendorArray = vendors.results.map((element) => {\n        return { name: element.bussiness_name, id: element.user.id };\n      });\n      this.vendorArray = [{ id: \"\", name: \"All Vendors\" }, ...vendorArray];\n    });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getCategorys();\n    this.tableLoading = true;\n  }\n\n  vendorChange(value) {\n    console.log(value)\n    this.vendor = value;\n    this.getCategorys();\n    this.tableLoading = true;\n  }\n\n  onDeleteCategory(category) {\n    this.dialogService.openConfirmDialog()\n    .afterClosed()\n    .subscribe((value) => {\n      if (value) {\n        this.foodService.deleteCategory(category)\n        .subscribe((value) => {\n          value ? this.getCategorys() : null;\n        })\n      }\n    })\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n        <!-- <button [routerLink]=\"['/food/category-create']\" routerLinkActive=\"router-link-active\" -->\n        <button (click)=\"openCreateCategoryDialog()\"\n          class=\"btn btn-sm btn-primary\">\n          <i class=\"mr-2 fa fa-plus\"></i>\n          Add Category\n        </button>\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <!-- <app-table-functions [vendorArray]=\"vendorArray\" [downloading]=\"downloading\" (vendorChange)=\"vendorChange($event)\"></app-table-functions> -->\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n          <mat-spinner></mat-spinner>\n        </div>\n\n        <div class=\"table-responsive\">\n\n          <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n            <!-- position Column -->\n            <ng-container matColumnDef=\"position\" sticky>\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n              <td class=\"text-center\" mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n\n            <!-- Contact Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.name || 'N/A'}}</td>\n            </ng-container>\n\n            <!-- Contact Email Column -->\n            <ng-container matColumnDef=\"category_type\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Category Type</th>\n              <td mat-cell *matCellDef=\"let element\"> {{element?.category_type_full?.name || 'N/A'}} </td>\n            </ng-container>\n\n            <!-- Star Column -->\n            <ng-container matColumnDef=\"star\" stickyEnd>\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n                  <mat-icon>more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                  <button (click)=\"openCreateCategoryDialog(element)\" mat-menu-item>\n                    <mat-icon>edit_note</mat-icon>\n                    <span>Edit</span>\n                  </button>\n                  <!-- <button (click)=\"onDeleteCategory(element)\" mat-menu-item>\n                    <mat-icon>delete_forever</mat-icon>\n                    <span>Delete</span>\n                  </button> -->\n                </mat-menu>\n\n\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n              [class.example-expanded-row]=\"expandedElement === element\">\n            </tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n            </tr>\n          </table>\n          <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FoodService } from 'src/app/shared/services/food.service';\nimport { HelperService } from 'src/app/shared/services/helper.service';\n\n@Component({\n  selector: 'app-category-type-create',\n  templateUrl: './category-type-create.component.html',\n  styleUrls: ['./category-type-create.component.scss']\n})\nexport class CategoryTypeCreateComponent implements OnInit {\n  form: FormGroup = new FormGroup({});\n  title = \"Add Category\";\n  mode: string;\n  isLoading: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private foodService: FoodService,\n    private helperService: HelperService,\n    public dialogRef: MatDialogRef<CategoryTypeCreateComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {\n    this.checkMode();\n  }\n\n  checkMode() {\n    if (this.data) {\n      this.mode = \"edit\";\n      this.title = \"edit category type\";\n      this.form = this.fb.group({\n        name: [this.data.name, Validators.required],\n      });\n      return;\n    }\n    this.mode = \"create\";\n    this.title = \"create category type\";\n    this.form = this.fb.group({\n      name: [\"\", Validators.required],\n    });\n  }\n\n  onSave() {\n    if (this.form.invalid) {\n      this.helperService.validateAllFormFields(this.form);\n      return;\n    }\n\n    if (this.data) {\n      this.updateCategory();\n      return;\n    }\n\n    this.createCategory();\n  }\n\n  createCategory() {\n    this.isLoading = true\n    this.foodService.createCategoryType(this.form.value).subscribe((closeModal) => {\n      closeModal\n        ? this.dialogRef.close()\n        : this.helperService.validateAllFormFields(this.form);\n    });\n  }\n  updateCategory() {\n    this.isLoading = true\n    this.foodService.editCategoryType(this.form.value).subscribe((closeModal) => {\n      closeModal\n        ? this.dialogRef.close()\n        : this.helperService.validateAllFormFields(this.form);\n    });\n  }\n}\n","<div class=\"container-fluid\">\n  <mat-toolbar class=\"d-flex justify-content-between\">\n    <!-- <div class=\"d-flex justify-content-center\"> -->\n    <div>\n      <h2>{{title | titlecase}}</h2>\n    </div>\n    <div>\n      <mat-icon mat-button mat-dialog-close>\n        close\n      </mat-icon>\n    </div>\n    <!-- </div> -->\n  </mat-toolbar>\n  <div class=\"mt-2\">\n\n    <div class=\"card-body\">\n      <form [formGroup]=\"form\" class=\"row theme-form mega-form\">\n        <!-- Name -->\n        <mat-form-field>\n          <mat-label>Category Type</mat-label>\n          <input matInput formControlName=\"name\" type=\"text\">\n        </mat-form-field>\n        <!-- <div class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label class=\"col-form-label\">Category Name</label>\n                <input formControlName=\"name\" class=\"form-control\" type=\"text\" placeholder=\"Company Name\">\n                <div *ngIf=\"form.controls.name.touched && form.controls.name.errors?.required\" class=\"text text-danger\">\n                  Name is required.\n                </div>\n                <div *ngIf=\"form.controls.name.touched && form.controls.name.errors?.pattern\" class=\"text text-danger\">\n                  Name can only be alphabets.\n                </div>\n              </div>\n            </div> -->\n        <div class=\"mx-auto col-8\">\n          <button class=\"btn btn-primary btn-block\" (click)=\"onSave()\" mat-button>Save</button>\n\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { CategoryTypeCreateComponent } from \"../category-type-create/category-type-create.component\";\n\n@Component({\n  selector: 'app-category-type-list',\n  templateUrl: './category-type-list.component.html',\n  styleUrls: ['./category-type-list.component.scss'],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class CategoryTypeListComponent implements OnInit {\n  downloading = false;\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  title = \"Category\";\n  displayedColumns: any[] = [\n    \"position\",\n    \"name\",\n    // \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n  private vendor: string = \"\";\n\n  constructor(\n    private foodService: FoodService,\n    private dialog: MatDialog\n    ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.tableLoading = true;\n    this.getCategorys();\n  }\n\n  openCreateCategoryTypeDialog(data=null) {\n    const dialogRef = this.dialog.open(CategoryTypeCreateComponent, {\n      data: data\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // console.log(`Dialog result: ${result}`);\n      this.getCategorys()\n    });\n  }\n\n  getCategorys() {\n    this.foodService.getCategoryTypes(this.pageSize, this.pageIndex);\n    this.foodService\n      .getCategoryTypesListenerUpdated()\n      .subscribe((inventory: any) => {\n        console.log(inventory);\n        if (inventory.results) {\n          this.length = inventory.count;\n          this.dataSource = inventory.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n        // this.dataSource = new MatTableDataSource(orderHistory);\n        // this.dataSource.sort = this.sort;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getCategorys();\n    this.tableLoading = true;\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n        <button (click)=\"openCreateCategoryTypeDialog()\" class=\"btn btn-sm btn-primary\">\n          <i class=\"mr-2 fa fa-plus\"></i>\n          Add Category Type\n        </button>\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <!-- <app-table-functions [downloading]=\"downloading\"></app-table-functions> -->\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n          <mat-spinner></mat-spinner>\n        </div>\n\n        <div class=\"table-responsive\">\n\n          <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n            <!-- position Column -->\n            <ng-container matColumnDef=\"position\" sticky>\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n              <td class=\"text-center\" mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n\n            <!-- Contact Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.name || 'N/A'}}</td>\n            </ng-container>\n\n            <!-- Star Column -->\n            <!-- <ng-container matColumnDef=\"star\" stickyEnd>\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td mat-cell *matCellDef=\"let element\">\n                <mat-icon>more_vert</mat-icon>\n              </td>\n            </ng-container> -->\n\n\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n            <!-- <ng-container matColumnDef=\"expandedDetail\">\n              <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n                <div class=\"example-element-detail\"\n                  [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                  <div class=\"example-element-diagram\">\n                    <div class=\"example-element-position\"> {{element.position}} </div>\n                    <div class=\"example-element-symbol\"> {{element.position}} </div>\n                    <div class=\"example-element-name\"> {{element.name}} </div>\n                    <div class=\"example-element-weight\"> {{element.position}} </div>\n                  </div>\n                  <div class=\"example-element-description\">\n                    {{element.description}}\n                  </div>\n                </div>\n              </td>\n            </ng-container> -->\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"\"\n              [class.example-expanded-row]=\"expandedElement === element\">\n            </tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n            </tr>\n          </table>\n          <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-food-details',\n  templateUrl: './food-details.component.html',\n  styleUrls: ['./food-details.component.scss']\n})\nexport class FoodDetailsComponent implements OnInit {\n\n  foodList: any[] = []\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.foodList.length = 4\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-lg-8\">\n      <div class=\"row align-items-center justify-content-between\">\n        <img [src]=\"'../../../assets/svg/restaurant.svg'\" class=\"img-fluid vendor-logo\" alt=\"\">\n\n        <div class=\"col-auto my-auto\">\n          <p class=\"mb-0 f-w-700\">\n            Select Date\n          </p>\n          <img src=\"../../../assets/svg/date_range_light.svg\" alt=\"\">\n        </div>\n      </div>\n\n      <app-food-info></app-food-info>\n\n      <div class=\"mt-5 d-flex justify-content-between\">\n        <div class=\"mr-5\">\n          <h5>\n            Similar Food Types\n          </h5>\n        </div>\n      </div>\n\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n\n          <div *ngFor=\"let food of foodList\" class=\"col-3\">\n            <app-food></app-food>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"px-0 mx-0 col-3 basket-container\">\n      <app-basket></app-basket>\n    </div>\n  </div>\n\n</div>\n","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { Food } from 'src/app/shared/models/food.model';\n\n@Component({\n  selector: 'app-food-info',\n  templateUrl: './food-info.component.html',\n  styleUrls: ['./food-info.component.scss']\n})\nexport class FoodInfoComponent implements OnInit {\n  @Input(\"food\") food: any ='an'\n  // @Input(\"deliveryDate\") food: Food;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<div class=\"\">\n  <div class=\"row justify-content-between\">\n    <div class=\"col-7\">\n      <div class=\"card bg-secondary food-details-card\">\n        <div class=\"card-body \">\n          <div class=\"d-flex justify-content-between align-items-center\">\n            <div class=\"\">\n              <p class=\"food-name\">\n                {{food.name}}\n              </p>\n\n              <p class=\"text-gray-1\">\n                <!-- Food Description -->\n                {{food?.description || 'No description available' }}\n              </p>\n            </div>\n\n            <img class=\"rounded-circle dish d-block\" [src]=\"food.image\" alt=\"\">\n\n          </div>\n\n\n          <!-- <h3 class=\"text-primary\">\n            Ingredients\n          </h3>\n\n          <button class=\"btn btn-primary\">\n            View all ingredients\n          </button>\n\n          <h3 class=\"text-primary\">\n            Nutritional Value\n          </h3> -->\n\n\n        </div>\n      </div>\n    </div>\n\n    <div class=\"text-right col-5\">\n      <h6 class=\"h6\">\n        Latest Reviews\n      </h6>\n      <div class=\"review-box\">\n        <hr class=\"hr\">\n        rating\n\n        <ng-container *ngFor=\"let comment of food.comments\">\n          <h6 class=\"name\">\n            {{comment.by | titlecase}}\n          </h6>\n          <p class=\"pb-0 mb-0 small review text-gray\">\n            {{comment.comment}}\n          </p>\n          <small class=\"pt-0 mt-0 time\">\n            {{comment | dateTime : comment.date: comment.time}}\n          </small>\n        </ng-container>\n      </div>\n\n      <div class=\"mt-5 amount\">\n        {{food?.unit_price | currency:'NGN' : \"₦\" : '1.0-0'}}\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FoodService } from \"../../shared/services/food.service\";\nimport { VendorService } from \"../../shared/services/vendor.service\";\nimport { Vendor } from \"../../shared/models/vendor.model\";\nimport { Category, Food } from \"../../shared/models/food.model\";\nimport { CartService } from \"src/app/shared/services/cart.service\";\nimport { TransactionService } from \"src/app/transactions/transaction.service\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { SelectMealTypeComponent } from \"../select-meal-type/select-meal-type.component\";\nimport { Observable } from \"rxjs\";\nimport { shareReplay, take, takeLast } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-food-list\",\n  templateUrl: \"./food-list.component.html\",\n  styleUrls: [\"./food-list.component.scss\"],\n})\nexport class FoodListComponent implements OnInit {\n  vendors: Vendor[] = [];\n  selectedVendor: Vendor;\n  categories: Category[] = [];\n  selectedCategory: Category;\n  foodList: Food[] = [];\n  cart: Food[] = [];\n  recomendedFoods: Food[];\n  dailyLimit = 0;\n  personalBalance = 0;\n  allow_mix: boolean = true;\n  delivery_date: any;\n  isLoading: boolean = false;\n\n  dateFilter = (d: Date | null): boolean => {\n    let start_date: Date, end_date: Date, today: Date;\n    let allow = this.user.allow_same_day_booking;\n    start_date = new Date(this.user.start_booking_date);\n    start_date.setHours(0, 0, 0, 0);\n    end_date = new Date(this.user.end_booking_date);\n    today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return allow\n      ? start_date <= d && d >= today && d <= end_date\n      : start_date <= d && d > today && d <= end_date;\n  };\n  cartTotal: number;\n  isStaff: boolean;\n  isVend: boolean;\n  user: any;\n  foodLoading: boolean = true;\n  mealType: string;\n\n  constructor(\n    private foodService: FoodService,\n    private vendorService: VendorService,\n    private cartService: CartService,\n    private transactionService: TransactionService,\n    private helperService: HelperService,\n    private router: Router,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.transactionService.getIsLoading().subscribe((isLoading) => {\n      this.isLoading = isLoading;\n    });\n    this.getuserGroup();\n    this.foodService.getRecomended().subscribe((recomended) => {\n      this.vendors = recomended.vendors;\n      this.selectedVendor = this.vendors[0];\n      this.getCategories(this.selectedVendor);\n      this.recomendedFoods = recomended.inventory.map((element) => {\n        return { delivery_date: element.delivery_date, ...element.food };\n      });\n      let deliveryDate;\n      recomended.inventory.length > 0\n        ? (deliveryDate = recomended.inventory[0]?.delivery_date)\n        : (deliveryDate = new Date());\n      this.setDeliveryDate(deliveryDate);\n    });\n    this.getCart();\n    this.user = this.helperService.getUserInfo();\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      case \"emp\":\n        this.isStaff = true;\n        break;\n      case \"ven\":\n        this.isVend = true;\n        break;\n      // case 'sid':\n      //   this.isSid = true;\n      //   this.getCompanyArray()\n      //   break;\n      // case 'comp':\n      //   this.isComp = true;\n      //   this.company = companyID\n      // this.getCompanyArray()\n      // break;\n\n      default:\n        break;\n    }\n  }\n\n  setDeliveryDate(value) {\n    this.delivery_date = this.helperService.formatDate(value);\n    this.getDailyLimit();\n    this.getFoods();\n  }\n\n  getDailyLimit() {\n    this.transactionService\n      .getDailyLimit(this.delivery_date)\n      .subscribe((dailyLimit) => {\n        this.dailyLimit = dailyLimit;\n      });\n  }\n\n  // getVendors() {\n  //   this.vendorService.getVendors();\n  //   this.vendorService.getVendorsListener().subscribe((vendors) => {\n  //     this.vendors = vendors.results;\n  //     this.selectedVendor = this.vendors[0];\n  //     this.getCategories(this.selectedVendor);\n  //   });\n  // }\n\n  addToCart(food: Food) {\n    food.meal_type = this.mealType;\n    const subPrice = food.quantity * food.unit_price;\n    if (this.dailyLimit >= subPrice) {\n      this.cartService.inAddToCart(food);\n      // this.inAddToCart(food);\n    } else if (this.allow_mix) {\n      const allowance = this.personalBalance + this.dailyLimit;\n      if (allowance >= subPrice) {\n        const allow = confirm(\n          `Amount exceed company wallet, would you like to use your personal wallet?`\n        );\n        if (allow) {\n          this.cartService.inAddToCart(food);\n          // this.inAddToCart(food);\n        }\n      } else {\n        alert(\n          `Amount exceeds company wallet, Please topup your personal wallet to continue with this transaction`\n        );\n        this.router.navigate([\"/transactions/topup-personal\"]);\n      }\n    }\n    // this.cartListener.next([...this.cart]);\n  }\n\n  getCategories(vendor) {\n    this.foodLoading = true;\n    this.selectedVendor = vendor;\n    this.foodService.getCategorys(this.selectedVendor.user.id);\n    this.foodService\n      .getCategorysListenerUpdated()\n      .pipe(take(1))\n      .subscribe((categorries) => {\n        this.categories = categorries.results;\n        this.selectedCategory = this.categories[0];\n        if (this.selectedCategory) {\n          this.getFoods();\n        } else {\n          this.foodLoading = false;\n          this.foodList = [];\n        }\n      });\n  }\n\n  getFoods() {\n    if (this.selectedCategory && this.selectedVendor && this.delivery_date) {\n      this.selectMealType()\n        .pipe(take(1))\n        .subscribe((mealType: string) => {\n          if (mealType) {\n            this.mealType = mealType;\n            this.foodService.getFoodInventory(\n              this.selectedVendor.user.id,\n              this.selectedCategory.id,\n              this.delivery_date,\n              this.mealType\n            );\n            this.foodService\n              .getInventoryListenerUpdated()\n              .subscribe((foods) => {\n                console.log(foods);\n                this.foodLoading = false;\n                if (foods?.results) {\n                  this.foodList = foods.results.map((element) => {\n                    return {\n                      delivery_date: element.delivery_date,\n                      ...element.food,\n                    };\n                  });\n                } else {\n                  this.foodList = [];\n                }\n              });\n          } else {\n            this.foodLoading = false;\n            this.foodList = [];\n            return;\n          }\n        });\n    }\n  }\n\n  selectMealType(): Observable<string> {\n    return this.dialog\n      .open(SelectMealTypeComponent, {\n        disableClose: true,\n      })\n      .afterClosed();\n    // .subscribe((mealType: number) => {\n    //   this.mealType = mealType;\n    // });\n  }\n\n  getCart() {\n    this.cartService.getCart().subscribe((cart) => {\n      this.cart = cart.cart;\n      this.cartTotal = cart.total;\n      // this.cartService.calcCartTotal();\n    });\n  }\n\n  onRemoveFromCart(value: Food) {\n    this.cartService.removeFromCart(value);\n  }\n\n  onUpdateBasket(food: Food) {\n    let subPrice = food.quantity * food.unit_price;\n    if (this.dailyLimit >= subPrice) {\n      this.cartService.onUpdateCart(food);\n      // this.onUpdateCart(food);\n    } else if (this.allow_mix) {\n      const allowance = this.personalBalance + this.dailyLimit;\n      if (allowance >= subPrice) {\n        const allow = confirm(\n          `Amount exceed company wallet, would you like to use your personal wallet?`\n        );\n        if (allow) {\n          this.cartService.onUpdateCart(food);\n          // this.onUpdateCart(food);\n        }\n      } else {\n        alert(\n          `Amount exceeds company wallet, Please topup your personal wallet to continue with this transaction`\n        );\n        // navigate them to top up screen;\n        food.quantity = 1;\n        this.cartService.inAddToCart(food);\n        this.router.navigate([\"/transactions/topup-personal\"]);\n      }\n    }\n  }\n\n  onConfirmOrder() {\n    this.transactionService.placeOrder(this.cart);\n  }\n\n  formatDate(date) {\n    const newDate = new Date(date);\n    return this.helperService.formatDate(newDate);\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div *ngIf=\"isStaff\" class=\"d-flex justify-content-end align-items-center\">\n        <img class=\"mr-2\" src=\"../../../assets/images/Wallet.svg\" alt=\"\" srcset=\"\">\n        <span>\n          company {{dailyLimit | currency:\"NGN\" : \"₦\" : '1.0-0'}} (left)\n          <!-- company {{this.user?.daily_limit | currency:\"NGN\" : \"₦\" : '1.0-0'}} (daily) -->\n          <!-- {{this.user?.today_daily_limit_left | currency:\"NGN\" : \"₦\" : '1.0-0'}} (left today) -->\n        </span>\n\n        <span class=\"mx-2\">\n          |\n        </span>\n        personal {{this.user?.personal_balance | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n      </div>\n    </div>\n\n    <div class=\"col-12\">\n      <div class=\"row justify-content-between\">\n        <div [ngClass]=\"{'col-lg-9': cart.length > 0, 'col-lg-12': cart.length === 0}\" class=\"px-0 mx-0\">\n          <div>\n            <div class=\"px-3 row align-items-center justify-content-between\">\n              <div class=\"d-none d-md-block col-auto\">\n\n                <div class=\"card banner-card bg-primary\">\n                  <div class=\"card-body\">\n                    <ul class=\"pl-3 mb-4 mr-5\">\n                      <li>\n                        <h6>\n                          SELECT VENDOR & MENU\n                        </h6>\n                      </li>\n                      <li>\n                        <h6>\n                          SELECT DAY OF THE WEEK\n                        </h6>\n                      </li>\n                      <li>\n                        <h6>\n                          ORDER & CHECKOUT\n                        </h6>\n                      </li>\n                    </ul>\n                    <img class=\"banner-calendar\" src=\"../../../assets/svg/banner-card-calendar.svg\" alt=\"\">\n                    <img class=\"banner-thumb\" src=\"../../../assets/svg/banner-card-thumb.svg\" alt=\"\">\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"col-sm-auto col-md-6 vendors\">\n                <!-- Vendor List -->\n                <nav mat-align-tabs=\"center\" mat-tab-nav-bar animationDuration=\"2000ms\">\n                  <!-- <nav mat-tab-nav-bar [backgroundColor]=\"background\"> -->\n                  <a mat-tab-link *ngFor=\"let vendor of vendors\" (click)=\"getCategories(vendor)\"\n                    [active]=\"selectedVendor == vendor\">\n                    <div class=\"d-flex flex-column\">\n                      <img [src]=\"vendor.user.image || '../../../assets/svg/restaurant.svg'\"\n                        class=\"img-fluid vendor-logo\" alt=\"\">\n                      <p class=\"small\">{{ vendor.bussiness_name }}</p>\n                    </div>\n                  </a>\n                  <!-- <a mat-tab-link> <span class=\"rounded\">\n                    <img src=\"../../../assets/svg/restaurant.svg\" class=\"img-fluid\" alt=\"\">\n                  </span> </a>\n                  <a mat-tab-link> <span class=\"rounded\">\n                    <img src=\"../../../assets/svg/resturant_logo.svg\" class=\"img-fluid\" alt=\"\">\n                  </span> </a> -->\n                </nav>\n              </div>\n\n              <div class=\"col-md-auto text-right y-auto\">\n                <p class=\"mb-0 f-w-700\">\n                  Select Date\n                </p>\n                <input [matDatepickerFilter]=\"dateFilter\" (dateInput)=\"setDeliveryDate($event.value)\" #dateInput\n                  class=\"invisible-input\" [value]=\"delivery_date\" [matDatepicker]=\"picker\">\n                <mat-datepicker #picker></mat-datepicker>\n                <img class=\"img-fluid\" (click)=\"picker.open()\" src=\"../../../assets/svg/date_range_light.svg\" alt=\"\">\n\n\n              </div>\n            </div>\n            <p class=\"mb-0 text-center f-w-400\">\n              {{ dateInput.value | date: 'fullDate' }}\n            </p>\n          </div>\n\n          <div class=\"container-fluid\">\n            <div class=\"mt-5 row justify-content-between\">\n              <div class=\"d-none d-md-block col-auto\">\n                <h5>\n                  Select Meal\n                </h5>\n              </div>\n              <div class=\"col-md-6\">\n                <nav *ngIf=\"categories.length > 0\" mat-tab-nav-bar animationDuration=\"2000ms\">\n                  <a mat-tab-link *ngFor=\"let category of categories\" (click)=\"selectedCategory = category; getFoods()\"\n                    [active]=\"selectedCategory === category\">\n                    {{ category.name }}\n                  </a>\n                </nav>\n              </div>\n              <div class=\"d-none d-md-block col-auto\">\n                <!-- <p> -->\n                <mat-form-field *ngIf=\"foodList.length > 0\" appearance=\"outline\">\n                  <mat-label>Search</mat-label>\n                  <input matInput placeholder=\"Placeholder\">\n                  <mat-icon matPrefix>search</mat-icon>\n                </mat-form-field>\n                <!-- </p> -->\n\n              </div>\n\n            </div>\n          </div>\n\n\n          <div class=\"container-fluid cat-foods\">\n            <div class=\"row\">\n              <ng-container class=\"food-list\" *ngIf=\"foodLoading == false && foodList?.length > 0\">\n                <!-- List of Food -->\n                <!-- <div class=\"food-list\"> -->\n                <div *ngFor=\"let food of foodList\"\n                  [ngClass]=\"{'col-md-3': cart.length > 0, 'col-md-2': cart.length === 0}\">\n                  <app-food (addToCart)=\"addToCart($event)\" [food]=food></app-food>\n                </div>\n                <!-- </div> -->\n              </ng-container>\n\n              <!-- Data Loading -->\n              <ng-container *ngIf=\"(foodLoading == true )&& (foodList.length == 0)\">\n                <div class=\"example-loading-shade\">\n                  <div class=\"mx-auto my-auto loader-box\">\n                    <div class=\"loader\">\n                      <div class=\"line bg-primary\"></div>\n                      <div class=\"line bg-primary\"></div>\n                      <div class=\"line bg-primary\"></div>\n                      <div class=\"line bg-primary\"></div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"mx-auto my-auto loader-box\">\n                  <div class=\"loader\">\n                    <div class=\"line bg-primary\"></div>\n                    <div class=\"line bg-primary\"></div>\n                    <div class=\"line bg-primary\"></div>\n                    <div class=\"line bg-primary\"></div>\n                  </div>\n                </div>\n              </ng-container>\n\n\n              <!-- No Data -->\n              <ng-container *ngIf=\"foodLoading == false && foodList.length == 0\">\n                <div class=\"empty-cart col-12\">\n                  <div class=\"mt-4 text-center\">\n                    <img class=\"empty-cart-image\" src=\"../../../assets/svg/empty_cart.svg\" alt=\"no data\">\n                  </div>\n                  <h1 class=\"mt-4 text-center\">\n                    No data\n                  </h1>\n                  <p class=\"text-center\">\n                    No data, please try again\n                  </p>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n\n          <div class=\"mt-5 d-flex justify-content-between\">\n            <div class=\"mr-5\">\n              <h5>\n                Recomended Foods\n              </h5>\n            </div>\n          </div>\n\n          <div class=\"container-fluid recomended-food\">\n            <div class=\"row\">\n\n              <ng-container *ngIf=\"recomendedFoods?.length > 0; else noRecFoodTemplate\">\n                <div *ngFor=\"let recomendedFood of recomendedFoods\"\n                  [ngClass]=\"{'col-md-3': cart?.length > 0, 'col-md-2': cart?.length === 0}\">\n                  <app-food (addToCart)=\"addToCart($event)\" [food]=recomendedFood></app-food>\n                </div>\n              </ng-container>\n              <ng-template #noRecFoodTemplate>\n                <h1 class=\"mb-4 text-center\">\n                  No recomended foods for you.\n                </h1>\n              </ng-template>\n\n\n              <!-- <div class=\"col-12\">\n                List of Food\n              </div> -->\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"cart.length > 0\" class=\"px-0 mx-0 col-md-3 basket-container\">\n          <app-basket (confirmOrder)=\"onConfirmOrder()\" (updateCart)=\"onUpdateBasket($event)\"\n            (removeFromCart)=\"onRemoveFromCart($event)\" [isLoading]=\"isLoading\" [cart]=\"cart\" [cartTotal]=\"cartTotal\">\n          </app-basket>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FoodListComponent } from './food-list/food-list.component';\nimport { FoodDetailsComponent } from './food-details/food-details.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { InventoryTopupComponent } from './inventory-topup/inventory-topup.component';\nimport { CategoryListComponent } from './category-list/category-list.component';\nimport { CategoryTypeListComponent } from './category-type-list/category-type-list.component';\nimport { CategoryCreateComponent } from './category-create/category-create.component';\nimport { FoodTableComponent } from './food-table/food-table.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component:FoodListComponent\n  },\n  {\n    path: \"food-details\",\n    component:FoodDetailsComponent\n  },\n  {\n    path: \"food-table\",\n    component:FoodTableComponent\n  },\n  {\n    path: \"inventory\",\n    component:InventoryComponent\n  },\n  {\n    path: \"inventory-topup\",\n    component:InventoryTopupComponent\n  },\n  {\n    path: \"category\",\n    component:CategoryListComponent\n  },\n  {\n    path: \"category-create\",\n    component:CategoryCreateComponent\n  },\n  {\n    path: \"category-type\",\n    component:CategoryTypeListComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FoodRoutingModule { }\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { Food } from 'src/app/shared/models/food.model';\nimport { FoodService } from 'src/app/shared/services/food.service';\nimport { HelperService } from 'src/app/shared/services/helper.service';\nimport { UserService } from 'src/app/user/user.service';\nimport { AddFoodComponent } from '../add-food/add-food.component';\nimport { DialogService } from \"../../shared/services/dialog.service\";\n@Component({\n  selector: 'app-food-table',\n  templateUrl: './food-table.component.html',\n  styleUrls: ['./food-table.component.scss'],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class FoodTableComponent implements OnInit {\n  downloading = false;\n  dataSource: Food[] = [];\n  tableLoading: boolean = true;\n  title = \"Foods\";\n  displayedColumns: any[] = [];\n  expandedElement: any;\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n  isStaff: boolean;\n  isSid: boolean;\n  isComp: boolean;\n  isVend: boolean;\n  vendor: any;\n\n  constructor(\n    private foodService: FoodService,\n    private userService: UserService,\n    private helperService: HelperService,\n    private dialog: MatDialog,\n    private dialogService: DialogService\n    ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.tableLoading = true;\n    this.getuserGroup();\n  }\n\n\n  openDialog(food = null) {\n    const dialogRef = this.dialog.open(AddFoodComponent, {\n      data: food\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.getFoodList()\n    });\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      case \"ven\":\n        this.isVend = true;\n        this.vendor = this.helperService.getUserInfo().id\n        this.getFoodList();\n        this.displayedColumns = [\n          // \"position\",\n          \"food\",\n          \"unit_price\",\n          \"category\",\n          \"star\",\n        ];\n        // this.getCompanyArray()\n        break;\n        // case 'sid':\n        //   this.isSid = true;\n        //   this.getCompanyArray()\n        //   break;\n        // case 'comp':\n        //   this.isComp = true;\n        //   this.company = companyID\n        // this.getCompanyArray()\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getFoodList() {\n    this.foodService.getFoods(this.vendor, null, this.pageSize, this.pageIndex)\n    this.foodService.getFoodListenerUpdate()\n    .subscribe((foodList) => {\n      this.dataSource = foodList.results\n      console.log(this.dataSource)\n      this.length = foodList.count\n      this.tableLoading = false\n    })\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getFoodList();\n    this.tableLoading = true;\n  }\n\n  onDelete(food) {\n    this.dialogService.openConfirmDialog()\n    .afterClosed()\n    .subscribe((value) => {\n      if (value === true) {\n        this.foodService.deleteFood(food)\n        .subscribe((listener) => {this.getFoodList()})\n      }\n    })\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n        <button (click)=\"openDialog()\" class=\"btn btn-sm btn-primary\">\n          <i class=\"mr-2 fa fa-plus\"></i>\n          Add Food\n        </button>\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n          <mat-spinner></mat-spinner>\n        </div>\n\n        <div class=\"table-responsive\">\n\n          <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n\n            <!-- Food Column -->\n            <ng-container matColumnDef=\"food\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Food </th>\n              <td mat-cell *matCellDef=\"let element\">\n                <img class=\"rounded table-img m-r-5\" [src]=\"element?.image\" [alt]=\"element.name\">\n                <!-- <img class=\"rounded-circle image-radius m-r-5\" [src]=\"element?.image\" [alt]=\"element.name\"> -->\n                {{element?.name || 'N/A' | titlecase}}\n              </td>\n            </ng-container>\n\n\n            <!-- Unit Price Column -->\n            <ng-container matColumnDef=\"unit_price\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n              <td mat-cell *matCellDef=\"let element\"> {{ element?.unit_price | currency:\"NGN\" : \"₦\" : '1.0-0' }} </td>\n            </ng-container>\n\n            <!-- Platform Column -->\n            <ng-container matColumnDef=\"category\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Category </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element?.category_full?.name  }} </td>\n            </ng-container>\n\n            <!-- Star Column -->\n            <ng-container matColumnDef=\"star\" stickyEnd>\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td mat-cell *matCellDef=\"let element\">\n                <button (click)=\"expandedElement = expandedElement === element ? null : element\" mat-icon-button\n                  class=\"btn btn-outline-primary\">\n                  <mat-icon>expand_more</mat-icon>\n                </button>\n              </td>\n            </ng-container>\n\n\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n            <ng-container matColumnDef=\"expandedDetail\">\n              <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n                <div class=\"example-element-detail\"\n                  [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                  <div class=\"container-fluid\">\n                    <app-food-info [food]=\"element\"></app-food-info>\n                    <div class=\"card-footer\">\n                      <div class=\"d-flex justify-content-end\">\n                        <!-- <button (click)=\"onDelete(element)\" class=\"mr-2\" mat-button color=\"warn\">Delete</button> -->\n                        <button (click)=\"openDialog(element)\" mat-raised-button color=\"primary\">Edit</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n              [class.example-expanded-row]=\"expandedElement === element\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n            </tr>\n          </table>\n          <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { FoodRoutingModule } from \"./food-routing.module\";\nimport { FoodListComponent } from \"./food-list/food-list.component\";\nimport { FoodComponent } from \"./food/food.component\";\nimport { BasketComponent } from \"./basket/basket.component\";\nimport { FoodDetailsComponent } from \"./food-details/food-details.component\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { InventoryComponent } from \"./inventory/inventory.component\";\nimport { InventoryTopupComponent } from \"./inventory-topup/inventory-topup.component\";\nimport { CategoryTypeListComponent } from \"./category-type-list/category-type-list.component\";\nimport { CategoryListComponent } from \"./category-list/category-list.component\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { CategoryCreateComponent } from \"./category-create/category-create.component\";\nimport { AddFoodComponent } from \"./add-food/add-food.component\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { OtherFoodsComponent } from \"./inventory/other-foods/other-foods.component\";\nimport { CurrentInventoryComponent } from \"./inventory/current-inventory/current-inventory.component\";\nimport { CategoryTypeCreateComponent } from './category-type-create/category-type-create.component';\nimport { FoodTableComponent } from './food-table/food-table.component';\nimport { FoodInfoComponent } from './food-info/food-info.component';\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectMealTypeComponent } from './select-meal-type/select-meal-type.component';\n\n@NgModule({\n  declarations: [\n    FoodListComponent,\n    FoodComponent,\n    BasketComponent,\n    FoodDetailsComponent,\n    InventoryComponent,\n    InventoryTopupComponent,\n    CategoryTypeListComponent,\n    CategoryListComponent,\n    CategoryCreateComponent,\n    AddFoodComponent,\n    OtherFoodsComponent,\n    CurrentInventoryComponent,\n    CategoryTypeCreateComponent,\n    FoodTableComponent,\n    FoodInfoComponent,\n    SelectMealTypeComponent,\n  ],\n  imports: [\n    CommonModule,\n    FoodRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatDatepickerModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatTableModule,\n    SharedModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ],\n})\nexport class FoodModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Food } from \"src/app/shared/models/food.model\";\n\n@Component({\n  selector: \"app-food\",\n  templateUrl: \"./food.component.html\",\n  styleUrls: [\"./food.component.scss\"],\n})\nexport class FoodComponent implements OnInit {\n  @Input(\"food\") food: Food;\n  @Output(\"addToCart\") addToCart = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onAddToCart(food: Food) {\n    food.quantity = 1;\n    this.addToCart.emit(food);\n  }\n}\n","<!-- <p>food works!</p> -->\n<div [matTooltip]=\"food.name\" class=\"mt-5 card bg-primary mx-1\">\n  <div class=\"card-body\">\n    <img class=\"rounded-circle image-radius mx-auto img-fluid food-img d-block\" [src]=\"food?.image\" [alt]=\"food?.name\">\n    <p class=\"text-center mb-1 mt-3\">\n      {{ (food?.name.length>23)? (food.name | slice:0:16)+'...':(food.name)}}\n    </p>\n    <p class=\"text-center\">\n      {{food?.unit_price| currency:\"NGN\" : \"₦\" : '1.0-0'}}\n    </p>\n\n    <!-- <div class=\"example-button-container\"> -->\n      <div class=\"d-flex justify-content-between\">\n        <button (click)=\"onAddToCart(food)\" class=\"d-block btn-sm mx-auto btn add-to-cart-button\" >\n          <mat-icon>shopping_cart</mat-icon>\n        </button>\n\n        <!-- <button (click)=\"onAddToCart(food)\" class=\"d-block btn-sm mx-auto btn add-to-cart-button\" >\n          <mat-icon>info</mat-icon>\n        </button> -->\n\n      </div>\n    <!-- </div> -->\n  </div>\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { UserService } from \"src/app/user/user.service\";\n\n@Component({\n  selector: \"app-inventory-topup\",\n  templateUrl: \"./inventory-topup.component.html\",\n  styleUrls: [\"./inventory-topup.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class InventoryTopupComponent implements OnInit {\n  downloading = false;\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  // dataSource = new MatTableDataSource([]);\n  title = \"Inventory Topup\";\n  displayedColumns: any[] = [\n    \"position\",\n    \"created_by\",\n    \"company\",\n    \"top_up_quantity\",\n    \"date\",\n    \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n\n  constructor(\n    private foodService: FoodService,\n  ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.tableLoading = true;\n    this.getInventoryTopup();\n  }\n\n  getInventoryTopup() {\n    this.foodService.getInventoryTopUp(this.pageSize, this.pageIndex);\n    this.foodService\n      .getInventoryTopUpListenerUpdated()\n      .subscribe((inventory: any) => {\n        if (inventory.results) {\n          this.length = inventory.count;\n          this.dataSource = inventory.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getInventoryTopup();\n    this.tableLoading = true;\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>{{title | titlecase}}</h5>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions [downloading]=\"downloading\"></app-table-functions>\n\n      <div class=\"mat-elevation-z8\">\n        <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n          <mat-spinner></mat-spinner>\n        </div>\n\n        <div class=\"table-responsive\">\n\n          <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n            <!-- position Column -->\n            <ng-container matColumnDef=\"position\" sticky>\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n              <td class=\"text-center\" mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n\n            <!-- Contact Name Column -->\n            <ng-container matColumnDef=\"created_by\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> By </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.created_by || 'N/A'}}</td>\n            </ng-container>\n\n            <!-- Contact Email Column -->\n            <ng-container matColumnDef=\"company\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> For</th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.company || 'N/A'}} </td>\n            </ng-container>\n\n            <!-- Company Name Column -->\n            <ng-container matColumnDef=\"top_up_quantity\">\n              <th mat-header-cell *matHeaderCellDef> Quantity </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.top_up_quantity || 'N/A'}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"date\">\n              <th mat-header-cell *matHeaderCellDef> Date </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.date || 'N/A'}} </td>\n            </ng-container>\n\n            <!-- Star Column -->\n            <ng-container matColumnDef=\"star\" stickyEnd>\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td mat-cell *matCellDef=\"let element\">\n                <mat-icon>more_vert</mat-icon>\n              </td>\n            </ng-container>\n\n\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n            <ng-container matColumnDef=\"expandedDetail\">\n              <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n                <div class=\"example-element-detail\"\n                  [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                  <div class=\"example-element-diagram\">\n                    <div class=\"example-element-position\"> {{element.position}} </div>\n                    <div class=\"example-element-symbol\"> {{element.position}} </div>\n                    <div class=\"example-element-name\"> {{element.name}} </div>\n                    <div class=\"example-element-weight\"> {{element.position}} </div>\n                  </div>\n                  <div class=\"example-element-description\">\n                    {{element.description}}\n                  </div>\n                </div>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n              [class.example-expanded-row]=\"expandedElement === element\"\n              (click)=\"expandedElement = expandedElement === element ? null : element\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n            </tr>\n          </table>\n          <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { DialogService } from \"src/app/shared/services/dialog.service\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { NotificationService } from \"src/app/shared/services/notification.service\";\n\n@Component({\n  selector: \"app-current-inventory\",\n  templateUrl: \"./current-inventory.component.html\",\n  styleUrls: [\"./current-inventory.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class CurrentInventoryComponent implements OnInit, OnChanges {\n  @Input(\"isVen\") isVen;\n  @Input(\"deliveryDate\") deliveryDate;\n  @Input(\"vendor\") vendor;\n  @Input(\"mealTypes\") mealTypes: any[];\n  @Output(\"updateInventory\") updateInventory = new EventEmitter<any>();\n\n  tableLoading: boolean;\n  dataSource: any[];\n  displayedColumns: any[] = [\n    // \"position\",\n    \"food\",\n    \"price\",\n    \"quantity_left\",\n    \"star\",\n  ];\n  length: number;\n  private pageSize: number;\n  private pageIndex: number;\n  isLoading: any;\n\n  constructor(\n    private foodService: FoodService,\n    private notificationService: NotificationService\n  ) {}\n\n  ngOnInit(): void {\n    // this.getInventory()\n    this.isVen ? this.displayedColumns = [\"food\", \"price\", \"quantity_left\", \"star\"]: this.displayedColumns = [\"food\", \"price\", \"quantity_left\", \"vendor\", \"star\",]\n    this.foodService.getIsToppingUp().subscribe((isLoading) => {\n      this.isLoading = isLoading;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    this.getInventory();\n  }\n\n  test() {\n    console.log(`gimme a sec`);\n  }\n\n  getInventory() {\n    this.tableLoading = true;\n    this.foodService.getInventory(\n      this.vendor,\n      this.deliveryDate,\n      this.pageSize,\n      this.pageIndex\n    );\n    this.foodService\n      .getInventoryListenerUpdated()\n      .subscribe((inventory: any) => {\n        if (inventory.results) {\n          this.length = inventory.count;\n          this.dataSource = inventory.results.map((element, index) => {\n            return { ...element, position: index + 1 };\n          });\n          this.tableLoading = false;\n        } else {\n          this.length = 0;\n          this.dataSource = [];\n          this.tableLoading = false;\n        }\n        // this.dataSource = new MatTableDataSource(orderHistory);\n        // this.dataSource.sort = this.sort;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getInventory();\n    this.tableLoading = true;\n  }\n\n  onUpdateInventory(element) {\n    if (element.meal_type) {\n      this.updateInventory.emit(element);\n    } else {\n      this.notificationService.warning(\n        \"Warning\",\n        \"Kindly select a meal type and enter a valid quantity\"\n      );\n    }\n  }\n\n  // onDeleteInventory(food) {\n  //   this.dialogService.openConfirmDialog()\n  //   .afterClosed()\n  //   .subscribe((value) => {\n  //     if (value) {\n  //       this.foodService.deleteInventory(food)\n  //     }\n  //   })\n  // }\n}\n","<div class=\"mat-elevation-z8\">\n  <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n    <mat-spinner></mat-spinner>\n  </div>\n\n  <div class=\"table-responsive\">\n\n\n    <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n\n      <!-- Contact Name Column -->\n      <ng-container matColumnDef=\"food\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Food </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <img class=\"rounded table-img m-r-5\" [src]=\"element?.food?.image\" [alt]=\"element?.food.name\">\n          {{element?.food?.name || 'N/A' | titlecase}}\n        </td>\n      </ng-container>\n\n      <!-- Contact Email Column -->\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{element.food.unit_price | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n        </td>\n      </ng-container>\n\n      <!-- Company Name Column -->\n      <ng-container matColumnDef=\"quantity_left\">\n        <th mat-header-cell *matHeaderCellDef> Stock </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{element.quantity_left || 'N/A'}}\n        </td>\n      </ng-container>\n\n      <!-- Vendor Name Column -->\n      <ng-container *ngIf=\"!isVen\" matColumnDef=\"vendor\">\n        <th mat-header-cell *matHeaderCellDef> Vendor </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{element?.created_by?.bussiness_name || 'N/A'}}\n        </td>\n      </ng-container>\n\n      <!-- Star Column -->\n      <ng-container matColumnDef=\"star\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button (click)=\"expandedElement = expandedElement === element ? null : element\" mat-icon-button\n            class=\"btn btn-outline-primary\">\n            <mat-icon>expand_more</mat-icon>\n          </button>\n          <!-- <mat-icon (click)=\"expandedElement = expandedElement === element ? null : element\">more_vert</mat-icon> -->\n        </td>\n      </ng-container>\n\n\n      <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n      <ng-container matColumnDef=\"expandedDetail\">\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n          <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n            <div class=\"mt-3 card bg-secondary text-gray-1\">\n              <div class=\"card-body \">\n                <div class=\"d-flex\">\n                  <div class=\"col-2\">\n                    <img [src]=\"element.food.image\" class=\"img-thumbnail\" [alt]=\"element.food.name\">\n                    <br>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"mx-auto col-10\">\n                      <div class=\"row\">\n                        <p class=\"mb-0 col-12\">\n                          Name\n                        </p>\n                        <h6 class=\"col-12\">\n                          {{element.food.name | titlecase}}\n                        </h6>\n                        <p class=\"text-justify col-12\">\n                          {{element.food.description || \"Lorem ipsum dolor sit amet consec\"}}\n                        </p>\n                        <div class=\"col-6\">\n                          <p class=\"mb-0\">Category</p>\n                          <h6>\n                            {{element?.food?.category_full?.name }}\n                          </h6>\n                        </div>\n                        <div class=\"col-6\">\n                          <p class=\"mb-0\">Vendor</p>\n                          <h6>\n                            {{element?.created_by?.bussiness_name | titlecase}}\n                          </h6>\n                        </div>\n                      </div>\n\n                      <mat-form-field class=\"mt-3 col-6 comment\" appearance=\"outline\">\n                        <mat-label>Stock</mat-label>\n                        <input [disabled]=\"!isVen\" [(ngModel)]=\"element.quantity_left\" matInput>\n                      </mat-form-field>\n\n                      <mat-form-field class=\"mt-3 col-6 comment\" appearance=\"outline\">\n                        <mat-label>Meal Type</mat-label>\n                        <mat-select [(ngModel)]=\"element.meal_type\">\n                          <!-- <mat-option>None</mat-option> -->\n                          <mat-option *ngFor=\"let mealType of mealTypes\" [value]=\"mealType.id\">{{mealType.name}}\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"d-flex justify-content-end\">\n                  <div>\n                    delivery date: {{element.delivery_date}}\n                  </div>\n\n                  <div class=\"text-success\" *ngIf=\"element.delivered_date\">\n                    delivered date: {{element.delivered_date}}\n                  </div>\n                </div>\n\n              </div>\n              <div *ngIf=\"isVen\" class=\"card-footer\">\n                <div class=\"d-flex justify-content-between\">\n                  <!-- <button (click)=\"onDeleteInventory(element)\" mat-button color=\"warn\">Delete</button> -->\n                  <button [disabled]=\"isLoading == true\" (click)=\"onUpdateInventory(element)\" mat-raised-button\n                    color=\"primary\"> <i class=\"fa fa-spin fa-spinner\" *ngIf=\"isLoading==true\"></i> Update</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n        [class.example-expanded-row]=\"expandedElement === element\">\n      </tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n      </tr>\n    </table>\n    <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n  </div>\n\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { User } from \"src/app/auth/login-info\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { UserService } from \"src/app/user/user.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { AddFoodComponent } from \"../add-food/add-food.component\";\n\n@Component({\n  selector: \"app-inventory\",\n  templateUrl: \"./inventory.component.html\",\n  styleUrls: [\"./inventory.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class InventoryComponent implements OnInit {\n  hideDownload: boolean = true;\n  isLoading: boolean = false;\n  vendorArray: any[];\n  downloading = false;\n  // range = new FormGroup({\n  //   start: new FormControl(),\n  //   end: new FormControl(),\n  // });\n  dataSource: any[] = [];\n  tableLoading: boolean = true;\n  // dataSource = new MatTableDataSource([]);\n  title = \"Inventory\";\n  displayedColumns: any[] = [\n    // \"position\",\n    \"food\",\n    \"price\",\n    \"quantity_left\",\n    \"star\",\n  ];\n  expandedElement: any;\n  length: number;\n\n  deliveryDate: string;\n  vendor: any = \"\";\n  isStaff: boolean;\n  isVen: boolean;\n  foods: any[];\n  isComp: boolean;\n  view: string;\n  mealTypes: any[];\n\n  constructor(\n    private foodService: FoodService,\n    private userService: UserService,\n    private helperService: HelperService,\n    private dialog: MatDialog\n  ) {}\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.tableLoading = true;\n    this.deliveryDate = this.helperService.formatDate(new Date());\n    this.getuserGroup();\n    this.foodService.getIsToppingUp().subscribe((isLoading) => {\n      this.isLoading = isLoading;\n    });\n    this.view = \"inventory\";\n  }\n\n  toggleView(view: string) {\n    this.view = view;\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(AddFoodComponent);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      // refresh the view\n    });\n  }\n\n  getuserGroup() {\n    const userGroup = this.helperService.getUserGroup();\n    switch (userGroup) {\n      // case \"emp\":\n      //   this.isStaff = true;\n      //   break;\n      case \"ven\":\n        this.isVen = true;\n        const user: User = this.helperService.getUserInfo();\n        this.vendor = user.id;\n        this.getMealTypes();\n\n        break;\n      // case 'sid':\n      //   this.isSid = true;\n      //   this.getVendorArray()\n      //   break;\n      case \"cmp_adm\":\n        this.isComp = true;\n        // this.company = companyID\n        this.getVendorArray();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getVendorArray() {\n    this.userService.getVendors();\n    this.userService.getVendorsUpdate().subscribe((vendors) => {\n      const vendorArray = vendors.results.map((element) => {\n        return { name: element.bussiness_name, id: element.user.id };\n      });\n      this.vendorArray = [{ id: \"\", name: \"All Vendors\" }, ...vendorArray];\n    });\n  }\n\n  getMealTypes() {\n    this.foodService.getMealTypes().subscribe((mealTypes) => {\n      this.mealTypes = mealTypes;\n    });\n  }\n\n  vendorChange(value) {\n    this.vendor = value;\n    this.tableLoading = true;\n  }\n\n  setDeliveryDate(value) {\n    this.deliveryDate = this.helperService.formatDate(value.value);\n    this.tableLoading = true;\n  }\n\n  onUpdateInventory(element) {\n    this.isLoading = true;\n    const data = {\n      food: element.food.id,\n      delivery_date: this.deliveryDate,\n      top_up_quantity: element.quantity_left,\n      meal_type: element.meal_type,\n    };\n    this.foodService.topupInventory(data);\n  }\n\n  onExportExcel() {\n    this.downloading = !this.downloading;\n    let data;\n    if (this.isStaff) {\n      data = this.dataSource.map((element) => {\n        return {\n          name: element?.food?.name,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          vendor_user_id: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    } else if (this.isComp) {\n      data = this.dataSource.map((element) => {\n        return {\n          user: element?.user,\n          vendor_user_id: element?.vendor_user_id,\n          name: element?.food,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          comment: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    } else if (this.isVen) {\n      data = this.dataSource.map((element) => {\n        return {\n          user: element?.user,\n          company: element?.company,\n          name: element?.food,\n          quantity: element?.quantity,\n          platform: element?.platform,\n          comment: element?.vendor_user_id_full?.bussiness_name,\n          status: element?.status,\n        };\n      });\n    }\n    //else if(this.isSid) {\n    //   data = this.dataSource.map((element) => {\n    //     return {\n    //       company: element?.company,\n    //       user: element?.user,\n    //       vendor_user_id: element?.vendor_user_id,\n    //       name: element?.food,\n    //       quantity: element?.quantity,\n    //       platform: element?.platform,\n    //       comment: element?.vendor_user_id_full?.bussiness_name,\n    //       status: element?.status,\n    //     };\n    //   });\n    // }\n    this.helperService.exportExcel(data, \"transactions\", this.displayedColumns);\n    this.downloading = !this.downloading;\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"d-flex justify-content-between\">\n        <h5>{{title | titlecase}}</h5>\n\n        <button *ngIf=\"isVen\" (click)=\"openDialog()\" class=\"btn btn-sm btn-primary\">\n          <i class=\"mr-2 fa fa-plus\"></i>\n          Add Food\n        </button>\n      </div>\n    </div>\n    <div class=\"card-body\">\n\n      <app-table-functions [datePicker]=\"true\" [hideDownload]=\"hideDownload\" [downloading]=\"downloading\"\n        [vendorArray]=\"vendorArray\" (vendorChange)=\"vendorChange($event)\" (exportExcel)=\"onExportExcel()\"\n        [rangePicker]=\"false\" (setDate)=\"setDeliveryDate($event)\"></app-table-functions>\n\n      <!-- <mat-tab-group>\n        <mat-tab label=\"Current Inventory\">\n          <app-current-inventory (updateInventory)=\"onUpdateInventory($event)\" [vendor]=\"vendor\" [isVen]=\"isVen\"\n            [deliveryDate]=\"deliveryDate\"></app-current-inventory>\n        </mat-tab>\n        <mat-tab label=\"Other Foods\">\n          <app-other-foods (updateInventory)=\"onUpdateInventory($event)\" [vendor]=\"vendor\" [isVen]=\"isVen\"\n            [deliveryDate]=\"deliveryDate\"></app-other-foods>\n        </mat-tab>\n      </mat-tab-group> -->\n\n      <ul class=\"nav nav-tabs \">\n        <li class=\"nav-item\">\n          <a [ngClass]=\"{'active': view === 'inventory'}\" (click)=\"toggleView('inventory')\" class=\"nav-link\">Current\n            Inventory</a>\n        </li>\n        <li class=\"nav-item\">\n          <a [ngClass]=\"{'active': view === 'food'}\" (click)=\"toggleView('food')\" class=\"nav-link\">Other\n            Foods</a>\n        </li>\n      </ul>\n      <ng-container *ngIf=\"view == 'inventory';\">\n        <app-current-inventory (updateInventory)=\"onUpdateInventory($event)\" [mealTypes]=\"mealTypes\" [vendor]=\"vendor\"\n          [isVen]=\"isVen\" [deliveryDate]=\"deliveryDate\"></app-current-inventory>\n      </ng-container>\n      <ng-container *ngIf=\"view == 'food';\">\n        <app-other-foods (updateInventory)=\"onUpdateInventory($event)\" [mealTypes]=\"mealTypes\" [vendor]=\"vendor\"\n          [isVen]=\"isVen\" [deliveryDate]=\"deliveryDate\"></app-other-foods>\n      </ng-container>\n\n\n\n    </div>\n  </div>\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\nimport { HelperService } from \"src/app/shared/services/helper.service\";\nimport { NotificationService } from \"src/app/shared/services/notification.service\";\n\n@Component({\n  selector: \"app-other-foods\",\n  templateUrl: \"./other-foods.component.html\",\n  styleUrls: [\"./other-foods.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class OtherFoodsComponent implements OnInit, OnChanges {\n  @Input(\"isVen\") isVen;\n  @Input(\"deliveryDate\") deliveryDate;\n  @Input(\"vendor\") vendor: number;\n  @Input(\"mealTypes\") mealTypes: any[];\n  @Output(\"updateInventory\") updateInventory = new EventEmitter<any>();\n  tableLoading: boolean;\n  displayedColumns: any[] = [\n    // \"position\",\n    \"food\",\n    \"price\",\n    \"quantity_left\",\n    \"star\",\n  ];\n  dataSource: any[];\n  length: number;\n\n  private pageSize: number;\n  private pageIndex: number;\n  isLoading: boolean;\n\n  constructor(\n    private foodService: FoodService,\n    private notificationService: NotificationService\n  ) {}\n\n  ngOnInit(): void {\n    this.isVen ? this.displayedColumns = [\"food\", \"price\", \"quantity_left\", \"star\"]: this.displayedColumns = [\"food\", \"price\", \"quantity_left\", \"vendor\", \"star\",]\n    this.foodService.getIsToppingUp().subscribe((isLoading) => {\n      this.isLoading = isLoading;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.getOtherFoods();\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n  }\n\n  getOtherFoods() {\n    this.tableLoading = true;\n    this.foodService\n      .getOtherFoods(\n        this.vendor,\n        this.deliveryDate,\n        this.pageSize,\n        this.pageIndex\n      )\n      .subscribe((otherFoods) => {\n        this.dataSource = otherFoods.results.map((element) => {\n          return {\n            food: element,\n            quantity_left: 0,\n            top_up_quantity: 0,\n          };\n        });\n        this.length = otherFoods.count;\n        this.tableLoading = false;\n      });\n  }\n\n  pageChange(value: { pageSize: number; pageIndex: number }) {\n    this.pageSize = value.pageSize;\n    this.pageIndex = value.pageIndex;\n    this.getOtherFoods();\n    this.tableLoading = true;\n  }\n\n  onUpdateInventory(element) {\n    if (element.meal_type && element.quantity_left) {\n      this.updateInventory.emit(element);\n    } else {\n      this.notificationService.warning(\n        \"Warning\",\n        \"Kindly select a meal type and enter a valid quantity\"\n      );\n    }\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <div class=\"example-loading-shade\" *ngIf=\"tableLoading === true\">\n    <mat-spinner></mat-spinner>\n  </div>\n\n  <div class=\"table-responsive\">\n\n\n    <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n\n      <!-- Contact Name Column -->\n      <ng-container matColumnDef=\"food\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Food </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <img class=\"rounded table-img m-r-5\" [src]=\"element?.food?.image\" [alt]=\"element?.food?.name\">\n          {{element?.food?.name || 'N/A' | titlecase}}\n        </td>\n      </ng-container>\n\n      <!-- Contact Email Column -->\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{element?.food?.unit_price | currency:\"NGN\" : \"₦\" : '1.0-0'}}\n        </td>\n      </ng-container>\n\n      <!-- Company Name Column -->\n      <ng-container matColumnDef=\"quantity_left\">\n        <th mat-header-cell *matHeaderCellDef> Stock </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.quantity_left || 'N/A'}} </td>\n      </ng-container>\n\n      <!-- Vendor Name Column -->\n      <ng-container *ngIf=\"!isVen\" matColumnDef=\"vendor\">\n        <th mat-header-cell *matHeaderCellDef> Vendor </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{element?.food?.created_by_full?.bussiness_name || 'N/A'}}\n        </td>\n      </ng-container>\n\n      <!-- Star Column -->\n      <ng-container matColumnDef=\"star\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button (click)=\"expandedElement = expandedElement === element ? null : element\" mat-icon-button\n            class=\"btn btn-outline-primary\">\n            <mat-icon>expand_more</mat-icon>\n          </button>\n          <!-- <mat-icon (click)=\"expandedElement = expandedElement === element ? null : element\">more_vert</mat-icon> -->\n        </td>\n      </ng-container>\n\n\n      <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n      <ng-container matColumnDef=\"expandedDetail\">\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n          <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n            <div class=\"mt-3 card bg-secondary text-gray-1\">\n              <div class=\"card-body \">\n                <div class=\"d-flex\">\n                  <div class=\"col-2\">\n                    <img [src]=\"element?.food?.image\" class=\"img-thumbnail\" [alt]=\"element?.food?.name\">\n                    <br>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"mx-auto col-10\">\n                      <div class=\"row\">\n                        <p class=\"mb-0 col-12\">\n                          Name\n                        </p>\n                        <h6 class=\"col-12\">\n                          {{element?.food?.name | titlecase}}\n                        </h6>\n                        <p class=\"text-justify col-12\">\n                          {{element?.food?.description}}\n                        </p>\n                        <div class=\"col-6\">\n                          <p class=\"mb-0\">Category</p>\n                          <h6>\n                            {{element?.food?.category_full?.name | titlecase }}\n                          </h6>\n                        </div>\n                        <div class=\"col-6\">\n                          <p class=\"mb-0\">Vendor</p>\n                          <h6>\n                            {{element?.food?.created_by_full?.bussiness_name | titlecase}}\n                          </h6>\n                        </div>\n                      </div>\n\n                      <mat-form-field class=\"mt-3 col-6 comment\" appearance=\"outline\">\n                        <mat-label>Stock</mat-label>\n                        <input [readonly]=\"!isVen\" [(ngModel)]=\"element.quantity_left\" matInput>\n                      </mat-form-field>\n\n                      <mat-form-field class=\"mt-3 col-6 comment\" appearance=\"outline\">\n                        <mat-label>Meal Type</mat-label>\n                        <mat-select [(ngModel)]=\"element.meal_type\">\n                          <!-- <mat-option>None</mat-option> -->\n                          <mat-option *ngFor=\"let mealType of mealTypes\" [value]=\"mealType.id\">{{mealType.name}}\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n              <div *ngIf=\"isVen\" class=\"card-footer\">\n                <div class=\"d-flex justify-content-between\">\n                  <!-- <button (click)=\"onDeleteInventory(element)\" mat-button color=\"warn\">Delete</button> -->\n                  <button [disabled]=\"isLoading == true\" (click)=\"onUpdateInventory(element)\" mat-raised-button\n                    color=\"primary\"> <i class=\"fa fa-spin fa-spinner\" *ngIf=\"isLoading==true\"></i> Update</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"example-element-row\"\n        [class.example-expanded-row]=\"expandedElement === element\">\n      </tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"text-center mat-cell\" [attr.colspan]=\"displayedColumns.length\">No data to display</td>\n      </tr>\n    </table>\n    <app-paginator [length]=length (pageEvent)=pageChange($event)></app-paginator>\n  </div>\n\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { MatButtonToggleChange } from \"@angular/material/button-toggle\";\nimport { MatDialogRef } from \"@angular/material/dialog\";\nimport { FoodService } from \"src/app/shared/services/food.service\";\n\n@Component({\n  selector: \"app-select-meal-type\",\n  templateUrl: \"./select-meal-type.component.html\",\n  styleUrls: [\"./select-meal-type.component.scss\"],\n})\nexport class SelectMealTypeComponent implements OnInit {\n  mealTypes: any[];\n  constructor(\n    private foodService: FoodService,\n    public dialogRef: MatDialogRef<SelectMealTypeComponent>\n  ) {}\n\n  ngOnInit(): void {\n    this.getMealTypes();\n  }\n\n  getMealTypes() {\n    this.foodService.getMealTypes().subscribe((mealTypes) => {\n      this.mealTypes = mealTypes;\n    });\n  }\n\n  onChange(event: MatButtonToggleChange) {\n    this.dialogRef.close(event.value.id);\n  }\n}\n","<div class=\"d-flex justify-content-end\">\n  <button mat-icon-button mat-dialog-close>\n    <mat-icon>close</mat-icon>\n  </button>\n\n</div>\n<div class=\"container my-5\">\n  <h3 class=\"mb-4 text-center text-primary\">\n    Please select meal type.\n  </h3>\n  <div class=\"row\">\n    <div class=\"col-auto mx-auto\">\n      <mat-button-toggle-group class=\"mx-auto\" (change)=\"onChange($event)\" appearance=\"\">\n        <mat-button-toggle *ngFor=\"let mealType of mealTypes\" [value]=\"mealType\">{{mealType.name}}\n        </mat-button-toggle>\n      </mat-button-toggle-group>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ConfirmDialogComponent } from \"../components/confirm-dialog/confirm-dialog.component\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(private dialog: MatDialog) {}\n\n\n  openConfirmDialog(title=\"Are you sure?\", message = \"You won't be able to revert this!\") {\n    return this.dialog.open(ConfirmDialogComponent, {\n      // width: \"450px\",\n      // panelClass: \"confirm-dialog-container\",\n      disableClose: true,\n      // position: { top: \"10px\" },\n      data: {\n        title: title,\n        message: message,\n      },\n    });\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport { environment } from \"../../../environments/environment\";\nimport { Food } from \"../models/food.model\";\nimport { PaginatedResponse } from \"../models/response.model\";\nimport { Vendor } from \"../models/vendor.model\";\nimport { NotificationService } from \"./notification.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FoodService {\n  private apiUrl = environment.url;\n  private categories;\n  private categoriesListener = new Subject<PaginatedResponse>();\n  private categoryTypes: PaginatedResponse = new PaginatedResponse();\n  private categoryTypesListener = new Subject<PaginatedResponse>();\n  private inventoryTopup: PaginatedResponse = new PaginatedResponse();\n  private inventoryTopupListener = new Subject<PaginatedResponse>();\n  private inventory: PaginatedResponse = new PaginatedResponse();\n  private inventoryListener = new Subject<PaginatedResponse>();\n  private ratings: PaginatedResponse = new PaginatedResponse();\n  private ratingsListener = new Subject<PaginatedResponse>();\n  private foods: PaginatedResponse = new PaginatedResponse();\n  private foodsListener = new Subject<PaginatedResponse>();\n  private otherFoods: PaginatedResponse = new PaginatedResponse();\n  private otherFoodsListener = new Subject<PaginatedResponse>();\n  private isToppingUpListener = new Subject<boolean>();\n  private foodCreateListener = new Subject<boolean>();\n  private imageUpdateListener = new Subject<boolean>();\n  private recomended: { inventory: Food[]; vendors: Vendor[] };\n  private recomendedListener = new Subject<{\n    inventory: any[];\n    vendors: Vendor[];\n  }>();\n  private mealTypes: any[];\n  private mealTypesListener = new Subject<any[]>();\n\n  constructor(\n    private http: HttpClient,\n    private notificationService: NotificationService\n  ) {}\n\n  createFood(food) {\n    this.http.post(`${this.apiUrl}food/foods/`, food).subscribe(\n      (response) => {\n        this.notificationService.info(`Success`, `Food created`);\n        this.foodCreateListener.next(true);\n      },\n      (err) => {\n        this.foodCreateListener.next(false);\n        this.notificationService.warning(`Error`, `Food not created`);\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  editFood(food) {\n    this.http.patch(`${this.apiUrl}food/foods/${food.id}/`, food).subscribe(\n      (response) => {\n        this.notificationService.info(`Success`, `Food edited`);\n        this.foodCreateListener.next(true);\n      },\n      (err) => {\n        this.notificationService.warning(`Error`, `Food not edited`);\n        this.foodCreateListener.next(false);\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  editFoodImage(image, food) {\n    this.http.patch(`${this.apiUrl}food/foods/${food.id}/`, image).subscribe(\n      (response) => {\n        this.notificationService.info(`Success`, `Image Saved`);\n        this.imageUpdateListener.next(true);\n      },\n      (err) => {\n        this.notificationService.warning(`Error`, `Image corrupted`);\n        this.imageUpdateListener.next(false);\n      }\n    );\n    return this.imageUpdateListener.asObservable();\n  }\n\n  deleteFood(food) {\n    this.http.delete(`${this.apiUrl}food/foods/${food.id}/`).subscribe(\n      (response) => {\n        this.notificationService.danger(\"Delete\", \"Your food has been deleted\");\n        this.foodCreateListener.next(true);\n      },\n      (err) => {\n        this.notificationService.danger(\"Unsuccessful\", \"An error occured\");\n        this.foodCreateListener.next(false);\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  getFoods(vendor, category = null, pageSize = 10, pageIndex = 1) {\n    const query = `?limit=${pageSize}&offset=${pageIndex}${\n      vendor ? \"vendor=\" + vendor : \"\"\n    }${category ? \"&category=\" + category : \"\"}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/foods/${query}`)\n      .subscribe(\n        (res) => {\n          this.foods = res;\n          this.foodsListener.next({ ...this.foods });\n        },\n        (err) => {}\n      );\n  }\n\n  getOtherFoods(vendor, delivery_date, pageSize = 10, pageIndex = 1) {\n    const query = `?limit=${pageSize}&offset=${pageIndex}${\n      delivery_date ? \"&delivery_date=\" + delivery_date : \"\"\n    }${vendor ? \"&vendor=\" + vendor : \"\"}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/inventory-unused${query}`)\n      .subscribe(\n        (res) => {\n          this.otherFoods = res;\n          this.otherFoodsListener.next({ ...this.otherFoods });\n        },\n        (err) => {}\n      );\n\n    return this.otherFoodsListener.asObservable();\n  }\n\n  getFoodListenerUpdate() {\n    return this.foodsListener.asObservable();\n  }\n\n  createCategory(category) {\n    this.http.post(`${this.apiUrl}food/categorys/`, category).subscribe(\n      (response) => {\n        this.notificationService.success(\"success\", \"Category created!!!\");\n        this.foodCreateListener.next(true);\n      },\n      (err) => {\n        this.foodCreateListener.next(false);\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  editCategory(category) {\n    this.http\n      .patch(`${this.apiUrl}food/categorys/${category.id}/`, category)\n      .subscribe(\n        (response) => {\n          this.foodCreateListener.next(true);\n        },\n        (err) => {\n          this.foodCreateListener.next(false);\n        }\n      );\n    return this.foodCreateListener.asObservable();\n  }\n\n  getCategorys(vendor_id, pageSize = 10, pageIndex = 1) {\n    const query = `?${\n      vendor_id ? \"vendor=\" + vendor_id : \"\"\n    }&limit=${pageSize}&offset=${pageIndex}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/categorys/${query}`)\n      .pipe(\n        map((res) => {\n          return res;\n        }),\n        shareReplay(1)\n      )\n      .subscribe(\n        (res) => {\n          this.categories = res;\n          this.categoriesListener.next({ ...this.categories });\n        },\n        (err) => {}\n      );\n  }\n\n  deleteCategory(category) {\n    this.http.delete(`${this.apiUrl}food/categorys/${category.id}/`).subscribe(\n      (response) => {\n        this.notificationService.danger(\n          \"Delete\",\n          \"Your category has been deleted\"\n        );\n        this.foodCreateListener.next(true);\n      },\n      (err) => {\n        this.notificationService.danger(\"Unsuccessful\", \"An error occured\");\n        this.foodCreateListener.next(false);\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  getCategorysListenerUpdated() {\n    return this.categoriesListener.asObservable();\n  }\n\n  createCategoryType(category) {\n    this.http.post(`${this.apiUrl}food/category-type/`, category).subscribe(\n      (response) => {\n        this.notificationService.success(\"success\", \"Category Type created!!!\");\n        this.foodCreateListener.next(true);\n      },\n      (err) => {\n        this.foodCreateListener.next(false);\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  editCategoryType(category) {\n    this.http\n      .patch(`${this.apiUrl}food/category-type/${category.id}/`, category)\n      .subscribe(\n        (response) => {\n          this.foodCreateListener.next(true);\n        },\n        (err) => {\n          this.foodCreateListener.next(false);\n        }\n      );\n    return this.foodCreateListener.asObservable();\n  }\n\n  getCategoryTypes(pageSize = 10, pageIndex = 1) {\n    // const query = `?vendor=${vendor_id}`;\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/category-type/${query}`)\n      .subscribe(\n        (res) => {\n          this.categoryTypes = res;\n          this.categoryTypesListener.next({ ...this.categoryTypes });\n        },\n        (err) => {}\n      );\n  }\n\n  getCategoryTypesListenerUpdated() {\n    return this.categoryTypesListener.asObservable();\n  }\n\n  createInventoryTopUp() {}\n\n  getInventoryTopUp(pageSize, pageIndex) {\n    // const query = `?vendor=${vendor_id}`;\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/inventory-topup/${query}`)\n      .subscribe(\n        (res) => {\n          this.inventoryTopup = res;\n          this.inventoryTopupListener.next({ ...this.inventoryTopup });\n        },\n        (err) => {}\n      );\n  }\n\n  getInventoryTopUpListenerUpdated() {\n    return this.inventoryTopupListener.asObservable();\n  }\n\n  topupInventory(data) {\n    this.isToppingUpListener.next(true);\n    this.http.post(`${this.apiUrl}food/inventory/`, data).subscribe(\n      (response) => {\n        this.isToppingUpListener.next(false);\n        this.notificationService.success(`Top up`, `Product Updated`);\n      },\n      (err) => {\n        this.notificationService.danger(`Error `, `Product not Updated`);\n      }\n    );\n  }\n\n  getIsToppingUp() {\n    return this.isToppingUpListener.asObservable();\n  }\n\n  getMealTypes() {\n    this.http\n      .get<{ results: any[] }>(`${this.apiUrl}food/meal-type/`)\n      .pipe(\n        map((res) => {\n          return res;\n        }),\n        shareReplay(1)\n      )\n      .subscribe(\n        (mealTypes) => {\n          console.log(mealTypes);\n          this.mealTypes = mealTypes.results;\n          this.mealTypesListener.next([...this.mealTypes]);\n        },\n        (err) => {\n          this.mealTypesListener.next([]);\n        }\n      );\n    return this.mealTypesListener.asObservable();\n  }\n\n  getInventory(vendor, delivery_date, pageSize = 10, pageIndex = 1) {\n    const query = `?limit=${pageSize}&offset=${pageIndex}${\n      delivery_date ? \"&delivery_date=\" + delivery_date : \"\"\n    }${vendor ? \"&vendor=\" + vendor : \"\"}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/inventory/${query}`)\n      .subscribe(\n        (res) => {\n          this.inventory = res;\n          this.inventoryListener.next({ ...this.inventory });\n        },\n        (err) => {\n          console.log(err.error);\n        }\n      );\n  }\n\n  deleteInventory(food) {\n    this.http.delete(`${this.apiUrl}food/inventory/${food.id}/`).subscribe(\n      (response) => {\n        this.foodCreateListener.next(true);\n        this.notificationService.danger(\n          \"Deleted\",\n          \"Your inventory has been deleted\"\n        );\n      },\n      (err) => {\n        this.foodCreateListener.next(false);\n        this.notificationService.danger(\"Unsuccessful\", \"An error occured\");\n      }\n    );\n    return this.foodCreateListener.asObservable();\n  }\n\n  getFoodInventory(\n    vendor,\n    category,\n    delivery_date,\n    meal_type,\n    pageSize = 100,\n    pageIndex = 1\n  ) {\n    const query = `?limit=${pageSize}&offset=${pageIndex}${\n      delivery_date ? \"&delivery_date=\" + delivery_date : \"\"\n    }${category ? \"&category=\" + category : \"\"}${\n      vendor ? \"&vendor=\" + vendor : \"\"\n    }${meal_type ? \"&meal_type=\" + meal_type : \"\"}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/inventory/${query}`)\n      .pipe(shareReplay())\n      .subscribe(\n        (res) => {\n          this.inventory = res;\n          this.inventoryListener.next({ ...this.inventory });\n        },\n        (err) => {\n          this.inventory = new PaginatedResponse();\n          this.inventory.results = [];\n          this.inventoryListener.next({ ...this.inventory });\n        }\n      );\n  }\n\n  getInventoryListenerUpdated() {\n    return this.inventoryListener.asObservable();\n  }\n\n  createFoodRating() {}\n\n  getFoodRating(pageSize, pageIndex) {\n    // const query = `?vendor=${vendor_id}`;\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\n    this.http\n      .get<PaginatedResponse>(`${this.apiUrl}food/rating/${query}`)\n      .subscribe(\n        (res) => {\n          this.ratings = res;\n          this.ratingsListener.next({ ...this.ratings });\n        },\n        (err) => {}\n      );\n  }\n\n  getFoodRatingUpdated() {\n    return this.ratingsListener.asObservable();\n  }\n\n  getRecomended() {\n    this.http.get(`${this.apiUrl}food/recommended-screen/`).subscribe(\n      (response: any) => {\n        this.recomended = response;\n        this.recomendedListener.next({ ...this.recomended });\n      },\n      (err) => {}\n    );\n\n    return this.recomendedListener.asObservable();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { environment } from \"../../../environments/environment\";\nimport { PaginatedResponse } from \"../models/response.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VendorService {\n  private apiUrl = environment.url\n  private vendors\n  private vendorsListener = new Subject<PaginatedResponse>()\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getVendors() {\n    this.http.get<PaginatedResponse>(`${this.apiUrl}auth/vendor/`)\n    .subscribe((response) => {\n      this.vendors = response\n      this.vendorsListener.next({ ...this.vendors })\n\n    }, (err) => {\n    })\n  }\n\n  getVendorsListener() {\n    return this.vendorsListener.asObservable()\n  }\n\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}