{"version":3,"mappings":"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","names":["_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ɵngcc0","ctx_r0","justify","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","mixinHasStickyInput","base","constructor","args","_sticky","_hasStickyChanged","v","prevValue","coerceBooleanProperty","hasStickyChanged","resetStickyChanged","CDK_TABLE","InjectionToken","TEXT_COLUMN_OPTIONS","CdkCellDef","template","ɵfac","CdkCellDef_Factory","t","ɵdir","type","selectors","ngDevMode","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","_setNameInput","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","value","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","_t","cell","first","headerCell","footerCell","inputs","sticky","stickyEnd","features","provide","useExisting","BaseCdkCell","columnDef","elementRef","classList","nativeElement","className","add","CdkHeaderCell","CdkHeaderCell_Factory","hostAttrs","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","Subject","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","ngOnDestroy","next","complete","_getScheduleObservable","pipe","takeUntil","subscribe","length","isStable","from","Promise","resolve","undefined","onStable","take","_CoalescedStyleScheduler_Factory","ɵprov","token","factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","ngOnChanges","changes","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","decls","vars","consts","CdkHeaderRow_Template","directives","encapsulation","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","templateRef","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","nodeType","ELEMENT_NODE","i","children","_scheduleStyleChanges","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","_a","_b","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowViewRef","EmbeddedViewRef","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_viewRepeater","_stickyPositioningListener","_viewportRuler","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","viewChange","BehaviorSubject","Number","MAX_VALUE","setAttribute","nodeName","_trackByFn","fn","console","warn","_dataSource","dataSource","_switchDataSource","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","clear","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","isDataSource","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","forEachOperation","prevIndex","previousIndex","renderRow","_renderRow","view","get","move","_updateRowIndexContext","forEachIdentityChange","rowView","addColumnDef","removeColumnDef","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","def","_stickyStyler","forEach","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isObservable","isArray","of","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","createEmbeddedView","_getCellTemplates","cellTemplate","markForCheck","renderIndex","count","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","CdkTable_Factory","ɵngcc1","DOCUMENT","ɵngcc2","_VIEW_REPEATER_STRATEGY","ɵngcc3","CdkTable_ContentQueries","viewQuery","CdkTable_Query","hostVars","hostBindings","CdkTable_HostBindings","fixedLayout","exportAs","useClass","_DisposeViewRepeaterStrategy","useValue","ngContentSelectors","CdkTable_Template","styles","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","ɵmod","ɵinj","imports","ScrollingModule","ngJitMode","declarations","exports","MatSortHeader_div_3_Template","_r2","MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener","_disableViewStateAnimation","MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener","ctx_r3","_getArrowViewState","_getArrowDirectionState","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MAT_SORT_DEFAULT_OPTIONS","MatSortBase","_MatSortMixinBase","mixinInitialized","mixinDisabled","MatSort","_defaultOptions","sortables","_stateChanges","_direction","sortChange","EventEmitter","_disableClear","register","sortable","deregister","sort","active","getNextSortDirection","emit","_c","disableClear","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","_markInitialized","MatSort_Factory","disabled","outputs","sortOrder","SORT_ANIMATION_TRANSITION","AnimationDurations","AnimationCurves","matSortAnimations","indicator","trigger","transform","transition","animate","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","keyframes","allowChildren","query","animateChild","optional","MatSortHeaderIntl","sortButtonLabel","MatSortHeaderIntl_Factory","ɵɵdefineInjectable","providedIn","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","parentIntl","MAT_SORT_HEADER_INTL_PROVIDER","deps","Optional","SkipSelf","useFactory","MatSortHeaderBase","_MatSortHeaderMixinBase","MatSortHeader","_intl","_sort","_columnDef","_focusMonitor","_showIndicatorHint","_viewState","_arrowDirection","_handleStateChanges","_updateArrowDirection","_setAnimationTransitionState","toState","_isSorted","ngAfterViewInit","monitor","origin","newState","_setIndicatorHintVisible","stopMonitoring","_rerenderSubscription","visible","_isDisabled","fromState","viewState","_toggleOnInteraction","_handleClick","_handleKeydown","event","keyCode","SPACE","ENTER","preventDefault","_getAriaSortAttribute","_renderArrow","merge","MatSortHeader_Factory","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","MatSortHeader_keydown_HostBindingHandler","$event","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","attrs","MatSortHeader_Template","animation","changeDetection","MatSortModule","MatSortModule_Factory","providers","CommonModule","MatCommonModule","MatTextColumn_th_1_Template","MatTextColumn_td_2_Template","MatTable","arguments","ɵMatTable_BaseFactory","MatTable_Factory","MatTable_HostBindings","MatTable_Template","MatCellDef","ɵMatCellDef_BaseFactory","MatCellDef_Factory","MatHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatHeaderCellDef_Factory","MatFooterCellDef","ɵMatFooterCellDef_BaseFactory","MatFooterCellDef_Factory","MatColumnDef","ɵMatColumnDef_BaseFactory","MatColumnDef_Factory","MatHeaderCell","ɵMatHeaderCell_BaseFactory","MatHeaderCell_Factory","MatFooterCell","ɵMatFooterCell_BaseFactory","MatFooterCell_Factory","MatCell","ɵMatCell_BaseFactory","MatCell_Factory","MatHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","MatHeaderRowDef_Factory","MatFooterRowDef","ɵMatFooterRowDef_BaseFactory","MatFooterRowDef_Factory","MatRowDef","ɵMatRowDef_BaseFactory","MatRowDef_Factory","MatHeaderRow","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Factory","MatHeaderRow_Template","MatFooterRow","ɵMatFooterRow_BaseFactory","MatFooterRow_Factory","MatFooterRow_Template","MatRow","ɵMatRow_BaseFactory","MatRow_Factory","MatRow_Template","MatNoDataRow","ɵMatNoDataRow_BaseFactory","MatNoDataRow_Factory","MatTextColumn","ɵMatTextColumn_BaseFactory","MatTextColumn_Factory","MatTextColumn_Template","MatTableModule","MatTableModule_Factory","MAX_SAFE_INTEGER","_MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","_isNumberValue","numberValue","sortData","a","b","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","_updateChangeSubscription","_filterData","_paginator","paginator","initialized","pageChange","page","filteredData","combineLatest","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","then","lastPageIndex","Math","ceil","newPageIndex","min","DataSource","MatTableDataSource","UserService","http","router","notificationService","errorService","_environments_environment__WEBPACK_IMPORTED_MODULE_0__","_shared_models_response_model__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_4__","isLoadingListener","asObservable","apiUrl","companyList","res","companysListener","formData","post","success","navigate","log","err","errorMessage","error","message","details","danger","handleError","employees","response","staffsCreateErrorListener","user","user_email","email","phone_number","status","is_active","deactivatingListener","company","companyAdminList","companyAdminListener","accountantList","accountantListener","staffs","staffsListener","staffLevels","staffLevelsListener","departments","departmentsListener","vendors","vendorsListener","vendorStaffs","vendorStaffsListener","warning","_angular_core__WEBPACK_IMPORTED_MODULE_6__"],"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","webpack:///src/app/user/user.service.ts"],"sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource, _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, SkipSelf, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() { return this._sticky; }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() { return this._name; }\n    set name(name) { this._setNameInput(name); }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n        // with destructuring.\n        const classList = elementRef.nativeElement.classList;\n        for (const className of columnDef._columnCssClassName) {\n            classList.add(className);\n        }\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable ?\n            from(Promise.resolve(undefined)) :\n            this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) { return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n_CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: _CoalescedStyleScheduler, factory: _CoalescedStyleScheduler.ɵfac });\n_CoalescedStyleScheduler.ctorParameters = () => [\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nBaseRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nBaseRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkNoDataRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\nCdkNoDataRow.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkNoDataRow]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, \n    /**\n     * @deprecated `_coalescedStyleScheduler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\n            stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => stickyStartStates[index] ? width : null)\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null)\n                            .reverse()\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            stickyOffsets[rowIndex] = stickyOffset;\n            if (!states[rowIndex]) {\n                continue;\n            }\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\n                Array.from(row.children) : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            var _a, _b;\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\n            }\n            else {\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Schedules styles to be applied when the style scheduler deems appropriate.\n     * @breaking-change 11.0.0 This method can be removed in favor of calling\n     * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.\n     */\n    _scheduleStyleChanges(changes) {\n        if (this._coalescedStyleScheduler) {\n            this._coalescedStyleScheduler.schedule(changes);\n        }\n        else {\n            changes();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNoDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\nNoDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[noDataRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, \n    /**\n     * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`\n     *    parameters to become required.\n     * @breaking-change 11.0.0\n     */\n    _viewRepeater, _coalescedStyleScheduler, _stickyPositioningListener, \n    // Optional for backwards compatibility. The viewport ruler is provided in root. Therefore,\n    // this property will never be null.\n    // tslint:disable-next-line: lightweight-tokens\n    _viewportRuler) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        this._viewportRuler = _viewportRuler;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        // Table cell dimensions may change after resizing the window. Signal the sticky styler to\n        // refresh its cache of cell widths the next time sticky styles are updated.\n        // @breaking-change 11.0.0 Remove null check for _viewportRuler once it's a required parameter.\n        if (this._viewportRuler) {\n            this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n                this._forceRecalculateCellWidths = true;\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._noDataRowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the\n        // `else` clause once `_viewRepeater` is turned into a required parameter.\n        if (this._viewRepeater) {\n            this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\n                if (change.operation === 1 /* INSERTED */ && change.context) {\n                    this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n                }\n            });\n        }\n        else {\n            changes.forEachOperation((record, prevIndex, currentIndex) => {\n                if (record.previousIndex == null) {\n                    const renderRow = record.item;\n                    const rowDef = renderRow.rowDef;\n                    const context = { $implicit: renderRow.data };\n                    this._renderRow(this._rowOutlet, rowDef, currentIndex, context);\n                }\n                else if (currentIndex == null) {\n                    viewContainer.remove(prevIndex);\n                }\n                else {\n                    const view = viewContainer.get(prevIndex);\n                    viewContainer.move(view, currentIndex);\n                }\n            });\n        }\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        this.updateStickyColumnStyles();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout)\n            || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (noDataRow) {\n            const shouldShow = this._rowOutlet.viewContainer.length === 0;\n            if (shouldShow !== this._isShowingNoDataRow) {\n                const container = this._noDataRowOutlet.viewContainer;\n                shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\n                this._isShowingNoDataRow = shouldShow;\n            }\n        }\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER, 8), ɵngcc0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler, 8)); };\nCdkTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DataRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(HeaderRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(FooterRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(NoDataRowOutlet, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], hostVars: 2, hostBindings: function CdkTable_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n    } }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CDK_TABLE, useExisting: CdkTable },\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 0);\n        ɵngcc0.ɵɵelementContainer(3, 1);\n        ɵngcc0.ɵɵelementContainer(4, 2);\n        ɵngcc0.ɵɵelementContainer(5, 3);\n    } }, directives: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\n    { type: _CoalescedStyleScheduler, decorators: [{ type: Optional }, { type: Inject, args: [_COALESCED_STYLE_SCHEDULER,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [STICKY_POSITIONING_LISTENER,] }] },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    fixedLayout: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _noDataRowOutlet: [{ type: ViewChild, args: [NoDataRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }],\n    _noDataRow: [{ type: ContentChild, args: [CdkNoDataRow,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table',\n                    '[class.cdk-table-fixed-layout]': 'fixedLayout'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [\n                    { provide: CDK_TABLE, useExisting: CdkTable },\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                    // Prevent nested tables from seeing this table's StickyPositioningListener.\n                    { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                ],\n                styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [_VIEW_REPEATER_STRATEGY]\n            }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [_COALESCED_STYLE_SCHEDULER]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [STICKY_POSITIONING_LISTENER]\n            }] }, { type: ɵngcc3.ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], fixedLayout: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _noDataRowOutlet: [{\n            type: ViewChild,\n            args: [NoDataRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }], _noDataRow: [{\n            type: ContentChild,\n            args: [CdkNoDataRow]\n        }] }); })();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkColumnDef, 7);\n        ɵngcc0.ɵɵviewQuery(CdkCellDef, 7);\n        ɵngcc0.ɵɵviewQuery(CdkHeaderCellDef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef, CdkHeaderCellDef, CdkCellDef, CdkHeaderCell, CdkCell], encapsulation: 2 });\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); };\nCdkTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[ScrollingModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n                imports: [ScrollingModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; }, imports: function () { return [ScrollingModule]; }, exports: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n\n","import { InjectionToken, EventEmitter, Directive, Optional, Inject, Input, Output, ɵɵdefineInjectable, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r0._getArrowViewState())(\"@arrowPosition\", ctx_r0._getArrowViewState())(\"@allowChildren\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r0._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nclass MatSortBase {\n}\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortMixinBase {\n    constructor(_defaultOptions) {\n        super();\n        this._defaultOptions = _defaultOptions;\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /** The sort direction of the currently active MatSortable. */\n    get direction() { return this._direction; }\n    set direction(direction) {\n        if (direction && direction !== 'asc' && direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        var _a, _b, _c;\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = (_b = (_a = sortable === null || sortable === void 0 ? void 0 : sortable.disableClear) !== null && _a !== void 0 ? _a : this.disableClear) !== null && _b !== void 0 ? _b : !!((_c = this._defaultOptions) === null || _c === void 0 ? void 0 : _c.disableClear);\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return new (t || MatSort)(ɵngcc0.ɵɵdirectiveInject(MAT_SORT_DEFAULT_OPTIONS, 8)); };\nMatSort.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatSort.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SORT_DEFAULT_OPTIONS,] }] }\n];\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SORT_DEFAULT_OPTIONS]\n            }] }]; }, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         * @deprecated Not used anymore. To be removed.\n         * @breaking-change 8.0.0\n         */\n        this.sortButtonLabel = (id) => {\n            return `Change sorting for ${id}`;\n        };\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\nMatSortHeaderIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nclass MatSortHeaderBase {\n}\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    constructor(_intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._handleStateChanges();\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription =\n            merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n                if (this._isSorted()) {\n                    this._updateArrowDirection();\n                    // Do not show the animation if the header was already shown in the right position.\n                    if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                        this._disableViewStateAnimation = true;\n                    }\n                    this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                    this._showIndicatorHint = false;\n                }\n                // If this header was recently active and now no longer sorted, animate away the arrow.\n                if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = false;\n                    this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n                }\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"keydown\", function MatSortHeader_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 6, consts: [[\"role\", \"button\", 1, \"mat-sort-header-container\", \"mat-focus-indicator\"], [1, \"mat-sort-header-content\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._isDisabled() ? null : 0);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     role=\\\"button\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSortModule {\n}\nMatSortModule.ɵfac = function MatSortModule_Factory(t) { return new (t || MatSortModule)(); };\nMatSortModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule, MatCommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort, MatSortHeader]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSort, MatSortHeader]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.ɵfac = /*@__PURE__*/ function () { let ɵMatTable_BaseFactory; return function MatTable_Factory(t) { return (ɵMatTable_BaseFactory || (ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable)))(t || MatTable); }; }();\nMatTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], hostVars: 2, hostBindings: function MatTable_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-table-fixed-layout\", ctx.fixedLayout);\n    } }, exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n            //  is only included in the build if used.\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 0);\n        ɵngcc0.ɵɵelementContainer(3, 1);\n        ɵngcc0.ɵɵelementContainer(4, 2);\n        ɵngcc0.ɵɵelementContainer(5, 3);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.NoDataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table',\n                    '[class.mat-table-fixed-layout]': 'fixedLayout'\n                },\n                providers: [\n                    // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                    //  is only included in the build if used.\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable },\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatCellDef_BaseFactory; return function MatCellDef_Factory(t) { return (ɵMatCellDef_BaseFactory || (ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef)))(t || MatCellDef); }; }();\nMatCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderCellDef_BaseFactory; return function MatHeaderCellDef_Factory(t) { return (ɵMatHeaderCellDef_BaseFactory || (ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef)))(t || MatHeaderCellDef); }; }();\nMatHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterCellDef_BaseFactory; return function MatFooterCellDef_Factory(t) { return (ɵMatFooterCellDef_BaseFactory || (ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef)))(t || MatFooterCellDef); }; }();\nMatFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() { return this._name; }\n    set name(name) { this._setNameInput(name); }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.ɵfac = /*@__PURE__*/ function () { let ɵMatColumnDef_BaseFactory; return function MatColumnDef_Factory(t) { return (ɵMatColumnDef_BaseFactory || (ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef)))(t || MatColumnDef); }; }();\nMatColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderCell_BaseFactory; return function MatHeaderCell_Factory(t) { return (ɵMatHeaderCell_BaseFactory || (ɵMatHeaderCell_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCell)))(t || MatHeaderCell); }; }();\nMatHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], null, null); })();\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterCell_BaseFactory; return function MatFooterCell_Factory(t) { return (ɵMatFooterCell_BaseFactory || (ɵMatFooterCell_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCell)))(t || MatFooterCell); }; }();\nMatFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], null, null); })();\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.ɵfac = /*@__PURE__*/ function () { let ɵMatCell_BaseFactory; return function MatCell_Factory(t) { return (ɵMatCell_BaseFactory || (ɵMatCell_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCell)))(t || MatCell); }; }();\nMatCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderRowDef_BaseFactory; return function MatHeaderRowDef_Factory(t) { return (ɵMatHeaderRowDef_BaseFactory || (ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef)))(t || MatHeaderRowDef); }; }();\nMatHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterRowDef_BaseFactory; return function MatFooterRowDef_Factory(t) { return (ɵMatFooterRowDef_BaseFactory || (ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef)))(t || MatFooterRowDef); }; }();\nMatFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatRowDef_BaseFactory; return function MatRowDef_Factory(t) { return (ɵMatRowDef_BaseFactory || (ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef)))(t || MatRowDef); }; }();\nMatRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderRow_BaseFactory; return function MatHeaderRow_Factory(t) { return (ɵMatHeaderRow_BaseFactory || (ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow)))(t || MatHeaderRow); }; }();\nMatHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterRow_BaseFactory; return function MatFooterRow_Factory(t) { return (ɵMatFooterRow_BaseFactory || (ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow)))(t || MatFooterRow); }; }();\nMatFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = /*@__PURE__*/ function () { let ɵMatRow_BaseFactory; return function MatRow_Factory(t) { return (ɵMatRow_BaseFactory || (ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow)))(t || MatRow); }; }();\nMatRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n}\nMatNoDataRow.ɵfac = /*@__PURE__*/ function () { let ɵMatNoDataRow_BaseFactory; return function MatNoDataRow_Factory(t) { return (ɵMatNoDataRow_BaseFactory || (ɵMatNoDataRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNoDataRow)))(t || MatNoDataRow); }; }();\nMatNoDataRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatNoDataRow, selectors: [[\"ng-template\", \"matNoDataRow\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkNoDataRow, useExisting: MatNoDataRow }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNoDataRow, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matNoDataRow]',\n                providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = /*@__PURE__*/ function () { let ɵMatTextColumn_BaseFactory; return function MatTextColumn_Factory(t) { return (ɵMatTextColumn_BaseFactory || (ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn)))(t || MatTextColumn); }; }();\nMatTextColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef, MatHeaderCellDef, MatCellDef, MatHeaderCell, MatCell], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = function MatTableModule_Factory(t) { return new (t || MatTableModule)(); };\nMatTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatCommonModule, MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass _MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data).reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() { return this._data.value; }\n    set data(data) {\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() { return this._filter.value; }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() { return this._sort; }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() { return this._paginator; }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        var _a;\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort ?\n            merge(this._sort.sortChange, this._sort.initialized) :\n            of(null);\n        const pageChange = this._paginator ?\n            merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized) :\n            of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData = (this.filter == null || this.filter === '') ? data :\n            data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        var _a;\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn, _MatTableDataSource };\n\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subject } from \"rxjs\";\r\nimport { shareReplay } from \"rxjs/operators\";\r\nimport { NotificationService } from \"src/app/shared/services/notification.service\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { PaginatedResponse } from \"../shared/models/response.model\";\r\nimport { ErrorService } from \"../shared/services/error.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserService {\r\n  private apiUrl = environment.url;\r\n  private companyList: PaginatedResponse = new PaginatedResponse();\r\n  private companysListener = new Subject<PaginatedResponse>();\r\n  private companyAdminList: PaginatedResponse = new PaginatedResponse();\r\n  private companyAdminListener = new Subject<PaginatedResponse>();\r\n  private accountantList: PaginatedResponse = new PaginatedResponse();\r\n  private accountantListener = new Subject<PaginatedResponse>();\r\n  private staffs: PaginatedResponse = new PaginatedResponse();\r\n  private staffsListener = new Subject<PaginatedResponse>();\r\n  private staffsCreateErrorListener = new Subject<any[]>();\r\n  private staffLevels: PaginatedResponse = new PaginatedResponse();\r\n  private staffLevelsListener = new Subject<PaginatedResponse>();\r\n  private departments: PaginatedResponse = new PaginatedResponse();\r\n  private departmentsListener = new Subject<PaginatedResponse>();\r\n  private vendors: PaginatedResponse = new PaginatedResponse();\r\n  private vendorsListener = new Subject<PaginatedResponse>();\r\n  private vendorStaffs = new PaginatedResponse();\r\n  private vendorStaffsListener = new Subject<PaginatedResponse>();\r\n  private isLoadingListener = new Subject<boolean>();\r\n  private deactivatingListener = new Subject<boolean>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private notificationService: NotificationService,\r\n    private errorService: ErrorService\r\n  ) {}\r\n\r\n  getIsLoadingListener() {\r\n    return this.isLoadingListener.asObservable();\r\n  }\r\n\r\n  getCompanyList(pageSize = 10, pageIndex = 0) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/companys/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          this.companyList = res;\r\n          this.companysListener.next({ ...this.companyList });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getCompanyListUpdate() {\r\n    return this.companysListener.asObservable();\r\n  }\r\n\r\n  createCompany(formData) {\r\n    this.isLoadingListener.next(true);\r\n    this.http\r\n      .post(`${this.apiUrl}auth/companys/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          this.isLoadingListener.next(false);\r\n          this.notificationService.success(\r\n            `Success`,\r\n            `Company onboard successful`\r\n          );\r\n          this.router.navigate([\"/user/company-list\"]);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          const errorMessage =\r\n            err.error.message || err.error.details || err.error.error;\r\n          this.notificationService.danger(`Error`, errorMessage);\r\n          this.isLoadingListener.next(false);\r\n          this.errorService.handleError(errorMessage);\r\n        }\r\n      );\r\n  }\r\n\r\n  uploadStaff(employees) {\r\n    this.http\r\n      .post(`${this.apiUrl}auth/bulk-employee/`, employees)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n          this.isLoadingListener.next(false);\r\n          this.notificationService.success(\r\n            `Successful`,\r\n            `User(s) account created`\r\n          );\r\n          this.router.navigate([\"/user/staff-list\"]);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          console.log(err.error);\r\n          this.staffsCreateErrorListener.next(err.error);\r\n          // this.notificationService.danger(`Error`, `An unknown error occured`);\r\n          this.isLoadingListener.next(false);\r\n          this.errorService.handleError(err.error.message || err.error.details);\r\n        }\r\n      );\r\n  }\r\n\r\n  deactivateUser(user) {\r\n    // TODO: refactor code to take either phone or email\r\n    this.http\r\n      .post(`${this.apiUrl}auth/change-user-status/`, {\r\n        user_email: user.email || user.phone_number,\r\n        status: user.is_active,\r\n      })\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log(response);\r\n          this.notificationService.success(\"Success\", response.message);\r\n          this.deactivatingListener.next(true);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.notificationService.danger(\"Error\", err.error.message);\r\n          this.deactivatingListener.next(true);\r\n        }\r\n      );\r\n    return this.deactivatingListener.asObservable();\r\n  }\r\n\r\n  getStaffCreationErrorUpdate() {\r\n    return this.staffsCreateErrorListener.asObservable();\r\n  }\r\n\r\n  getCompanyAdminList(pageSize = 10, pageIndex = 0, company) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}&${\r\n      company ? \"&company=\" + company : \"\"\r\n    }`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/cmp-adm/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          this.companyAdminList = res;\r\n          this.companyAdminListener.next({ ...this.companyAdminList });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getCompanyAdminListUpdate() {\r\n    return this.companyAdminListener.asObservable();\r\n  }\r\n\r\n  createCompanyAdmin(formData) {\r\n    console.log(formData);\r\n    this.isLoadingListener.next(true);\r\n    this.http\r\n      .post(`${this.apiUrl}auth/cmp-adm/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response: any) => {\r\n          this.notificationService.success(response.status, response.message);\r\n          this.router.navigate([\"/user/company-admin-list\"]);\r\n          this.isLoadingListener.next(false);\r\n        },\r\n        (err) => {\r\n          this.notificationService.danger(`Error`, `An unknown error occured`);\r\n          this.isLoadingListener.next(false);\r\n          this.errorService.handleError(err.error.message || err.error.details);\r\n        }\r\n      );\r\n  }\r\n\r\n  getAccountantList(pageSize = 10, pageIndex = 0, company) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}&${\r\n      company ? \"&company=\" + company : \"\"\r\n    }`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/cmp-act/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          this.accountantList = res;\r\n          this.accountantListener.next({ ...this.accountantList });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getAccountantUpdate() {\r\n    return this.accountantListener.asObservable();\r\n  }\r\n\r\n  createAccountant(formData) {\r\n    this.http\r\n      .post(`${this.apiUrl}auth/cmp-act/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response: { status: string; message: string }) => {\r\n          this.notificationService.success(response.status, response.message);\r\n          this.router.navigate([\"/user/accountant-list\"]);\r\n        },\r\n        (err) => {\r\n          this.notificationService.danger(`Error`, `An unknown error occured`);\r\n          // this.errorService.handleError(err.error.message);\r\n          this.errorService.handleError(err.error.message || err.error.details);\r\n        }\r\n      );\r\n  }\r\n\r\n  getStaffList(pageSize: number = 10, pageIndex: number = 0) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/staffs/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          // console.log(res)\r\n          this.staffs = res;\r\n          this.staffsListener.next({ ...this.staffs });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getStaffListUpdate() {\r\n    return this.staffsListener.asObservable();\r\n  }\r\n\r\n  createStaff(formData) {\r\n    this.http\r\n      .post(`${this.apiUrl}auth/staffs/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          this.notificationService.success(\r\n            `Success`,\r\n            `staff account creation successful`\r\n          );\r\n          this.router.navigate([\"/staff-list\"]);\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  createStaffLevel(formData) {\r\n    console.log(formData);\r\n    this.http\r\n      .post(`${this.apiUrl}auth/staff-level/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          this.notificationService.success(\r\n            `Success`,\r\n            `staff Level creation successful`\r\n          );\r\n          this.router.navigate([\"user/staff-level-list\"]);\r\n        },\r\n        (err) => {\r\n          this.errorService.handleError(err.error.message || err.error.details);\r\n          console.log(err);\r\n          this.notificationService.danger(\r\n            `Error`,\r\n            `Department creation was unsuccessful`\r\n          );\r\n          this.notificationService.danger(``, `${err.error.name || err.name}`);\r\n        }\r\n      );\r\n  }\r\n\r\n  getStaffLevels() {\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/staff-level/`)\r\n      .subscribe(\r\n        (res) => {\r\n          console.log(res);\r\n          this.staffLevels = res;\r\n          this.staffLevelsListener.next({ ...this.staffLevels });\r\n        },\r\n        (err) => {}\r\n      );\r\n    return this.staffLevelsListener.asObservable();\r\n  }\r\n\r\n  getDepartments(pageSize = 10, pageIndex = 0) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/departments/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          this.departments = res;\r\n          this.departmentsListener.next({ ...this.departments });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getDepartmentsUpdate() {\r\n    return this.departmentsListener.asObservable();\r\n  }\r\n\r\n  createDepartment(formData) {\r\n    this.http\r\n      .post(`${this.apiUrl}auth/departments/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          this.notificationService.success(\r\n            `Success`,\r\n            `Department creation successful`\r\n          );\r\n          this.router.navigate([\"/user/department-list\"]);\r\n        },\r\n        (err) => {\r\n          this.errorService.handleError(err.error.message || err.error.details);\r\n          this.notificationService.danger(\r\n            `Error`,\r\n            `Department creation was unsuccessful`\r\n          );\r\n          this.notificationService.danger(``, `${err.error.name || err.name}`);\r\n        }\r\n      );\r\n  }\r\n\r\n  getVendors(pageSize = 10, pageIndex = 0, company = null) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}&${\r\n      company ? \"&company=\" + company : \"\"\r\n    }`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/vendor/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          this.vendors = res;\r\n          this.vendorsListener.next({ ...this.vendors });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getVendorsUpdate() {\r\n    return this.vendorsListener.asObservable();\r\n  }\r\n\r\n  createVendor(formData) {\r\n    this.http\r\n      .post(`${this.apiUrl}auth/vendor/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          this.notificationService.success(\r\n            `Success`,\r\n            `Vendor account creation successful`\r\n          );\r\n          this.router.navigate([\"/user/vendor-list\"]);\r\n        },\r\n        (err) => {\r\n          const errorMessage =\r\n            err.error.message || err.error.details || err.error.error;\r\n          this.notificationService.danger(`Error`, errorMessage);\r\n          this.errorService.handleError(errorMessage);\r\n        }\r\n      );\r\n  }\r\n\r\n  getVendorStaffs(pageSize = 10, pageIndex = 0) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/vendor-staff/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          this.vendorStaffs = res;\r\n          this.vendorStaffsListener.next({ ...this.vendorStaffs });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getVendorStaffsUpdate() {\r\n    return this.vendorStaffsListener.asObservable();\r\n  }\r\n\r\n  createVendorStaff(formData) {\r\n    this.http\r\n      .post(`${this.apiUrl}auth/vendor-staff/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          this.notificationService.success(\r\n            `Success`,\r\n            `Vendor account creation successful`\r\n          );\r\n          this.router.navigate([\"/user/vendor-staff-list\"]);\r\n        },\r\n        (err) => {\r\n          this.notificationService.warning(\r\n            `Error`,\r\n            `Account creation was unsuccessful`\r\n          );\r\n          this.errorService.handleError(err.error.message || err.error.details);\r\n        }\r\n      );\r\n  }\r\n}\r\n"]}