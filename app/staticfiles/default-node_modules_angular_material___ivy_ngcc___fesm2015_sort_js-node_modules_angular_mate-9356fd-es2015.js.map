{"version":3,"file":"default-node_modules_angular_material___ivy_ngcc___fesm2015_sort_js-node_modules_angular_mate-9356fd-es2015.js","mappings":"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","sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","./src/app/user/user.service.ts"],"sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource, _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, SkipSelf, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() { return this._sticky; }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() { return this._name; }\n    set name(name) { this._setNameInput(name); }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n        // with destructuring.\n        const classList = elementRef.nativeElement.classList;\n        for (const className of columnDef._columnCssClassName) {\n            classList.add(className);\n        }\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable ?\n            from(Promise.resolve(undefined)) :\n            this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) { return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n_CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: _CoalescedStyleScheduler, factory: _CoalescedStyleScheduler.ɵfac });\n_CoalescedStyleScheduler.ctorParameters = () => [\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nBaseRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nBaseRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkNoDataRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\nCdkNoDataRow.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkNoDataRow]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, \n    /**\n     * @deprecated `_coalescedStyleScheduler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\n            stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => stickyStartStates[index] ? width : null)\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null)\n                            .reverse()\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            stickyOffsets[rowIndex] = stickyOffset;\n            if (!states[rowIndex]) {\n                continue;\n            }\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\n                Array.from(row.children) : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            var _a, _b;\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\n            }\n            else {\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Schedules styles to be applied when the style scheduler deems appropriate.\n     * @breaking-change 11.0.0 This method can be removed in favor of calling\n     * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.\n     */\n    _scheduleStyleChanges(changes) {\n        if (this._coalescedStyleScheduler) {\n            this._coalescedStyleScheduler.schedule(changes);\n        }\n        else {\n            changes();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNoDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\nNoDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[noDataRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, \n    /**\n     * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`\n     *    parameters to become required.\n     * @breaking-change 11.0.0\n     */\n    _viewRepeater, _coalescedStyleScheduler, _stickyPositioningListener, \n    // Optional for backwards compatibility. The viewport ruler is provided in root. Therefore,\n    // this property will never be null.\n    // tslint:disable-next-line: lightweight-tokens\n    _viewportRuler) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        this._viewportRuler = _viewportRuler;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        // Table cell dimensions may change after resizing the window. Signal the sticky styler to\n        // refresh its cache of cell widths the next time sticky styles are updated.\n        // @breaking-change 11.0.0 Remove null check for _viewportRuler once it's a required parameter.\n        if (this._viewportRuler) {\n            this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n                this._forceRecalculateCellWidths = true;\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._noDataRowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the\n        // `else` clause once `_viewRepeater` is turned into a required parameter.\n        if (this._viewRepeater) {\n            this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\n                if (change.operation === 1 /* INSERTED */ && change.context) {\n                    this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n                }\n            });\n        }\n        else {\n            changes.forEachOperation((record, prevIndex, currentIndex) => {\n                if (record.previousIndex == null) {\n                    const renderRow = record.item;\n                    const rowDef = renderRow.rowDef;\n                    const context = { $implicit: renderRow.data };\n                    this._renderRow(this._rowOutlet, rowDef, currentIndex, context);\n                }\n                else if (currentIndex == null) {\n                    viewContainer.remove(prevIndex);\n                }\n                else {\n                    const view = viewContainer.get(prevIndex);\n                    viewContainer.move(view, currentIndex);\n                }\n            });\n        }\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        this.updateStickyColumnStyles();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout)\n            || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (noDataRow) {\n            const shouldShow = this._rowOutlet.viewContainer.length === 0;\n            if (shouldShow !== this._isShowingNoDataRow) {\n                const container = this._noDataRowOutlet.viewContainer;\n                shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\n                this._isShowingNoDataRow = shouldShow;\n            }\n        }\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER, 8), ɵngcc0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler, 8)); };\nCdkTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DataRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(HeaderRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(FooterRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(NoDataRowOutlet, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], hostVars: 2, hostBindings: function CdkTable_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n    } }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CDK_TABLE, useExisting: CdkTable },\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 0);\n        ɵngcc0.ɵɵelementContainer(3, 1);\n        ɵngcc0.ɵɵelementContainer(4, 2);\n        ɵngcc0.ɵɵelementContainer(5, 3);\n    } }, directives: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\n    { type: _CoalescedStyleScheduler, decorators: [{ type: Optional }, { type: Inject, args: [_COALESCED_STYLE_SCHEDULER,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [STICKY_POSITIONING_LISTENER,] }] },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    fixedLayout: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _noDataRowOutlet: [{ type: ViewChild, args: [NoDataRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }],\n    _noDataRow: [{ type: ContentChild, args: [CdkNoDataRow,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table',\n                    '[class.cdk-table-fixed-layout]': 'fixedLayout'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [\n                    { provide: CDK_TABLE, useExisting: CdkTable },\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                    // Prevent nested tables from seeing this table's StickyPositioningListener.\n                    { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                ],\n                styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [_VIEW_REPEATER_STRATEGY]\n            }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [_COALESCED_STYLE_SCHEDULER]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [STICKY_POSITIONING_LISTENER]\n            }] }, { type: ɵngcc3.ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], fixedLayout: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _noDataRowOutlet: [{\n            type: ViewChild,\n            args: [NoDataRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }], _noDataRow: [{\n            type: ContentChild,\n            args: [CdkNoDataRow]\n        }] }); })();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkColumnDef, 7);\n        ɵngcc0.ɵɵviewQuery(CdkCellDef, 7);\n        ɵngcc0.ɵɵviewQuery(CdkHeaderCellDef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef, CdkHeaderCellDef, CdkCellDef, CdkHeaderCell, CdkCell], encapsulation: 2 });\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); };\nCdkTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[ScrollingModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n                imports: [ScrollingModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; }, imports: function () { return [ScrollingModule]; }, exports: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n\n","import { InjectionToken, EventEmitter, Directive, Optional, Inject, Input, Output, ɵɵdefineInjectable, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r0._getArrowViewState())(\"@arrowPosition\", ctx_r0._getArrowViewState())(\"@allowChildren\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r0._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nclass MatSortBase {\n}\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortMixinBase {\n    constructor(_defaultOptions) {\n        super();\n        this._defaultOptions = _defaultOptions;\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /** The sort direction of the currently active MatSortable. */\n    get direction() { return this._direction; }\n    set direction(direction) {\n        if (direction && direction !== 'asc' && direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        var _a, _b, _c;\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = (_b = (_a = sortable === null || sortable === void 0 ? void 0 : sortable.disableClear) !== null && _a !== void 0 ? _a : this.disableClear) !== null && _b !== void 0 ? _b : !!((_c = this._defaultOptions) === null || _c === void 0 ? void 0 : _c.disableClear);\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return new (t || MatSort)(ɵngcc0.ɵɵdirectiveInject(MAT_SORT_DEFAULT_OPTIONS, 8)); };\nMatSort.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatSort.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SORT_DEFAULT_OPTIONS,] }] }\n];\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SORT_DEFAULT_OPTIONS]\n            }] }]; }, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         * @deprecated Not used anymore. To be removed.\n         * @breaking-change 8.0.0\n         */\n        this.sortButtonLabel = (id) => {\n            return `Change sorting for ${id}`;\n        };\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\nMatSortHeaderIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nclass MatSortHeaderBase {\n}\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    constructor(_intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._handleStateChanges();\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription =\n            merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n                if (this._isSorted()) {\n                    this._updateArrowDirection();\n                    // Do not show the animation if the header was already shown in the right position.\n                    if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                        this._disableViewStateAnimation = true;\n                    }\n                    this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                    this._showIndicatorHint = false;\n                }\n                // If this header was recently active and now no longer sorted, animate away the arrow.\n                if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = false;\n                    this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n                }\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"keydown\", function MatSortHeader_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 6, consts: [[\"role\", \"button\", 1, \"mat-sort-header-container\", \"mat-focus-indicator\"], [1, \"mat-sort-header-content\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._isDisabled() ? null : 0);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     role=\\\"button\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSortModule {\n}\nMatSortModule.ɵfac = function MatSortModule_Factory(t) { return new (t || MatSortModule)(); };\nMatSortModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule, MatCommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort, MatSortHeader]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSort, MatSortHeader]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.ɵfac = /*@__PURE__*/ function () { let ɵMatTable_BaseFactory; return function MatTable_Factory(t) { return (ɵMatTable_BaseFactory || (ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable)))(t || MatTable); }; }();\nMatTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], hostVars: 2, hostBindings: function MatTable_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-table-fixed-layout\", ctx.fixedLayout);\n    } }, exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n            //  is only included in the build if used.\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 0);\n        ɵngcc0.ɵɵelementContainer(3, 1);\n        ɵngcc0.ɵɵelementContainer(4, 2);\n        ɵngcc0.ɵɵelementContainer(5, 3);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.NoDataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table',\n                    '[class.mat-table-fixed-layout]': 'fixedLayout'\n                },\n                providers: [\n                    // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                    //  is only included in the build if used.\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable },\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatCellDef_BaseFactory; return function MatCellDef_Factory(t) { return (ɵMatCellDef_BaseFactory || (ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef)))(t || MatCellDef); }; }();\nMatCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderCellDef_BaseFactory; return function MatHeaderCellDef_Factory(t) { return (ɵMatHeaderCellDef_BaseFactory || (ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef)))(t || MatHeaderCellDef); }; }();\nMatHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterCellDef_BaseFactory; return function MatFooterCellDef_Factory(t) { return (ɵMatFooterCellDef_BaseFactory || (ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef)))(t || MatFooterCellDef); }; }();\nMatFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() { return this._name; }\n    set name(name) { this._setNameInput(name); }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.ɵfac = /*@__PURE__*/ function () { let ɵMatColumnDef_BaseFactory; return function MatColumnDef_Factory(t) { return (ɵMatColumnDef_BaseFactory || (ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef)))(t || MatColumnDef); }; }();\nMatColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderCell_BaseFactory; return function MatHeaderCell_Factory(t) { return (ɵMatHeaderCell_BaseFactory || (ɵMatHeaderCell_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCell)))(t || MatHeaderCell); }; }();\nMatHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], null, null); })();\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterCell_BaseFactory; return function MatFooterCell_Factory(t) { return (ɵMatFooterCell_BaseFactory || (ɵMatFooterCell_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCell)))(t || MatFooterCell); }; }();\nMatFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], null, null); })();\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.ɵfac = /*@__PURE__*/ function () { let ɵMatCell_BaseFactory; return function MatCell_Factory(t) { return (ɵMatCell_BaseFactory || (ɵMatCell_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCell)))(t || MatCell); }; }();\nMatCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderRowDef_BaseFactory; return function MatHeaderRowDef_Factory(t) { return (ɵMatHeaderRowDef_BaseFactory || (ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef)))(t || MatHeaderRowDef); }; }();\nMatHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterRowDef_BaseFactory; return function MatFooterRowDef_Factory(t) { return (ɵMatFooterRowDef_BaseFactory || (ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef)))(t || MatFooterRowDef); }; }();\nMatFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatRowDef_BaseFactory; return function MatRowDef_Factory(t) { return (ɵMatRowDef_BaseFactory || (ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef)))(t || MatRowDef); }; }();\nMatRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderRow_BaseFactory; return function MatHeaderRow_Factory(t) { return (ɵMatHeaderRow_BaseFactory || (ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow)))(t || MatHeaderRow); }; }();\nMatHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterRow_BaseFactory; return function MatFooterRow_Factory(t) { return (ɵMatFooterRow_BaseFactory || (ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow)))(t || MatFooterRow); }; }();\nMatFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = /*@__PURE__*/ function () { let ɵMatRow_BaseFactory; return function MatRow_Factory(t) { return (ɵMatRow_BaseFactory || (ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow)))(t || MatRow); }; }();\nMatRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n}\nMatNoDataRow.ɵfac = /*@__PURE__*/ function () { let ɵMatNoDataRow_BaseFactory; return function MatNoDataRow_Factory(t) { return (ɵMatNoDataRow_BaseFactory || (ɵMatNoDataRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNoDataRow)))(t || MatNoDataRow); }; }();\nMatNoDataRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatNoDataRow, selectors: [[\"ng-template\", \"matNoDataRow\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkNoDataRow, useExisting: MatNoDataRow }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNoDataRow, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matNoDataRow]',\n                providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = /*@__PURE__*/ function () { let ɵMatTextColumn_BaseFactory; return function MatTextColumn_Factory(t) { return (ɵMatTextColumn_BaseFactory || (ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn)))(t || MatTextColumn); }; }();\nMatTextColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef, MatHeaderCellDef, MatCellDef, MatHeaderCell, MatCell], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = function MatTableModule_Factory(t) { return new (t || MatTableModule)(); };\nMatTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatCommonModule, MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass _MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data).reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() { return this._data.value; }\n    set data(data) {\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() { return this._filter.value; }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() { return this._sort; }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() { return this._paginator; }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        var _a;\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort ?\n            merge(this._sort.sortChange, this._sort.initialized) :\n            of(null);\n        const pageChange = this._paginator ?\n            merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized) :\n            of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData = (this.filter == null || this.filter === '') ? data :\n            data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        var _a;\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn, _MatTableDataSource };\n\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subject } from \"rxjs\";\r\nimport { shareReplay } from \"rxjs/operators\";\r\nimport { NotificationService } from \"src/app/shared/services/notification.service\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { PaginatedResponse } from \"../shared/models/response.model\";\r\nimport { ErrorService } from \"../shared/services/error.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserService {\r\n  private apiUrl = environment.url;\r\n  private companyList: PaginatedResponse = new PaginatedResponse();\r\n  private companysListener = new Subject<PaginatedResponse>();\r\n  private companyAdminList: PaginatedResponse = new PaginatedResponse();\r\n  private companyAdminListener = new Subject<PaginatedResponse>();\r\n  private accountantList: PaginatedResponse = new PaginatedResponse();\r\n  private accountantListener = new Subject<PaginatedResponse>();\r\n  private staffs: PaginatedResponse = new PaginatedResponse();\r\n  private staffsListener = new Subject<PaginatedResponse>();\r\n  private staffsCreateErrorListener = new Subject<any[]>();\r\n  private staffLevels: PaginatedResponse = new PaginatedResponse();\r\n  private staffLevelsListener = new Subject<PaginatedResponse>();\r\n  private departments: PaginatedResponse = new PaginatedResponse();\r\n  private departmentsListener = new Subject<PaginatedResponse>();\r\n  private vendors: PaginatedResponse = new PaginatedResponse();\r\n  private vendorsListener = new Subject<PaginatedResponse>();\r\n  private vendorStaffs = new PaginatedResponse();\r\n  private vendorStaffsListener = new Subject<PaginatedResponse>();\r\n  private isLoadingListener = new Subject<boolean>();\r\n  private deactivatingListener = new Subject<boolean>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private notificationService: NotificationService,\r\n    private errorService: ErrorService\r\n  ) {}\r\n\r\n  getIsLoadingListener() {\r\n    return this.isLoadingListener.asObservable();\r\n  }\r\n\r\n  getCompanyList(pageSize = 10, pageIndex = 0) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/companys/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          this.companyList = res;\r\n          this.companysListener.next({ ...this.companyList });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getCompanyListUpdate() {\r\n    return this.companysListener.asObservable();\r\n  }\r\n\r\n  createCompany(formData) {\r\n    this.isLoadingListener.next(true);\r\n    this.http\r\n      .post(`${this.apiUrl}auth/companys/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          this.isLoadingListener.next(false);\r\n          this.notificationService.success(\r\n            `Success`,\r\n            `Company onboard successful`\r\n          );\r\n          this.router.navigate([\"/user/company-list\"]);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          const errorMessage =\r\n            err.error.message || err.error.details || err.error.error;\r\n          this.notificationService.danger(`Error`, errorMessage);\r\n          this.isLoadingListener.next(false);\r\n          this.errorService.handleError(errorMessage);\r\n        }\r\n      );\r\n  }\r\n\r\n  uploadStaff(employees) {\r\n    this.http\r\n      .post(`${this.apiUrl}auth/bulk-employee/`, employees)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n          this.isLoadingListener.next(false);\r\n          this.notificationService.success(\r\n            `Successful`,\r\n            `User(s) account created`\r\n          );\r\n          this.router.navigate([\"/user/staff-list\"]);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          console.log(err.error);\r\n          this.staffsCreateErrorListener.next(err.error);\r\n          // this.notificationService.danger(`Error`, `An unknown error occured`);\r\n          this.isLoadingListener.next(false);\r\n          this.errorService.handleError(err.error.message || err.error.details);\r\n        }\r\n      );\r\n  }\r\n\r\n  deactivateUser(user) {\r\n    // TODO: refactor code to take either phone or email\r\n    this.http\r\n      .post(`${this.apiUrl}auth/change-user-status/`, {\r\n        user_email: user.email || user.phone_number,\r\n        status: user.is_active,\r\n      })\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log(response);\r\n          this.notificationService.success(\"Success\", response.message);\r\n          this.deactivatingListener.next(true);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.notificationService.danger(\"Error\", err.error.message);\r\n          this.deactivatingListener.next(true);\r\n        }\r\n      );\r\n    return this.deactivatingListener.asObservable();\r\n  }\r\n\r\n  getStaffCreationErrorUpdate() {\r\n    return this.staffsCreateErrorListener.asObservable();\r\n  }\r\n\r\n  getCompanyAdminList(pageSize = 10, pageIndex = 0, company) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}&${\r\n      company ? \"&company=\" + company : \"\"\r\n    }`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/cmp-adm/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          this.companyAdminList = res;\r\n          this.companyAdminListener.next({ ...this.companyAdminList });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getCompanyAdminListUpdate() {\r\n    return this.companyAdminListener.asObservable();\r\n  }\r\n\r\n  createCompanyAdmin(formData) {\r\n    console.log(formData);\r\n    this.isLoadingListener.next(true);\r\n    this.http\r\n      .post(`${this.apiUrl}auth/cmp-adm/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response: any) => {\r\n          this.notificationService.success(response.status, response.message);\r\n          this.router.navigate([\"/user/company-admin-list\"]);\r\n          this.isLoadingListener.next(false);\r\n        },\r\n        (err) => {\r\n          this.notificationService.danger(`Error`, `An unknown error occured`);\r\n          this.isLoadingListener.next(false);\r\n          this.errorService.handleError(err.error.message || err.error.details);\r\n        }\r\n      );\r\n  }\r\n\r\n  getAccountantList(pageSize = 10, pageIndex = 0, company) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}&${\r\n      company ? \"&company=\" + company : \"\"\r\n    }`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/cmp-act/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          this.accountantList = res;\r\n          this.accountantListener.next({ ...this.accountantList });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getAccountantUpdate() {\r\n    return this.accountantListener.asObservable();\r\n  }\r\n\r\n  createAccountant(formData) {\r\n    this.http\r\n      .post(`${this.apiUrl}auth/cmp-act/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response: { status: string; message: string }) => {\r\n          this.notificationService.success(response.status, response.message);\r\n          this.router.navigate([\"/user/accountant-list\"]);\r\n        },\r\n        (err) => {\r\n          this.notificationService.danger(`Error`, `An unknown error occured`);\r\n          // this.errorService.handleError(err.error.message);\r\n          this.errorService.handleError(err.error.message || err.error.details);\r\n        }\r\n      );\r\n  }\r\n\r\n  getStaffList(pageSize: number = 10, pageIndex: number = 0) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/staffs/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          // console.log(res)\r\n          this.staffs = res;\r\n          this.staffsListener.next({ ...this.staffs });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getStaffListUpdate() {\r\n    return this.staffsListener.asObservable();\r\n  }\r\n\r\n  createStaff(formData) {\r\n    this.http\r\n      .post(`${this.apiUrl}auth/staffs/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          this.notificationService.success(\r\n            `Success`,\r\n            `staff account creation successful`\r\n          );\r\n          this.router.navigate([\"/staff-list\"]);\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  createStaffLevel(formData) {\r\n    console.log(formData);\r\n    this.http\r\n      .post(`${this.apiUrl}auth/staff-level/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          this.notificationService.success(\r\n            `Success`,\r\n            `staff Level creation successful`\r\n          );\r\n          this.router.navigate([\"user/staff-level-list\"]);\r\n        },\r\n        (err) => {\r\n          this.errorService.handleError(err.error.message || err.error.details);\r\n          console.log(err);\r\n          this.notificationService.danger(\r\n            `Error`,\r\n            `Department creation was unsuccessful`\r\n          );\r\n          this.notificationService.danger(``, `${err.error.name || err.name}`);\r\n        }\r\n      );\r\n  }\r\n\r\n  getStaffLevels() {\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/staff-level/`)\r\n      .subscribe(\r\n        (res) => {\r\n          console.log(res);\r\n          this.staffLevels = res;\r\n          this.staffLevelsListener.next({ ...this.staffLevels });\r\n        },\r\n        (err) => {}\r\n      );\r\n    return this.staffLevelsListener.asObservable();\r\n  }\r\n\r\n  getDepartments(pageSize = 10, pageIndex = 0) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/departments/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          this.departments = res;\r\n          this.departmentsListener.next({ ...this.departments });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getDepartmentsUpdate() {\r\n    return this.departmentsListener.asObservable();\r\n  }\r\n\r\n  createDepartment(formData) {\r\n    this.http\r\n      .post(`${this.apiUrl}auth/departments/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          this.notificationService.success(\r\n            `Success`,\r\n            `Department creation successful`\r\n          );\r\n          this.router.navigate([\"/user/department-list\"]);\r\n        },\r\n        (err) => {\r\n          this.errorService.handleError(err.error.message || err.error.details);\r\n          this.notificationService.danger(\r\n            `Error`,\r\n            `Department creation was unsuccessful`\r\n          );\r\n          this.notificationService.danger(``, `${err.error.name || err.name}`);\r\n        }\r\n      );\r\n  }\r\n\r\n  getVendors(pageSize = 10, pageIndex = 0, company = null) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}&${\r\n      company ? \"&company=\" + company : \"\"\r\n    }`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/vendor/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          this.vendors = res;\r\n          this.vendorsListener.next({ ...this.vendors });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getVendorsUpdate() {\r\n    return this.vendorsListener.asObservable();\r\n  }\r\n\r\n  createVendor(formData) {\r\n    this.http\r\n      .post(`${this.apiUrl}auth/vendor/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          this.notificationService.success(\r\n            `Success`,\r\n            `Vendor account creation successful`\r\n          );\r\n          this.router.navigate([\"/user/vendor-list\"]);\r\n        },\r\n        (err) => {\r\n          const errorMessage =\r\n            err.error.message || err.error.details || err.error.error;\r\n          this.notificationService.danger(`Error`, errorMessage);\r\n          this.errorService.handleError(errorMessage);\r\n        }\r\n      );\r\n  }\r\n\r\n  getVendorStaffs(pageSize = 10, pageIndex = 0) {\r\n    const query = `?limit=${pageSize}&offset=${pageIndex}`;\r\n    this.http\r\n      .get<PaginatedResponse>(`${this.apiUrl}auth/vendor-staff/${query}`)\r\n      .subscribe(\r\n        (res) => {\r\n          this.vendorStaffs = res;\r\n          this.vendorStaffsListener.next({ ...this.vendorStaffs });\r\n        },\r\n        (err) => {}\r\n      );\r\n  }\r\n\r\n  getVendorStaffsUpdate() {\r\n    return this.vendorStaffsListener.asObservable();\r\n  }\r\n\r\n  createVendorStaff(formData) {\r\n    this.http\r\n      .post(`${this.apiUrl}auth/vendor-staff/`, formData)\r\n      .pipe(shareReplay())\r\n      .subscribe(\r\n        (response) => {\r\n          this.notificationService.success(\r\n            `Success`,\r\n            `Vendor account creation successful`\r\n          );\r\n          this.router.navigate([\"/user/vendor-staff-list\"]);\r\n        },\r\n        (err) => {\r\n          this.notificationService.warning(\r\n            `Error`,\r\n            `Account creation was unsuccessful`\r\n          );\r\n          this.errorService.handleError(err.error.message || err.error.details);\r\n        }\r\n      );\r\n  }\r\n}\r\n"],"names":["Directionality","coerceBooleanProperty","isDataSource","_VIEW_REPEATER_STRATEGY","_DisposeViewRepeaterStrategy","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵstyleProp","justify","ɵɵadvance","ɵɵtextInterpolate1","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","DataSource","Platform","ViewportRuler","ScrollingModule","DOCUMENT","InjectionToken","Directive","TemplateRef","Inject","Optional","Input","ContentChild","ElementRef","Injectable","NgZone","IterableDiffers","ViewContainerRef","Component","ChangeDetectionStrategy","ViewEncapsulation","EmbeddedViewRef","ChangeDetectorRef","Attribute","SkipSelf","ViewChild","ContentChildren","NgModule","Subject","from","BehaviorSubject","isObservable","of","takeUntil","take","mixinHasStickyInput","base","constructor","args","_sticky","_hasStickyChanged","sticky","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","ɵfac","CdkCellDef_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ngDevMode","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","_setNameInput","stickyEnd","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","value","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","cell","first","headerCell","footerCell","inputs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","BaseCdkCell","columnDef","elementRef","classList","nativeElement","className","add","CdkHeaderCell","CdkHeaderCell_Factory","hostAttrs","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","ngOnDestroy","next","complete","_getScheduleObservable","pipe","subscribe","length","isStable","Promise","resolve","undefined","onStable","_CoalescedStyleScheduler_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","ngOnChanges","changes","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","ɵɵNgOnChangesFeature","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","ɵɵdefineComponent","decls","vars","consts","CdkHeaderRow_Template","ɵɵelementContainer","directives","encapsulation","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","templateRef","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","nodeType","ELEMENT_NODE","i","children","_scheduleStyleChanges","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","_a","_b","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_viewRepeater","_stickyPositioningListener","_viewportRuler","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","viewChange","Number","MAX_VALUE","setAttribute","nodeName","trackBy","_trackByFn","fn","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","clear","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","forEachOperation","prevIndex","previousIndex","renderRow","_renderRow","view","get","move","_updateRowIndexContext","forEachIdentityChange","rowView","addColumnDef","removeColumnDef","delete","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","def","_stickyStyler","forEach","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","_defaultRowDef","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isArray","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","createEmbeddedView","cellTemplate","_getCellTemplates","markForCheck","renderIndex","count","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","CdkTable_Factory","ɵɵinjectAttribute","CdkTable_ContentQueries","viewQuery","CdkTable_Query","ɵɵviewQuery","hostVars","hostBindings","CdkTable_HostBindings","ɵɵclassProp","exportAs","useClass","useValue","ngContentSelectors","CdkTable_Template","ɵɵprojectionDef","ɵɵprojection","styles","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","EventEmitter","Output","mixinInitialized","mixinDisabled","AnimationDurations","AnimationCurves","MatCommonModule","FocusMonitor","SPACE","ENTER","merge","trigger","transition","animate","keyframes","query","animateChild","CommonModule","MatSortHeader_div_3_Template","_r2","ɵɵgetCurrentView","ɵɵlistener","MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener","ɵɵrestoreView","_disableViewStateAnimation","MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener","ctx_r3","ɵɵelement","ɵɵproperty","_getArrowViewState","_getArrowDirectionState","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MAT_SORT_DEFAULT_OPTIONS","MatSortBase","_MatSortMixinBase","MatSort","_defaultOptions","sortables","_stateChanges","_direction","sortChange","disableClear","_disableClear","register","sortable","deregister","sort","active","getNextSortDirection","emit","_c","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","_markInitialized","MatSort_Factory","disabled","outputs","sortOrder","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","transform","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","allowChildren","optional","MatSortHeaderIntl","sortButtonLabel","MatSortHeaderIntl_Factory","providedIn","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","parentIntl","MAT_SORT_HEADER_INTL_PROVIDER","deps","useFactory","MatSortHeaderBase","_MatSortHeaderMixinBase","MatSortHeader","_intl","_sort","_columnDef","_focusMonitor","_showIndicatorHint","_viewState","_arrowDirection","_handleStateChanges","_updateArrowDirection","_setAnimationTransitionState","toState","_isSorted","ngAfterViewInit","monitor","origin","newState","_setIndicatorHintVisible","stopMonitoring","_rerenderSubscription","visible","_isDisabled","fromState","viewState","_toggleOnInteraction","_handleClick","_handleKeydown","event","keyCode","preventDefault","_getAriaSortAttribute","_renderArrow","MatSortHeader_Factory","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","MatSortHeader_keydown_HostBindingHandler","$event","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","ɵɵattribute","attrs","MatSortHeader_Template","NgIf","animation","changeDetection","MatSortModule","MatSortModule_Factory","providers","_isNumberValue","combineLatest","MatTextColumn_th_1_Template","MatTextColumn_td_2_Template","MatTable","arguments","ɵMatTable_BaseFactory","MatTable_Factory","ɵɵgetInheritedFactory","MatTable_HostBindings","MatTable_Template","MatCellDef","ɵMatCellDef_BaseFactory","MatCellDef_Factory","MatHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatHeaderCellDef_Factory","MatFooterCellDef","ɵMatFooterCellDef_BaseFactory","MatFooterCellDef_Factory","MatColumnDef","ɵMatColumnDef_BaseFactory","MatColumnDef_Factory","MatHeaderCell","ɵMatHeaderCell_BaseFactory","MatHeaderCell_Factory","MatFooterCell","ɵMatFooterCell_BaseFactory","MatFooterCell_Factory","MatCell","ɵMatCell_BaseFactory","MatCell_Factory","MatHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","MatHeaderRowDef_Factory","MatFooterRowDef","ɵMatFooterRowDef_BaseFactory","MatFooterRowDef_Factory","MatRowDef","ɵMatRowDef_BaseFactory","MatRowDef_Factory","MatHeaderRow","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Factory","MatHeaderRow_Template","MatFooterRow","ɵMatFooterRow_BaseFactory","MatFooterRow_Factory","MatFooterRow_Template","MatRow","ɵMatRow_BaseFactory","MatRow_Factory","MatRow_Template","MatNoDataRow","ɵMatNoDataRow_BaseFactory","MatNoDataRow_Factory","MatTextColumn","ɵMatTextColumn_BaseFactory","MatTextColumn_Factory","MatTextColumn_Template","MatTableModule","MatTableModule_Factory","MAX_SAFE_INTEGER","_MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","a","b","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","_updateChangeSubscription","_filterData","paginator","_paginator","initialized","pageChange","page","filteredData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","then","lastPageIndex","Math","ceil","newPageIndex","min","MatTableDataSource"],"sourceRoot":"webpack:///"}